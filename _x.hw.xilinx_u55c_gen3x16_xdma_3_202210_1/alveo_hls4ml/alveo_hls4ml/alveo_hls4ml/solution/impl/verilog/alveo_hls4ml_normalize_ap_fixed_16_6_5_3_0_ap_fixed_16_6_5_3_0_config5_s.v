// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module alveo_hls4ml_normalize_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config5_s (
        ap_clk,
        ap_rst,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        p_read18,
        p_read19,
        p_read20,
        p_read21,
        p_read22,
        p_read23,
        p_read24,
        p_read25,
        p_read26,
        p_read27,
        p_read28,
        p_read29,
        p_read30,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [14:0] p_read;
input  [14:0] p_read1;
input  [14:0] p_read2;
input  [14:0] p_read3;
input  [14:0] p_read4;
input  [14:0] p_read5;
input  [14:0] p_read6;
input  [14:0] p_read7;
input  [14:0] p_read8;
input  [14:0] p_read9;
input  [14:0] p_read10;
input  [14:0] p_read11;
input  [14:0] p_read12;
input  [14:0] p_read13;
input  [14:0] p_read14;
input  [14:0] p_read15;
input  [14:0] p_read16;
input  [14:0] p_read17;
input  [14:0] p_read18;
input  [14:0] p_read19;
input  [14:0] p_read20;
input  [14:0] p_read21;
input  [14:0] p_read22;
input  [14:0] p_read23;
input  [14:0] p_read24;
input  [14:0] p_read25;
input  [14:0] p_read26;
input  [14:0] p_read27;
input  [14:0] p_read28;
input  [14:0] p_read29;
input  [14:0] p_read30;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;
output  [15:0] ap_return_10;
output  [15:0] ap_return_11;
output  [15:0] ap_return_12;
output  [15:0] ap_return_13;
output  [15:0] ap_return_14;
output  [15:0] ap_return_15;
output  [15:0] ap_return_16;
output  [15:0] ap_return_17;
output  [15:0] ap_return_18;
output  [15:0] ap_return_19;
output  [15:0] ap_return_20;
output  [15:0] ap_return_21;
output  [15:0] ap_return_22;
output  [15:0] ap_return_23;
output  [15:0] ap_return_24;
output  [15:0] ap_return_25;
output  [15:0] ap_return_26;
output  [15:0] ap_return_27;
output  [15:0] ap_return_28;
output  [15:0] ap_return_29;
output  [15:0] ap_return_30;
input   ap_ce;

reg[15:0] ap_return_0;
reg[15:0] ap_return_1;
reg[15:0] ap_return_2;
reg[15:0] ap_return_3;
reg[15:0] ap_return_4;
reg[15:0] ap_return_5;
reg[15:0] ap_return_6;
reg[15:0] ap_return_7;
reg[15:0] ap_return_8;
reg[15:0] ap_return_9;
reg[15:0] ap_return_10;
reg[15:0] ap_return_11;
reg[15:0] ap_return_12;
reg[15:0] ap_return_13;
reg[15:0] ap_return_14;
reg[15:0] ap_return_15;
reg[15:0] ap_return_16;
reg[15:0] ap_return_17;
reg[15:0] ap_return_18;
reg[15:0] ap_return_19;
reg[15:0] ap_return_20;
reg[15:0] ap_return_21;
reg[15:0] ap_return_22;
reg[15:0] ap_return_23;
reg[15:0] ap_return_24;
reg[15:0] ap_return_25;
reg[15:0] ap_return_26;
reg[15:0] ap_return_27;
reg[15:0] ap_return_28;
reg[15:0] ap_return_29;
reg[15:0] ap_return_30;

wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
wire    ap_block_pp0_stage0;
wire  signed [25:0] grp_fu_969_p3;
wire  signed [25:0] grp_fu_978_p3;
wire  signed [25:0] grp_fu_987_p3;
wire  signed [25:0] grp_fu_996_p3;
wire  signed [25:0] grp_fu_1005_p3;
wire  signed [25:0] grp_fu_1014_p3;
wire  signed [25:0] grp_fu_1023_p3;
wire  signed [25:0] grp_fu_1032_p3;
wire  signed [25:0] grp_fu_1041_p3;
wire  signed [25:0] grp_fu_1050_p3;
wire  signed [25:0] grp_fu_1059_p3;
wire  signed [25:0] grp_fu_1068_p3;
wire   [25:0] grp_fu_1077_p3;
wire  signed [25:0] grp_fu_1086_p3;
wire  signed [25:0] grp_fu_1095_p3;
wire   [25:0] grp_fu_1104_p3;
wire  signed [25:0] grp_fu_1113_p3;
wire  signed [25:0] grp_fu_1122_p3;
wire  signed [25:0] grp_fu_1131_p3;
wire  signed [25:0] grp_fu_1140_p3;
wire  signed [25:0] grp_fu_1149_p3;
wire  signed [25:0] grp_fu_1158_p3;
wire  signed [25:0] grp_fu_1167_p3;
wire   [25:0] grp_fu_1176_p3;
wire   [25:0] grp_fu_1185_p3;
wire   [25:0] grp_fu_1194_p3;
wire  signed [25:0] grp_fu_1203_p3;
wire  signed [25:0] grp_fu_1212_p3;
wire  signed [25:0] grp_fu_1221_p3;
wire  signed [25:0] grp_fu_1230_p3;
wire  signed [25:0] grp_fu_1239_p3;
wire   [14:0] grp_fu_969_p0;
wire   [10:0] grp_fu_969_p1;
wire  signed [20:0] grp_fu_969_p2;
wire   [14:0] grp_fu_978_p0;
wire   [10:0] grp_fu_978_p1;
wire  signed [20:0] grp_fu_978_p2;
wire   [14:0] grp_fu_987_p0;
wire   [10:0] grp_fu_987_p1;
wire  signed [18:0] grp_fu_987_p2;
wire   [14:0] grp_fu_996_p0;
wire   [10:0] grp_fu_996_p1;
wire  signed [20:0] grp_fu_996_p2;
wire   [14:0] grp_fu_1005_p0;
wire   [10:0] grp_fu_1005_p1;
wire  signed [17:0] grp_fu_1005_p2;
wire   [14:0] grp_fu_1014_p0;
wire   [10:0] grp_fu_1014_p1;
wire  signed [19:0] grp_fu_1014_p2;
wire   [14:0] grp_fu_1023_p0;
wire   [10:0] grp_fu_1023_p1;
wire  signed [19:0] grp_fu_1023_p2;
wire   [14:0] grp_fu_1032_p0;
wire   [10:0] grp_fu_1032_p1;
wire  signed [19:0] grp_fu_1032_p2;
wire   [14:0] grp_fu_1041_p0;
wire   [10:0] grp_fu_1041_p1;
wire  signed [20:0] grp_fu_1041_p2;
wire   [14:0] grp_fu_1050_p0;
wire   [10:0] grp_fu_1050_p1;
wire  signed [18:0] grp_fu_1050_p2;
wire   [14:0] grp_fu_1059_p0;
wire   [10:0] grp_fu_1059_p1;
wire  signed [21:0] grp_fu_1059_p2;
wire   [14:0] grp_fu_1068_p0;
wire   [10:0] grp_fu_1068_p1;
wire  signed [21:0] grp_fu_1068_p2;
wire   [14:0] grp_fu_1077_p0;
wire   [11:0] grp_fu_1077_p1;
wire   [17:0] grp_fu_1077_p2;
wire   [14:0] grp_fu_1086_p0;
wire   [10:0] grp_fu_1086_p1;
wire  signed [21:0] grp_fu_1086_p2;
wire   [14:0] grp_fu_1095_p0;
wire   [10:0] grp_fu_1095_p1;
wire  signed [19:0] grp_fu_1095_p2;
wire   [14:0] grp_fu_1104_p0;
wire   [10:0] grp_fu_1104_p1;
wire   [17:0] grp_fu_1104_p2;
wire   [14:0] grp_fu_1113_p0;
wire   [12:0] grp_fu_1113_p1;
wire  signed [20:0] grp_fu_1113_p2;
wire   [14:0] grp_fu_1122_p0;
wire   [10:0] grp_fu_1122_p1;
wire  signed [20:0] grp_fu_1122_p2;
wire   [14:0] grp_fu_1131_p0;
wire   [10:0] grp_fu_1131_p1;
wire  signed [19:0] grp_fu_1131_p2;
wire   [14:0] grp_fu_1140_p0;
wire   [12:0] grp_fu_1140_p1;
wire  signed [18:0] grp_fu_1140_p2;
wire   [14:0] grp_fu_1149_p0;
wire   [11:0] grp_fu_1149_p1;
wire  signed [19:0] grp_fu_1149_p2;
wire   [14:0] grp_fu_1158_p0;
wire   [10:0] grp_fu_1158_p1;
wire  signed [21:0] grp_fu_1158_p2;
wire   [14:0] grp_fu_1167_p0;
wire   [10:0] grp_fu_1167_p1;
wire  signed [18:0] grp_fu_1167_p2;
wire   [14:0] grp_fu_1176_p0;
wire   [10:0] grp_fu_1176_p1;
wire   [16:0] grp_fu_1176_p2;
wire   [14:0] grp_fu_1185_p0;
wire   [12:0] grp_fu_1185_p1;
wire   [16:0] grp_fu_1185_p2;
wire   [14:0] grp_fu_1194_p0;
wire   [11:0] grp_fu_1194_p1;
wire   [15:0] grp_fu_1194_p2;
wire   [14:0] grp_fu_1203_p0;
wire   [10:0] grp_fu_1203_p1;
wire  signed [20:0] grp_fu_1203_p2;
wire   [14:0] grp_fu_1212_p0;
wire   [10:0] grp_fu_1212_p1;
wire  signed [20:0] grp_fu_1212_p2;
wire   [14:0] grp_fu_1221_p0;
wire   [11:0] grp_fu_1221_p1;
wire  signed [21:0] grp_fu_1221_p2;
wire   [14:0] grp_fu_1230_p0;
wire   [10:0] grp_fu_1230_p1;
wire  signed [21:0] grp_fu_1230_p2;
wire   [14:0] grp_fu_1239_p0;
wire   [11:0] grp_fu_1239_p1;
wire  signed [21:0] grp_fu_1239_p2;
reg    grp_fu_969_ce;
reg    grp_fu_978_ce;
reg    grp_fu_987_ce;
reg    grp_fu_996_ce;
reg    grp_fu_1005_ce;
reg    grp_fu_1014_ce;
reg    grp_fu_1023_ce;
reg    grp_fu_1032_ce;
reg    grp_fu_1041_ce;
reg    grp_fu_1050_ce;
reg    grp_fu_1059_ce;
reg    grp_fu_1068_ce;
reg    grp_fu_1077_ce;
reg    grp_fu_1086_ce;
reg    grp_fu_1095_ce;
reg    grp_fu_1104_ce;
reg    grp_fu_1113_ce;
reg    grp_fu_1122_ce;
reg    grp_fu_1131_ce;
reg    grp_fu_1140_ce;
reg    grp_fu_1149_ce;
reg    grp_fu_1158_ce;
reg    grp_fu_1167_ce;
reg    grp_fu_1176_ce;
reg    grp_fu_1185_ce;
reg    grp_fu_1194_ce;
reg    grp_fu_1203_ce;
reg    grp_fu_1212_ce;
reg    grp_fu_1221_ce;
reg    grp_fu_1230_ce;
reg    grp_fu_1239_ce;
reg    ap_ce_reg;
reg   [14:0] p_read_int_reg;
reg   [14:0] p_read1_int_reg;
reg   [14:0] p_read2_int_reg;
reg   [14:0] p_read3_int_reg;
reg   [14:0] p_read4_int_reg;
reg   [14:0] p_read5_int_reg;
reg   [14:0] p_read6_int_reg;
reg   [14:0] p_read7_int_reg;
reg   [14:0] p_read8_int_reg;
reg   [14:0] p_read9_int_reg;
reg   [14:0] p_read10_int_reg;
reg   [14:0] p_read11_int_reg;
reg   [14:0] p_read12_int_reg;
reg   [14:0] p_read13_int_reg;
reg   [14:0] p_read14_int_reg;
reg   [14:0] p_read15_int_reg;
reg   [14:0] p_read16_int_reg;
reg   [14:0] p_read17_int_reg;
reg   [14:0] p_read18_int_reg;
reg   [14:0] p_read19_int_reg;
reg   [14:0] p_read20_int_reg;
reg   [14:0] p_read21_int_reg;
reg   [14:0] p_read22_int_reg;
reg   [14:0] p_read23_int_reg;
reg   [14:0] p_read24_int_reg;
reg   [14:0] p_read25_int_reg;
reg   [14:0] p_read26_int_reg;
reg   [14:0] p_read27_int_reg;
reg   [14:0] p_read28_int_reg;
reg   [14:0] p_read29_int_reg;
reg   [14:0] p_read30_int_reg;
reg   [15:0] ap_return_0_int_reg;
reg   [15:0] ap_return_1_int_reg;
reg   [15:0] ap_return_2_int_reg;
reg   [15:0] ap_return_3_int_reg;
reg   [15:0] ap_return_4_int_reg;
reg   [15:0] ap_return_5_int_reg;
reg   [15:0] ap_return_6_int_reg;
reg   [15:0] ap_return_7_int_reg;
reg   [15:0] ap_return_8_int_reg;
reg   [15:0] ap_return_9_int_reg;
reg   [15:0] ap_return_10_int_reg;
reg   [15:0] ap_return_11_int_reg;
reg   [15:0] ap_return_12_int_reg;
reg   [15:0] ap_return_13_int_reg;
reg   [15:0] ap_return_14_int_reg;
reg   [15:0] ap_return_15_int_reg;
reg   [15:0] ap_return_16_int_reg;
reg   [15:0] ap_return_17_int_reg;
reg   [15:0] ap_return_18_int_reg;
reg   [15:0] ap_return_19_int_reg;
reg   [15:0] ap_return_20_int_reg;
reg   [15:0] ap_return_21_int_reg;
reg   [15:0] ap_return_22_int_reg;
reg   [15:0] ap_return_23_int_reg;
reg   [15:0] ap_return_24_int_reg;
reg   [15:0] ap_return_25_int_reg;
reg   [15:0] ap_return_26_int_reg;
reg   [15:0] ap_return_27_int_reg;
reg   [15:0] ap_return_28_int_reg;
reg   [15:0] ap_return_29_int_reg;
reg   [15:0] ap_return_30_int_reg;
wire   [25:0] grp_fu_1005_p00;
wire   [25:0] grp_fu_1014_p00;
wire   [25:0] grp_fu_1023_p00;
wire   [25:0] grp_fu_1032_p00;
wire   [25:0] grp_fu_1041_p00;
wire   [25:0] grp_fu_1050_p00;
wire   [25:0] grp_fu_1059_p00;
wire   [25:0] grp_fu_1068_p00;
wire   [25:0] grp_fu_1077_p00;
wire   [25:0] grp_fu_1086_p00;
wire   [25:0] grp_fu_1095_p00;
wire   [25:0] grp_fu_1104_p00;
wire   [25:0] grp_fu_1113_p00;
wire   [25:0] grp_fu_1122_p00;
wire   [25:0] grp_fu_1131_p00;
wire   [25:0] grp_fu_1140_p00;
wire   [25:0] grp_fu_1149_p00;
wire   [25:0] grp_fu_1158_p00;
wire   [25:0] grp_fu_1167_p00;
wire   [25:0] grp_fu_1176_p00;
wire   [25:0] grp_fu_1185_p00;
wire   [25:0] grp_fu_1194_p00;
wire   [25:0] grp_fu_1203_p00;
wire   [25:0] grp_fu_1212_p00;
wire   [25:0] grp_fu_1221_p00;
wire   [25:0] grp_fu_1230_p00;
wire   [25:0] grp_fu_1239_p00;
wire   [25:0] grp_fu_969_p00;
wire   [25:0] grp_fu_978_p00;
wire   [25:0] grp_fu_987_p00;
wire   [25:0] grp_fu_996_p00;

alveo_hls4ml_mac_muladd_15ns_11ns_21s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_21s_26_4_0_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_969_p0),
    .din1(grp_fu_969_p1),
    .din2(grp_fu_969_p2),
    .ce(grp_fu_969_ce),
    .dout(grp_fu_969_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_21s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_21s_26_4_0_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_978_p0),
    .din1(grp_fu_978_p1),
    .din2(grp_fu_978_p2),
    .ce(grp_fu_978_ce),
    .dout(grp_fu_978_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_19s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_19s_26_4_0_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_987_p0),
    .din1(grp_fu_987_p1),
    .din2(grp_fu_987_p2),
    .ce(grp_fu_987_ce),
    .dout(grp_fu_987_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_21s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_21s_26_4_0_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_996_p0),
    .din1(grp_fu_996_p1),
    .din2(grp_fu_996_p2),
    .ce(grp_fu_996_ce),
    .dout(grp_fu_996_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_18s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_18s_26_4_0_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1005_p0),
    .din1(grp_fu_1005_p1),
    .din2(grp_fu_1005_p2),
    .ce(grp_fu_1005_ce),
    .dout(grp_fu_1005_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_20s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_20s_26_4_0_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1014_p0),
    .din1(grp_fu_1014_p1),
    .din2(grp_fu_1014_p2),
    .ce(grp_fu_1014_ce),
    .dout(grp_fu_1014_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_20s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_20s_26_4_0_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1023_p0),
    .din1(grp_fu_1023_p1),
    .din2(grp_fu_1023_p2),
    .ce(grp_fu_1023_ce),
    .dout(grp_fu_1023_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_20s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_20s_26_4_0_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1032_p0),
    .din1(grp_fu_1032_p1),
    .din2(grp_fu_1032_p2),
    .ce(grp_fu_1032_ce),
    .dout(grp_fu_1032_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_21s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_21s_26_4_0_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1041_p0),
    .din1(grp_fu_1041_p1),
    .din2(grp_fu_1041_p2),
    .ce(grp_fu_1041_ce),
    .dout(grp_fu_1041_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_19s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_19s_26_4_0_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1050_p0),
    .din1(grp_fu_1050_p1),
    .din2(grp_fu_1050_p2),
    .ce(grp_fu_1050_ce),
    .dout(grp_fu_1050_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_22s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_22s_26_4_0_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1059_p0),
    .din1(grp_fu_1059_p1),
    .din2(grp_fu_1059_p2),
    .ce(grp_fu_1059_ce),
    .dout(grp_fu_1059_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_22s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_22s_26_4_0_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1068_p0),
    .din1(grp_fu_1068_p1),
    .din2(grp_fu_1068_p2),
    .ce(grp_fu_1068_ce),
    .dout(grp_fu_1068_p3)
);

alveo_hls4ml_mac_muladd_15ns_12ns_18ns_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_12ns_18ns_26_4_0_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1077_p0),
    .din1(grp_fu_1077_p1),
    .din2(grp_fu_1077_p2),
    .ce(grp_fu_1077_ce),
    .dout(grp_fu_1077_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_22s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_22s_26_4_0_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1086_p0),
    .din1(grp_fu_1086_p1),
    .din2(grp_fu_1086_p2),
    .ce(grp_fu_1086_ce),
    .dout(grp_fu_1086_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_20s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_20s_26_4_0_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1095_p0),
    .din1(grp_fu_1095_p1),
    .din2(grp_fu_1095_p2),
    .ce(grp_fu_1095_ce),
    .dout(grp_fu_1095_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_18ns_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_18ns_26_4_0_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1104_p0),
    .din1(grp_fu_1104_p1),
    .din2(grp_fu_1104_p2),
    .ce(grp_fu_1104_ce),
    .dout(grp_fu_1104_p3)
);

alveo_hls4ml_mac_muladd_15ns_13ns_21s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_13ns_21s_26_4_0_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1113_p0),
    .din1(grp_fu_1113_p1),
    .din2(grp_fu_1113_p2),
    .ce(grp_fu_1113_ce),
    .dout(grp_fu_1113_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_21s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_21s_26_4_0_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1122_p0),
    .din1(grp_fu_1122_p1),
    .din2(grp_fu_1122_p2),
    .ce(grp_fu_1122_ce),
    .dout(grp_fu_1122_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_20s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_20s_26_4_0_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1131_p0),
    .din1(grp_fu_1131_p1),
    .din2(grp_fu_1131_p2),
    .ce(grp_fu_1131_ce),
    .dout(grp_fu_1131_p3)
);

alveo_hls4ml_mac_muladd_15ns_13ns_19s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_13ns_19s_26_4_0_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1140_p0),
    .din1(grp_fu_1140_p1),
    .din2(grp_fu_1140_p2),
    .ce(grp_fu_1140_ce),
    .dout(grp_fu_1140_p3)
);

alveo_hls4ml_mac_muladd_15ns_12ns_20s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_12ns_20s_26_4_0_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1149_p0),
    .din1(grp_fu_1149_p1),
    .din2(grp_fu_1149_p2),
    .ce(grp_fu_1149_ce),
    .dout(grp_fu_1149_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_22s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_22s_26_4_0_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1158_p0),
    .din1(grp_fu_1158_p1),
    .din2(grp_fu_1158_p2),
    .ce(grp_fu_1158_ce),
    .dout(grp_fu_1158_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_19s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_19s_26_4_0_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1167_p0),
    .din1(grp_fu_1167_p1),
    .din2(grp_fu_1167_p2),
    .ce(grp_fu_1167_ce),
    .dout(grp_fu_1167_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_17ns_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_17ns_26_4_0_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1176_p0),
    .din1(grp_fu_1176_p1),
    .din2(grp_fu_1176_p2),
    .ce(grp_fu_1176_ce),
    .dout(grp_fu_1176_p3)
);

alveo_hls4ml_mac_muladd_15ns_13ns_17ns_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_13ns_17ns_26_4_0_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1185_p0),
    .din1(grp_fu_1185_p1),
    .din2(grp_fu_1185_p2),
    .ce(grp_fu_1185_ce),
    .dout(grp_fu_1185_p3)
);

alveo_hls4ml_mac_muladd_15ns_12ns_16ns_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_12ns_16ns_26_4_0_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1194_p0),
    .din1(grp_fu_1194_p1),
    .din2(grp_fu_1194_p2),
    .ce(grp_fu_1194_ce),
    .dout(grp_fu_1194_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_21s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_21s_26_4_0_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1203_p0),
    .din1(grp_fu_1203_p1),
    .din2(grp_fu_1203_p2),
    .ce(grp_fu_1203_ce),
    .dout(grp_fu_1203_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_21s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_21s_26_4_0_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1212_p0),
    .din1(grp_fu_1212_p1),
    .din2(grp_fu_1212_p2),
    .ce(grp_fu_1212_ce),
    .dout(grp_fu_1212_p3)
);

alveo_hls4ml_mac_muladd_15ns_12ns_22s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_12ns_22s_26_4_0_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1221_p0),
    .din1(grp_fu_1221_p1),
    .din2(grp_fu_1221_p2),
    .ce(grp_fu_1221_ce),
    .dout(grp_fu_1221_p3)
);

alveo_hls4ml_mac_muladd_15ns_11ns_22s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_11ns_22s_26_4_0_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1230_p0),
    .din1(grp_fu_1230_p1),
    .din2(grp_fu_1230_p2),
    .ce(grp_fu_1230_ce),
    .dout(grp_fu_1230_p3)
);

alveo_hls4ml_mac_muladd_15ns_12ns_22s_26_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 26 ))
mac_muladd_15ns_12ns_22s_26_4_0_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1239_p0),
    .din1(grp_fu_1239_p1),
    .din2(grp_fu_1239_p2),
    .ce(grp_fu_1239_ce),
    .dout(grp_fu_1239_p3)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= {{grp_fu_969_p3[25:10]}};
        ap_return_10_int_reg <= {{grp_fu_1059_p3[25:10]}};
        ap_return_11_int_reg <= {{grp_fu_1068_p3[25:10]}};
        ap_return_12_int_reg <= {{grp_fu_1077_p3[25:10]}};
        ap_return_13_int_reg <= {{grp_fu_1086_p3[25:10]}};
        ap_return_14_int_reg <= {{grp_fu_1095_p3[25:10]}};
        ap_return_15_int_reg <= {{grp_fu_1104_p3[25:10]}};
        ap_return_16_int_reg <= {{grp_fu_1113_p3[25:10]}};
        ap_return_17_int_reg <= {{grp_fu_1122_p3[25:10]}};
        ap_return_18_int_reg <= {{grp_fu_1131_p3[25:10]}};
        ap_return_19_int_reg <= {{grp_fu_1140_p3[25:10]}};
        ap_return_1_int_reg <= {{grp_fu_978_p3[25:10]}};
        ap_return_20_int_reg <= {{grp_fu_1149_p3[25:10]}};
        ap_return_21_int_reg <= {{grp_fu_1158_p3[25:10]}};
        ap_return_22_int_reg <= {{grp_fu_1167_p3[25:10]}};
        ap_return_23_int_reg <= {{grp_fu_1176_p3[25:10]}};
        ap_return_24_int_reg <= {{grp_fu_1185_p3[25:10]}};
        ap_return_25_int_reg <= {{grp_fu_1194_p3[25:10]}};
        ap_return_26_int_reg <= {{grp_fu_1203_p3[25:10]}};
        ap_return_27_int_reg <= {{grp_fu_1212_p3[25:10]}};
        ap_return_28_int_reg <= {{grp_fu_1221_p3[25:10]}};
        ap_return_29_int_reg <= {{grp_fu_1230_p3[25:10]}};
        ap_return_2_int_reg <= {{grp_fu_987_p3[25:10]}};
        ap_return_30_int_reg <= {{grp_fu_1239_p3[25:10]}};
        ap_return_3_int_reg <= {{grp_fu_996_p3[25:10]}};
        ap_return_4_int_reg <= {{grp_fu_1005_p3[25:10]}};
        ap_return_5_int_reg <= {{grp_fu_1014_p3[25:10]}};
        ap_return_6_int_reg <= {{grp_fu_1023_p3[25:10]}};
        ap_return_7_int_reg <= {{grp_fu_1032_p3[25:10]}};
        ap_return_8_int_reg <= {{grp_fu_1041_p3[25:10]}};
        ap_return_9_int_reg <= {{grp_fu_1050_p3[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        p_read10_int_reg <= p_read10;
        p_read11_int_reg <= p_read11;
        p_read12_int_reg <= p_read12;
        p_read13_int_reg <= p_read13;
        p_read14_int_reg <= p_read14;
        p_read15_int_reg <= p_read15;
        p_read16_int_reg <= p_read16;
        p_read17_int_reg <= p_read17;
        p_read18_int_reg <= p_read18;
        p_read19_int_reg <= p_read19;
        p_read1_int_reg <= p_read1;
        p_read20_int_reg <= p_read20;
        p_read21_int_reg <= p_read21;
        p_read22_int_reg <= p_read22;
        p_read23_int_reg <= p_read23;
        p_read24_int_reg <= p_read24;
        p_read25_int_reg <= p_read25;
        p_read26_int_reg <= p_read26;
        p_read27_int_reg <= p_read27;
        p_read28_int_reg <= p_read28;
        p_read29_int_reg <= p_read29;
        p_read2_int_reg <= p_read2;
        p_read30_int_reg <= p_read30;
        p_read3_int_reg <= p_read3;
        p_read4_int_reg <= p_read4;
        p_read5_int_reg <= p_read5;
        p_read6_int_reg <= p_read6;
        p_read7_int_reg <= p_read7;
        p_read8_int_reg <= p_read8;
        p_read9_int_reg <= p_read9;
        p_read_int_reg <= p_read;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = {{grp_fu_969_p3[25:10]}};
    end else begin
        ap_return_0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = {{grp_fu_978_p3[25:10]}};
    end else begin
        ap_return_1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_10 = ap_return_10_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_10 = {{grp_fu_1059_p3[25:10]}};
    end else begin
        ap_return_10 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_11 = ap_return_11_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_11 = {{grp_fu_1068_p3[25:10]}};
    end else begin
        ap_return_11 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_12 = ap_return_12_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_12 = {{grp_fu_1077_p3[25:10]}};
    end else begin
        ap_return_12 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_13 = ap_return_13_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_13 = {{grp_fu_1086_p3[25:10]}};
    end else begin
        ap_return_13 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_14 = ap_return_14_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_14 = {{grp_fu_1095_p3[25:10]}};
    end else begin
        ap_return_14 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_15 = ap_return_15_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_15 = {{grp_fu_1104_p3[25:10]}};
    end else begin
        ap_return_15 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_16 = ap_return_16_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_16 = {{grp_fu_1113_p3[25:10]}};
    end else begin
        ap_return_16 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_17 = ap_return_17_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_17 = {{grp_fu_1122_p3[25:10]}};
    end else begin
        ap_return_17 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_18 = ap_return_18_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_18 = {{grp_fu_1131_p3[25:10]}};
    end else begin
        ap_return_18 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_19 = ap_return_19_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_19 = {{grp_fu_1140_p3[25:10]}};
    end else begin
        ap_return_19 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_2 = ap_return_2_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_2 = {{grp_fu_987_p3[25:10]}};
    end else begin
        ap_return_2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_20 = ap_return_20_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_20 = {{grp_fu_1149_p3[25:10]}};
    end else begin
        ap_return_20 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_21 = ap_return_21_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_21 = {{grp_fu_1158_p3[25:10]}};
    end else begin
        ap_return_21 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_22 = ap_return_22_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_22 = {{grp_fu_1167_p3[25:10]}};
    end else begin
        ap_return_22 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_23 = ap_return_23_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_23 = {{grp_fu_1176_p3[25:10]}};
    end else begin
        ap_return_23 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_24 = ap_return_24_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_24 = {{grp_fu_1185_p3[25:10]}};
    end else begin
        ap_return_24 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_25 = ap_return_25_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_25 = {{grp_fu_1194_p3[25:10]}};
    end else begin
        ap_return_25 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_26 = ap_return_26_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_26 = {{grp_fu_1203_p3[25:10]}};
    end else begin
        ap_return_26 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_27 = ap_return_27_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_27 = {{grp_fu_1212_p3[25:10]}};
    end else begin
        ap_return_27 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_28 = ap_return_28_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_28 = {{grp_fu_1221_p3[25:10]}};
    end else begin
        ap_return_28 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_29 = ap_return_29_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_29 = {{grp_fu_1230_p3[25:10]}};
    end else begin
        ap_return_29 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_3 = ap_return_3_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_3 = {{grp_fu_996_p3[25:10]}};
    end else begin
        ap_return_3 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_30 = ap_return_30_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_30 = {{grp_fu_1239_p3[25:10]}};
    end else begin
        ap_return_30 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_4 = ap_return_4_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_4 = {{grp_fu_1005_p3[25:10]}};
    end else begin
        ap_return_4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_5 = ap_return_5_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_5 = {{grp_fu_1014_p3[25:10]}};
    end else begin
        ap_return_5 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_6 = ap_return_6_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_6 = {{grp_fu_1023_p3[25:10]}};
    end else begin
        ap_return_6 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_7 = ap_return_7_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_7 = {{grp_fu_1032_p3[25:10]}};
    end else begin
        ap_return_7 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_8 = ap_return_8_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_8 = {{grp_fu_1041_p3[25:10]}};
    end else begin
        ap_return_8 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_9 = ap_return_9_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_9 = {{grp_fu_1050_p3[25:10]}};
    end else begin
        ap_return_9 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1005_ce = 1'b1;
    end else begin
        grp_fu_1005_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1014_ce = 1'b1;
    end else begin
        grp_fu_1014_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1023_ce = 1'b1;
    end else begin
        grp_fu_1023_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1032_ce = 1'b1;
    end else begin
        grp_fu_1032_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1041_ce = 1'b1;
    end else begin
        grp_fu_1041_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1050_ce = 1'b1;
    end else begin
        grp_fu_1050_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1059_ce = 1'b1;
    end else begin
        grp_fu_1059_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1068_ce = 1'b1;
    end else begin
        grp_fu_1068_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1077_ce = 1'b1;
    end else begin
        grp_fu_1077_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1086_ce = 1'b1;
    end else begin
        grp_fu_1086_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1095_ce = 1'b1;
    end else begin
        grp_fu_1095_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1104_ce = 1'b1;
    end else begin
        grp_fu_1104_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1113_ce = 1'b1;
    end else begin
        grp_fu_1113_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1122_ce = 1'b1;
    end else begin
        grp_fu_1122_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1131_ce = 1'b1;
    end else begin
        grp_fu_1131_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1140_ce = 1'b1;
    end else begin
        grp_fu_1140_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1149_ce = 1'b1;
    end else begin
        grp_fu_1149_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1158_ce = 1'b1;
    end else begin
        grp_fu_1158_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1167_ce = 1'b1;
    end else begin
        grp_fu_1167_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1176_ce = 1'b1;
    end else begin
        grp_fu_1176_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1185_ce = 1'b1;
    end else begin
        grp_fu_1185_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1194_ce = 1'b1;
    end else begin
        grp_fu_1194_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1203_ce = 1'b1;
    end else begin
        grp_fu_1203_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1212_ce = 1'b1;
    end else begin
        grp_fu_1212_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1221_ce = 1'b1;
    end else begin
        grp_fu_1221_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1230_ce = 1'b1;
    end else begin
        grp_fu_1230_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_1239_ce = 1'b1;
    end else begin
        grp_fu_1239_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_969_ce = 1'b1;
    end else begin
        grp_fu_969_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_978_ce = 1'b1;
    end else begin
        grp_fu_978_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_987_ce = 1'b1;
    end else begin
        grp_fu_987_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_996_ce = 1'b1;
    end else begin
        grp_fu_996_ce = 1'b0;
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign grp_fu_1005_p0 = grp_fu_1005_p00;

assign grp_fu_1005_p00 = p_read4_int_reg;

assign grp_fu_1005_p1 = 26'd1281;

assign grp_fu_1005_p2 = 26'd66989056;

assign grp_fu_1014_p0 = grp_fu_1014_p00;

assign grp_fu_1014_p00 = p_read5_int_reg;

assign grp_fu_1014_p1 = 26'd1560;

assign grp_fu_1014_p2 = 26'd66690048;

assign grp_fu_1023_p0 = grp_fu_1023_p00;

assign grp_fu_1023_p00 = p_read6_int_reg;

assign grp_fu_1023_p1 = 26'd1292;

assign grp_fu_1023_p2 = 26'd66689024;

assign grp_fu_1032_p0 = grp_fu_1032_p00;

assign grp_fu_1032_p00 = p_read7_int_reg;

assign grp_fu_1032_p1 = 26'd1482;

assign grp_fu_1032_p2 = 26'd66684928;

assign grp_fu_1041_p0 = grp_fu_1041_p00;

assign grp_fu_1041_p00 = p_read8_int_reg;

assign grp_fu_1041_p1 = 26'd1188;

assign grp_fu_1041_p2 = 26'd66283520;

assign grp_fu_1050_p0 = grp_fu_1050_p00;

assign grp_fu_1050_p00 = p_read9_int_reg;

assign grp_fu_1050_p1 = 26'd1880;

assign grp_fu_1050_p2 = 26'd66877440;

assign grp_fu_1059_p0 = grp_fu_1059_p00;

assign grp_fu_1059_p00 = p_read10_int_reg;

assign grp_fu_1059_p1 = 26'd1401;

assign grp_fu_1059_p2 = 26'd65990656;

assign grp_fu_1068_p0 = grp_fu_1068_p00;

assign grp_fu_1068_p00 = p_read11_int_reg;

assign grp_fu_1068_p1 = 26'd1288;

assign grp_fu_1068_p2 = 26'd65899520;

assign grp_fu_1077_p0 = grp_fu_1077_p00;

assign grp_fu_1077_p00 = p_read12_int_reg;

assign grp_fu_1077_p1 = 26'd3404;

assign grp_fu_1077_p2 = 26'd215040;

assign grp_fu_1086_p0 = grp_fu_1086_p00;

assign grp_fu_1086_p00 = p_read13_int_reg;

assign grp_fu_1086_p1 = 26'd1475;

assign grp_fu_1086_p2 = 26'd65827840;

assign grp_fu_1095_p0 = grp_fu_1095_p00;

assign grp_fu_1095_p00 = p_read14_int_reg;

assign grp_fu_1095_p1 = 26'd1481;

assign grp_fu_1095_p2 = 26'd66819072;

assign grp_fu_1104_p0 = grp_fu_1104_p00;

assign grp_fu_1104_p00 = p_read15_int_reg;

assign grp_fu_1104_p1 = 26'd2017;

assign grp_fu_1104_p2 = 26'd163840;

assign grp_fu_1113_p0 = grp_fu_1113_p00;

assign grp_fu_1113_p00 = p_read16_int_reg;

assign grp_fu_1113_p1 = 26'd5183;

assign grp_fu_1113_p2 = 26'd66510848;

assign grp_fu_1122_p0 = grp_fu_1122_p00;

assign grp_fu_1122_p00 = p_read17_int_reg;

assign grp_fu_1122_p1 = 26'd1131;

assign grp_fu_1122_p2 = 26'd66547712;

assign grp_fu_1131_p0 = grp_fu_1131_p00;

assign grp_fu_1131_p00 = p_read18_int_reg;

assign grp_fu_1131_p1 = 26'd1137;

assign grp_fu_1131_p2 = 26'd66639872;

assign grp_fu_1140_p0 = grp_fu_1140_p00;

assign grp_fu_1140_p00 = p_read19_int_reg;

assign grp_fu_1140_p1 = 26'd4178;

assign grp_fu_1140_p2 = 26'd66865152;

assign grp_fu_1149_p0 = grp_fu_1149_p00;

assign grp_fu_1149_p00 = p_read20_int_reg;

assign grp_fu_1149_p1 = 26'd2204;

assign grp_fu_1149_p2 = 26'd66726912;

assign grp_fu_1158_p0 = grp_fu_1158_p00;

assign grp_fu_1158_p00 = p_read21_int_reg;

assign grp_fu_1158_p1 = 26'd1488;

assign grp_fu_1158_p2 = 26'd65968128;

assign grp_fu_1167_p0 = grp_fu_1167_p00;

assign grp_fu_1167_p00 = p_read22_int_reg;

assign grp_fu_1167_p1 = 26'd1396;

assign grp_fu_1167_p2 = 26'd66923520;

assign grp_fu_1176_p0 = grp_fu_1176_p00;

assign grp_fu_1176_p00 = p_read23_int_reg;

assign grp_fu_1176_p1 = 26'd1305;

assign grp_fu_1176_p2 = 26'd68608;

assign grp_fu_1185_p0 = grp_fu_1185_p00;

assign grp_fu_1185_p00 = p_read24_int_reg;

assign grp_fu_1185_p1 = 26'd5661;

assign grp_fu_1185_p2 = 26'd123904;

assign grp_fu_1194_p0 = grp_fu_1194_p00;

assign grp_fu_1194_p00 = p_read25_int_reg;

assign grp_fu_1194_p1 = 26'd2755;

assign grp_fu_1194_p2 = 26'd41984;

assign grp_fu_1203_p0 = grp_fu_1203_p00;

assign grp_fu_1203_p00 = p_read26_int_reg;

assign grp_fu_1203_p1 = 26'd1927;

assign grp_fu_1203_p2 = 26'd66227200;

assign grp_fu_1212_p0 = grp_fu_1212_p00;

assign grp_fu_1212_p00 = p_read27_int_reg;

assign grp_fu_1212_p1 = 26'd1839;

assign grp_fu_1212_p2 = 26'd66342912;

assign grp_fu_1221_p0 = grp_fu_1221_p00;

assign grp_fu_1221_p00 = p_read28_int_reg;

assign grp_fu_1221_p1 = 26'd3654;

assign grp_fu_1221_p2 = 26'd65702912;

assign grp_fu_1230_p0 = grp_fu_1230_p00;

assign grp_fu_1230_p00 = p_read29_int_reg;

assign grp_fu_1230_p1 = 26'd1481;

assign grp_fu_1230_p2 = 26'd65259520;

assign grp_fu_1239_p0 = grp_fu_1239_p00;

assign grp_fu_1239_p00 = p_read30_int_reg;

assign grp_fu_1239_p1 = 26'd2810;

assign grp_fu_1239_p2 = 26'd65981440;

assign grp_fu_969_p0 = grp_fu_969_p00;

assign grp_fu_969_p00 = p_read_int_reg;

assign grp_fu_969_p1 = 26'd1114;

assign grp_fu_969_p2 = 26'd66415616;

assign grp_fu_978_p0 = grp_fu_978_p00;

assign grp_fu_978_p00 = p_read1_int_reg;

assign grp_fu_978_p1 = 26'd1351;

assign grp_fu_978_p2 = 26'd66450432;

assign grp_fu_987_p0 = grp_fu_987_p00;

assign grp_fu_987_p00 = p_read2_int_reg;

assign grp_fu_987_p1 = 26'd1866;

assign grp_fu_987_p2 = 26'd66914304;

assign grp_fu_996_p0 = grp_fu_996_p00;

assign grp_fu_996_p00 = p_read3_int_reg;

assign grp_fu_996_p1 = 26'd1075;

assign grp_fu_996_p2 = 26'd66166784;

endmodule //alveo_hls4ml_normalize_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config5_s
