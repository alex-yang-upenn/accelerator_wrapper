// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module alveo_hls4ml_dense_array_array_ap_fixed_16_6_5_3_0_42u_config15_Pipeline_DataPrepare (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        layer13_out_dout,
        layer13_out_num_data_valid,
        layer13_out_fifo_cap,
        layer13_out_empty_n,
        layer13_out_read,
        data_V_390_out,
        data_V_390_out_ap_vld,
        data_V_389_out,
        data_V_389_out_ap_vld,
        data_V_388_out,
        data_V_388_out_ap_vld,
        data_V_387_out,
        data_V_387_out_ap_vld,
        data_V_386_out,
        data_V_386_out_ap_vld,
        data_V_385_out,
        data_V_385_out_ap_vld,
        data_V_384_out,
        data_V_384_out_ap_vld,
        data_V_383_out,
        data_V_383_out_ap_vld,
        data_V_382_out,
        data_V_382_out_ap_vld,
        data_V_381_out,
        data_V_381_out_ap_vld,
        data_V_380_out,
        data_V_380_out_ap_vld,
        data_V_379_out,
        data_V_379_out_ap_vld,
        data_V_378_out,
        data_V_378_out_ap_vld,
        data_V_377_out,
        data_V_377_out_ap_vld,
        data_V_376_out,
        data_V_376_out_ap_vld,
        data_V_375_out,
        data_V_375_out_ap_vld,
        data_V_374_out,
        data_V_374_out_ap_vld,
        data_V_373_out,
        data_V_373_out_ap_vld,
        data_V_372_out,
        data_V_372_out_ap_vld,
        data_V_371_out,
        data_V_371_out_ap_vld,
        data_V_370_out,
        data_V_370_out_ap_vld,
        data_V_369_out,
        data_V_369_out_ap_vld,
        data_V_368_out,
        data_V_368_out_ap_vld,
        data_V_367_out,
        data_V_367_out_ap_vld,
        data_V_366_out,
        data_V_366_out_ap_vld,
        data_V_365_out,
        data_V_365_out_ap_vld,
        data_V_364_out,
        data_V_364_out_ap_vld,
        data_V_363_out,
        data_V_363_out_ap_vld,
        data_V_362_out,
        data_V_362_out_ap_vld,
        data_V_361_out,
        data_V_361_out_ap_vld,
        data_V_360_out,
        data_V_360_out_ap_vld,
        data_V_359_out,
        data_V_359_out_ap_vld,
        data_V_358_out,
        data_V_358_out_ap_vld,
        data_V_357_out,
        data_V_357_out_ap_vld,
        data_V_356_out,
        data_V_356_out_ap_vld,
        data_V_355_out,
        data_V_355_out_ap_vld,
        data_V_354_out,
        data_V_354_out_ap_vld,
        data_V_353_out,
        data_V_353_out_ap_vld,
        data_V_352_out,
        data_V_352_out_ap_vld,
        data_V_351_out,
        data_V_351_out_ap_vld,
        data_V_350_out,
        data_V_350_out_ap_vld,
        data_V_349_out,
        data_V_349_out_ap_vld,
        data_V_348_out,
        data_V_348_out_ap_vld,
        data_V_347_out,
        data_V_347_out_ap_vld,
        data_V_346_out,
        data_V_346_out_ap_vld,
        data_V_345_out,
        data_V_345_out_ap_vld,
        data_V_344_out,
        data_V_344_out_ap_vld,
        data_V_343_out,
        data_V_343_out_ap_vld,
        data_V_342_out,
        data_V_342_out_ap_vld,
        data_V_341_out,
        data_V_341_out_ap_vld,
        data_V_340_out,
        data_V_340_out_ap_vld,
        data_V_339_out,
        data_V_339_out_ap_vld,
        data_V_338_out,
        data_V_338_out_ap_vld,
        data_V_337_out,
        data_V_337_out_ap_vld,
        data_V_336_out,
        data_V_336_out_ap_vld,
        data_V_335_out,
        data_V_335_out_ap_vld,
        data_V_334_out,
        data_V_334_out_ap_vld,
        data_V_333_out,
        data_V_333_out_ap_vld,
        data_V_332_out,
        data_V_332_out_ap_vld,
        data_V_331_out,
        data_V_331_out_ap_vld,
        data_V_330_out,
        data_V_330_out_ap_vld,
        data_V_329_out,
        data_V_329_out_ap_vld,
        data_V_328_out,
        data_V_328_out_ap_vld,
        data_V_327_out,
        data_V_327_out_ap_vld,
        data_V_326_out,
        data_V_326_out_ap_vld,
        data_V_325_out,
        data_V_325_out_ap_vld,
        data_V_324_out,
        data_V_324_out_ap_vld,
        data_V_323_out,
        data_V_323_out_ap_vld,
        data_V_322_out,
        data_V_322_out_ap_vld,
        data_V_321_out,
        data_V_321_out_ap_vld,
        data_V_320_out,
        data_V_320_out_ap_vld,
        data_V_319_out,
        data_V_319_out_ap_vld,
        data_V_318_out,
        data_V_318_out_ap_vld,
        data_V_317_out,
        data_V_317_out_ap_vld,
        data_V_316_out,
        data_V_316_out_ap_vld,
        data_V_315_out,
        data_V_315_out_ap_vld,
        data_V_314_out,
        data_V_314_out_ap_vld,
        data_V_313_out,
        data_V_313_out_ap_vld,
        data_V_312_out,
        data_V_312_out_ap_vld,
        data_V_311_out,
        data_V_311_out_ap_vld,
        data_V_310_out,
        data_V_310_out_ap_vld,
        data_V_309_out,
        data_V_309_out_ap_vld,
        data_V_308_out,
        data_V_308_out_ap_vld,
        data_V_307_out,
        data_V_307_out_ap_vld,
        data_V_306_out,
        data_V_306_out_ap_vld,
        data_V_305_out,
        data_V_305_out_ap_vld,
        data_V_304_out,
        data_V_304_out_ap_vld,
        data_V_303_out,
        data_V_303_out_ap_vld,
        data_V_302_out,
        data_V_302_out_ap_vld,
        data_V_301_out,
        data_V_301_out_ap_vld,
        data_V_300_out,
        data_V_300_out_ap_vld,
        data_V_299_out,
        data_V_299_out_ap_vld,
        data_V_298_out,
        data_V_298_out_ap_vld,
        data_V_297_out,
        data_V_297_out_ap_vld,
        data_V_296_out,
        data_V_296_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [383:0] layer13_out_dout;
input  [2:0] layer13_out_num_data_valid;
input  [2:0] layer13_out_fifo_cap;
input   layer13_out_empty_n;
output   layer13_out_read;
output  [15:0] data_V_390_out;
output   data_V_390_out_ap_vld;
output  [15:0] data_V_389_out;
output   data_V_389_out_ap_vld;
output  [15:0] data_V_388_out;
output   data_V_388_out_ap_vld;
output  [15:0] data_V_387_out;
output   data_V_387_out_ap_vld;
output  [15:0] data_V_386_out;
output   data_V_386_out_ap_vld;
output  [15:0] data_V_385_out;
output   data_V_385_out_ap_vld;
output  [15:0] data_V_384_out;
output   data_V_384_out_ap_vld;
output  [15:0] data_V_383_out;
output   data_V_383_out_ap_vld;
output  [15:0] data_V_382_out;
output   data_V_382_out_ap_vld;
output  [15:0] data_V_381_out;
output   data_V_381_out_ap_vld;
output  [15:0] data_V_380_out;
output   data_V_380_out_ap_vld;
output  [15:0] data_V_379_out;
output   data_V_379_out_ap_vld;
output  [15:0] data_V_378_out;
output   data_V_378_out_ap_vld;
output  [15:0] data_V_377_out;
output   data_V_377_out_ap_vld;
output  [15:0] data_V_376_out;
output   data_V_376_out_ap_vld;
output  [15:0] data_V_375_out;
output   data_V_375_out_ap_vld;
output  [15:0] data_V_374_out;
output   data_V_374_out_ap_vld;
output  [15:0] data_V_373_out;
output   data_V_373_out_ap_vld;
output  [15:0] data_V_372_out;
output   data_V_372_out_ap_vld;
output  [15:0] data_V_371_out;
output   data_V_371_out_ap_vld;
output  [15:0] data_V_370_out;
output   data_V_370_out_ap_vld;
output  [15:0] data_V_369_out;
output   data_V_369_out_ap_vld;
output  [15:0] data_V_368_out;
output   data_V_368_out_ap_vld;
output  [15:0] data_V_367_out;
output   data_V_367_out_ap_vld;
output  [15:0] data_V_366_out;
output   data_V_366_out_ap_vld;
output  [15:0] data_V_365_out;
output   data_V_365_out_ap_vld;
output  [15:0] data_V_364_out;
output   data_V_364_out_ap_vld;
output  [15:0] data_V_363_out;
output   data_V_363_out_ap_vld;
output  [15:0] data_V_362_out;
output   data_V_362_out_ap_vld;
output  [15:0] data_V_361_out;
output   data_V_361_out_ap_vld;
output  [15:0] data_V_360_out;
output   data_V_360_out_ap_vld;
output  [15:0] data_V_359_out;
output   data_V_359_out_ap_vld;
output  [15:0] data_V_358_out;
output   data_V_358_out_ap_vld;
output  [15:0] data_V_357_out;
output   data_V_357_out_ap_vld;
output  [15:0] data_V_356_out;
output   data_V_356_out_ap_vld;
output  [15:0] data_V_355_out;
output   data_V_355_out_ap_vld;
output  [15:0] data_V_354_out;
output   data_V_354_out_ap_vld;
output  [15:0] data_V_353_out;
output   data_V_353_out_ap_vld;
output  [15:0] data_V_352_out;
output   data_V_352_out_ap_vld;
output  [15:0] data_V_351_out;
output   data_V_351_out_ap_vld;
output  [15:0] data_V_350_out;
output   data_V_350_out_ap_vld;
output  [15:0] data_V_349_out;
output   data_V_349_out_ap_vld;
output  [15:0] data_V_348_out;
output   data_V_348_out_ap_vld;
output  [15:0] data_V_347_out;
output   data_V_347_out_ap_vld;
output  [15:0] data_V_346_out;
output   data_V_346_out_ap_vld;
output  [15:0] data_V_345_out;
output   data_V_345_out_ap_vld;
output  [15:0] data_V_344_out;
output   data_V_344_out_ap_vld;
output  [15:0] data_V_343_out;
output   data_V_343_out_ap_vld;
output  [15:0] data_V_342_out;
output   data_V_342_out_ap_vld;
output  [15:0] data_V_341_out;
output   data_V_341_out_ap_vld;
output  [15:0] data_V_340_out;
output   data_V_340_out_ap_vld;
output  [15:0] data_V_339_out;
output   data_V_339_out_ap_vld;
output  [15:0] data_V_338_out;
output   data_V_338_out_ap_vld;
output  [15:0] data_V_337_out;
output   data_V_337_out_ap_vld;
output  [15:0] data_V_336_out;
output   data_V_336_out_ap_vld;
output  [15:0] data_V_335_out;
output   data_V_335_out_ap_vld;
output  [15:0] data_V_334_out;
output   data_V_334_out_ap_vld;
output  [15:0] data_V_333_out;
output   data_V_333_out_ap_vld;
output  [15:0] data_V_332_out;
output   data_V_332_out_ap_vld;
output  [15:0] data_V_331_out;
output   data_V_331_out_ap_vld;
output  [15:0] data_V_330_out;
output   data_V_330_out_ap_vld;
output  [15:0] data_V_329_out;
output   data_V_329_out_ap_vld;
output  [15:0] data_V_328_out;
output   data_V_328_out_ap_vld;
output  [15:0] data_V_327_out;
output   data_V_327_out_ap_vld;
output  [15:0] data_V_326_out;
output   data_V_326_out_ap_vld;
output  [15:0] data_V_325_out;
output   data_V_325_out_ap_vld;
output  [15:0] data_V_324_out;
output   data_V_324_out_ap_vld;
output  [15:0] data_V_323_out;
output   data_V_323_out_ap_vld;
output  [15:0] data_V_322_out;
output   data_V_322_out_ap_vld;
output  [15:0] data_V_321_out;
output   data_V_321_out_ap_vld;
output  [15:0] data_V_320_out;
output   data_V_320_out_ap_vld;
output  [15:0] data_V_319_out;
output   data_V_319_out_ap_vld;
output  [15:0] data_V_318_out;
output   data_V_318_out_ap_vld;
output  [15:0] data_V_317_out;
output   data_V_317_out_ap_vld;
output  [15:0] data_V_316_out;
output   data_V_316_out_ap_vld;
output  [15:0] data_V_315_out;
output   data_V_315_out_ap_vld;
output  [15:0] data_V_314_out;
output   data_V_314_out_ap_vld;
output  [15:0] data_V_313_out;
output   data_V_313_out_ap_vld;
output  [15:0] data_V_312_out;
output   data_V_312_out_ap_vld;
output  [15:0] data_V_311_out;
output   data_V_311_out_ap_vld;
output  [15:0] data_V_310_out;
output   data_V_310_out_ap_vld;
output  [15:0] data_V_309_out;
output   data_V_309_out_ap_vld;
output  [15:0] data_V_308_out;
output   data_V_308_out_ap_vld;
output  [15:0] data_V_307_out;
output   data_V_307_out_ap_vld;
output  [15:0] data_V_306_out;
output   data_V_306_out_ap_vld;
output  [15:0] data_V_305_out;
output   data_V_305_out_ap_vld;
output  [15:0] data_V_304_out;
output   data_V_304_out_ap_vld;
output  [15:0] data_V_303_out;
output   data_V_303_out_ap_vld;
output  [15:0] data_V_302_out;
output   data_V_302_out_ap_vld;
output  [15:0] data_V_301_out;
output   data_V_301_out_ap_vld;
output  [15:0] data_V_300_out;
output   data_V_300_out_ap_vld;
output  [15:0] data_V_299_out;
output   data_V_299_out_ap_vld;
output  [15:0] data_V_298_out;
output   data_V_298_out_ap_vld;
output  [15:0] data_V_297_out;
output   data_V_297_out_ap_vld;
output  [15:0] data_V_296_out;
output   data_V_296_out_ap_vld;

reg ap_idle;
reg layer13_out_read;
reg data_V_390_out_ap_vld;
reg data_V_389_out_ap_vld;
reg data_V_388_out_ap_vld;
reg data_V_387_out_ap_vld;
reg data_V_386_out_ap_vld;
reg data_V_385_out_ap_vld;
reg data_V_384_out_ap_vld;
reg data_V_383_out_ap_vld;
reg data_V_382_out_ap_vld;
reg data_V_381_out_ap_vld;
reg data_V_380_out_ap_vld;
reg data_V_379_out_ap_vld;
reg data_V_378_out_ap_vld;
reg data_V_377_out_ap_vld;
reg data_V_376_out_ap_vld;
reg data_V_375_out_ap_vld;
reg data_V_374_out_ap_vld;
reg data_V_373_out_ap_vld;
reg data_V_372_out_ap_vld;
reg data_V_371_out_ap_vld;
reg data_V_370_out_ap_vld;
reg data_V_369_out_ap_vld;
reg data_V_368_out_ap_vld;
reg data_V_367_out_ap_vld;
reg data_V_366_out_ap_vld;
reg data_V_365_out_ap_vld;
reg data_V_364_out_ap_vld;
reg data_V_363_out_ap_vld;
reg data_V_362_out_ap_vld;
reg data_V_361_out_ap_vld;
reg data_V_360_out_ap_vld;
reg data_V_359_out_ap_vld;
reg data_V_358_out_ap_vld;
reg data_V_357_out_ap_vld;
reg data_V_356_out_ap_vld;
reg data_V_355_out_ap_vld;
reg data_V_354_out_ap_vld;
reg data_V_353_out_ap_vld;
reg data_V_352_out_ap_vld;
reg data_V_351_out_ap_vld;
reg data_V_350_out_ap_vld;
reg data_V_349_out_ap_vld;
reg data_V_348_out_ap_vld;
reg data_V_347_out_ap_vld;
reg data_V_346_out_ap_vld;
reg data_V_345_out_ap_vld;
reg data_V_344_out_ap_vld;
reg data_V_343_out_ap_vld;
reg data_V_342_out_ap_vld;
reg data_V_341_out_ap_vld;
reg data_V_340_out_ap_vld;
reg data_V_339_out_ap_vld;
reg data_V_338_out_ap_vld;
reg data_V_337_out_ap_vld;
reg data_V_336_out_ap_vld;
reg data_V_335_out_ap_vld;
reg data_V_334_out_ap_vld;
reg data_V_333_out_ap_vld;
reg data_V_332_out_ap_vld;
reg data_V_331_out_ap_vld;
reg data_V_330_out_ap_vld;
reg data_V_329_out_ap_vld;
reg data_V_328_out_ap_vld;
reg data_V_327_out_ap_vld;
reg data_V_326_out_ap_vld;
reg data_V_325_out_ap_vld;
reg data_V_324_out_ap_vld;
reg data_V_323_out_ap_vld;
reg data_V_322_out_ap_vld;
reg data_V_321_out_ap_vld;
reg data_V_320_out_ap_vld;
reg data_V_319_out_ap_vld;
reg data_V_318_out_ap_vld;
reg data_V_317_out_ap_vld;
reg data_V_316_out_ap_vld;
reg data_V_315_out_ap_vld;
reg data_V_314_out_ap_vld;
reg data_V_313_out_ap_vld;
reg data_V_312_out_ap_vld;
reg data_V_311_out_ap_vld;
reg data_V_310_out_ap_vld;
reg data_V_309_out_ap_vld;
reg data_V_308_out_ap_vld;
reg data_V_307_out_ap_vld;
reg data_V_306_out_ap_vld;
reg data_V_305_out_ap_vld;
reg data_V_304_out_ap_vld;
reg data_V_303_out_ap_vld;
reg data_V_302_out_ap_vld;
reg data_V_301_out_ap_vld;
reg data_V_300_out_ap_vld;
reg data_V_299_out_ap_vld;
reg data_V_298_out_ap_vld;
reg data_V_297_out_ap_vld;
reg data_V_296_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln33_fu_1387_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    layer13_out_blk_n;
wire    ap_block_pp0_stage0;
wire   [1:0] trunc_ln39_fu_1399_p1;
reg   [1:0] trunc_ln39_reg_3077;
reg    ap_block_pp0_stage0_11001;
reg   [2:0] i_in_fu_324;
wire   [2:0] add_ln33_fu_1393_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_i_in_1;
reg   [15:0] data_V_296_fu_328;
wire   [15:0] trunc_ln35_fu_1408_p1;
reg   [15:0] data_V_297_fu_332;
reg   [15:0] data_V_298_fu_336;
reg   [15:0] data_V_299_fu_340;
reg   [15:0] data_V_300_fu_344;
reg   [15:0] data_V_301_fu_348;
reg   [15:0] data_V_302_fu_352;
reg   [15:0] data_V_303_fu_356;
reg   [15:0] data_V_304_fu_360;
reg   [15:0] data_V_305_fu_364;
reg   [15:0] data_V_306_fu_368;
reg   [15:0] data_V_307_fu_372;
reg   [15:0] data_V_308_fu_376;
reg   [15:0] data_V_309_fu_380;
reg   [15:0] data_V_310_fu_384;
reg   [15:0] data_V_311_fu_388;
reg   [15:0] data_V_163_fu_392;
reg   [15:0] data_V_313_fu_396;
reg   [15:0] data_V_314_fu_400;
reg   [15:0] data_V_315_fu_404;
reg   [15:0] data_V_316_fu_408;
reg   [15:0] data_V_317_fu_412;
reg   [15:0] data_V_318_fu_416;
reg   [15:0] data_V_319_fu_420;
reg   [15:0] data_V_320_fu_424;
reg   [15:0] data_V_321_fu_428;
reg   [15:0] data_V_322_fu_432;
reg   [15:0] data_V_323_fu_436;
reg   [15:0] data_V_324_fu_440;
reg   [15:0] data_V_325_fu_444;
reg   [15:0] data_V_326_fu_448;
reg   [15:0] data_V_327_fu_452;
reg   [15:0] data_V_328_fu_456;
reg   [15:0] data_V_329_fu_460;
reg   [15:0] data_V_330_fu_464;
reg   [15:0] data_V_331_fu_468;
reg   [15:0] data_V_332_fu_472;
reg   [15:0] data_V_333_fu_476;
reg   [15:0] data_V_334_fu_480;
reg   [15:0] data_V_335_fu_484;
reg   [15:0] data_V_164_fu_488;
reg   [15:0] data_V_337_fu_492;
reg   [15:0] data_V_338_fu_496;
reg   [15:0] data_V_339_fu_500;
reg   [15:0] data_V_340_fu_504;
reg   [15:0] data_V_341_fu_508;
reg   [15:0] data_V_342_fu_512;
reg   [15:0] data_V_343_fu_516;
reg   [15:0] data_V_344_fu_520;
reg   [15:0] data_V_345_fu_524;
reg   [15:0] data_V_346_fu_528;
reg   [15:0] data_V_347_fu_532;
reg   [15:0] data_V_348_fu_536;
reg   [15:0] data_V_349_fu_540;
reg   [15:0] data_V_350_fu_544;
reg   [15:0] data_V_351_fu_548;
reg   [15:0] data_V_352_fu_552;
reg   [15:0] data_V_353_fu_556;
reg   [15:0] data_V_354_fu_560;
reg   [15:0] data_V_355_fu_564;
reg   [15:0] data_V_356_fu_568;
reg   [15:0] data_V_357_fu_572;
reg   [15:0] data_V_358_fu_576;
reg   [15:0] data_V_359_fu_580;
reg   [15:0] data_V_165_fu_584;
reg   [15:0] data_V_361_fu_588;
reg   [15:0] data_V_362_fu_592;
reg   [15:0] data_V_363_fu_596;
reg   [15:0] data_V_364_fu_600;
reg   [15:0] data_V_365_fu_604;
reg   [15:0] data_V_366_fu_608;
reg   [15:0] data_V_367_fu_612;
reg   [15:0] data_V_368_fu_616;
reg   [15:0] data_V_369_fu_620;
reg   [15:0] data_V_370_fu_624;
reg   [15:0] data_V_371_fu_628;
reg   [15:0] data_V_372_fu_632;
reg   [15:0] data_V_373_fu_636;
reg   [15:0] data_V_374_fu_640;
reg   [15:0] data_V_375_fu_644;
reg   [15:0] data_V_376_fu_648;
reg   [15:0] data_V_377_fu_652;
reg   [15:0] data_V_378_fu_656;
reg   [15:0] data_V_379_fu_660;
reg   [15:0] data_V_380_fu_664;
reg   [15:0] data_V_381_fu_668;
reg   [15:0] data_V_382_fu_672;
reg   [15:0] data_V_383_fu_676;
reg   [15:0] data_V_384_fu_680;
reg   [15:0] data_V_385_fu_684;
reg   [15:0] data_V_386_fu_688;
reg   [15:0] data_V_387_fu_692;
reg   [15:0] data_V_388_fu_696;
reg   [15:0] data_V_389_fu_700;
reg   [15:0] data_V_390_fu_704;
reg    ap_block_pp0_stage0_01001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

alveo_hls4ml_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln33_fu_1387_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_in_fu_324 <= add_ln33_fu_1393_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_in_fu_324 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln39_reg_3077 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_163_fu_392 <= {{layer13_out_dout[271:256]}};
        data_V_296_fu_328 <= trunc_ln35_fu_1408_p1;
        data_V_297_fu_332 <= {{layer13_out_dout[31:16]}};
        data_V_298_fu_336 <= {{layer13_out_dout[47:32]}};
        data_V_299_fu_340 <= {{layer13_out_dout[63:48]}};
        data_V_300_fu_344 <= {{layer13_out_dout[79:64]}};
        data_V_301_fu_348 <= {{layer13_out_dout[95:80]}};
        data_V_302_fu_352 <= {{layer13_out_dout[111:96]}};
        data_V_303_fu_356 <= {{layer13_out_dout[127:112]}};
        data_V_304_fu_360 <= {{layer13_out_dout[143:128]}};
        data_V_305_fu_364 <= {{layer13_out_dout[159:144]}};
        data_V_306_fu_368 <= {{layer13_out_dout[175:160]}};
        data_V_307_fu_372 <= {{layer13_out_dout[191:176]}};
        data_V_308_fu_376 <= {{layer13_out_dout[207:192]}};
        data_V_309_fu_380 <= {{layer13_out_dout[223:208]}};
        data_V_310_fu_384 <= {{layer13_out_dout[239:224]}};
        data_V_311_fu_388 <= {{layer13_out_dout[255:240]}};
        data_V_313_fu_396 <= {{layer13_out_dout[287:272]}};
        data_V_314_fu_400 <= {{layer13_out_dout[303:288]}};
        data_V_315_fu_404 <= {{layer13_out_dout[319:304]}};
        data_V_316_fu_408 <= {{layer13_out_dout[335:320]}};
        data_V_317_fu_412 <= {{layer13_out_dout[351:336]}};
        data_V_318_fu_416 <= {{layer13_out_dout[367:352]}};
        data_V_319_fu_420 <= {{layer13_out_dout[383:368]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln39_reg_3077 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_164_fu_488 <= {{layer13_out_dout[271:256]}};
        data_V_320_fu_424 <= trunc_ln35_fu_1408_p1;
        data_V_321_fu_428 <= {{layer13_out_dout[31:16]}};
        data_V_322_fu_432 <= {{layer13_out_dout[47:32]}};
        data_V_323_fu_436 <= {{layer13_out_dout[63:48]}};
        data_V_324_fu_440 <= {{layer13_out_dout[79:64]}};
        data_V_325_fu_444 <= {{layer13_out_dout[95:80]}};
        data_V_326_fu_448 <= {{layer13_out_dout[111:96]}};
        data_V_327_fu_452 <= {{layer13_out_dout[127:112]}};
        data_V_328_fu_456 <= {{layer13_out_dout[143:128]}};
        data_V_329_fu_460 <= {{layer13_out_dout[159:144]}};
        data_V_330_fu_464 <= {{layer13_out_dout[175:160]}};
        data_V_331_fu_468 <= {{layer13_out_dout[191:176]}};
        data_V_332_fu_472 <= {{layer13_out_dout[207:192]}};
        data_V_333_fu_476 <= {{layer13_out_dout[223:208]}};
        data_V_334_fu_480 <= {{layer13_out_dout[239:224]}};
        data_V_335_fu_484 <= {{layer13_out_dout[255:240]}};
        data_V_337_fu_492 <= {{layer13_out_dout[287:272]}};
        data_V_338_fu_496 <= {{layer13_out_dout[303:288]}};
        data_V_339_fu_500 <= {{layer13_out_dout[319:304]}};
        data_V_340_fu_504 <= {{layer13_out_dout[335:320]}};
        data_V_341_fu_508 <= {{layer13_out_dout[351:336]}};
        data_V_342_fu_512 <= {{layer13_out_dout[367:352]}};
        data_V_343_fu_516 <= {{layer13_out_dout[383:368]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln39_reg_3077 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_165_fu_584 <= {{layer13_out_dout[271:256]}};
        data_V_344_fu_520 <= trunc_ln35_fu_1408_p1;
        data_V_345_fu_524 <= {{layer13_out_dout[31:16]}};
        data_V_346_fu_528 <= {{layer13_out_dout[47:32]}};
        data_V_347_fu_532 <= {{layer13_out_dout[63:48]}};
        data_V_348_fu_536 <= {{layer13_out_dout[79:64]}};
        data_V_349_fu_540 <= {{layer13_out_dout[95:80]}};
        data_V_350_fu_544 <= {{layer13_out_dout[111:96]}};
        data_V_351_fu_548 <= {{layer13_out_dout[127:112]}};
        data_V_352_fu_552 <= {{layer13_out_dout[143:128]}};
        data_V_353_fu_556 <= {{layer13_out_dout[159:144]}};
        data_V_354_fu_560 <= {{layer13_out_dout[175:160]}};
        data_V_355_fu_564 <= {{layer13_out_dout[191:176]}};
        data_V_356_fu_568 <= {{layer13_out_dout[207:192]}};
        data_V_357_fu_572 <= {{layer13_out_dout[223:208]}};
        data_V_358_fu_576 <= {{layer13_out_dout[239:224]}};
        data_V_359_fu_580 <= {{layer13_out_dout[255:240]}};
        data_V_361_fu_588 <= {{layer13_out_dout[287:272]}};
        data_V_362_fu_592 <= {{layer13_out_dout[303:288]}};
        data_V_363_fu_596 <= {{layer13_out_dout[319:304]}};
        data_V_364_fu_600 <= {{layer13_out_dout[335:320]}};
        data_V_365_fu_604 <= {{layer13_out_dout[351:336]}};
        data_V_366_fu_608 <= {{layer13_out_dout[367:352]}};
        data_V_367_fu_612 <= {{layer13_out_dout[383:368]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln39_reg_3077 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_368_fu_616 <= trunc_ln35_fu_1408_p1;
        data_V_369_fu_620 <= {{layer13_out_dout[31:16]}};
        data_V_370_fu_624 <= {{layer13_out_dout[47:32]}};
        data_V_371_fu_628 <= {{layer13_out_dout[63:48]}};
        data_V_372_fu_632 <= {{layer13_out_dout[79:64]}};
        data_V_373_fu_636 <= {{layer13_out_dout[95:80]}};
        data_V_374_fu_640 <= {{layer13_out_dout[111:96]}};
        data_V_375_fu_644 <= {{layer13_out_dout[127:112]}};
        data_V_376_fu_648 <= {{layer13_out_dout[143:128]}};
        data_V_377_fu_652 <= {{layer13_out_dout[159:144]}};
        data_V_378_fu_656 <= {{layer13_out_dout[175:160]}};
        data_V_379_fu_660 <= {{layer13_out_dout[191:176]}};
        data_V_380_fu_664 <= {{layer13_out_dout[207:192]}};
        data_V_381_fu_668 <= {{layer13_out_dout[223:208]}};
        data_V_382_fu_672 <= {{layer13_out_dout[239:224]}};
        data_V_383_fu_676 <= {{layer13_out_dout[255:240]}};
        data_V_384_fu_680 <= {{layer13_out_dout[287:272]}};
        data_V_385_fu_684 <= {{layer13_out_dout[303:288]}};
        data_V_386_fu_688 <= {{layer13_out_dout[319:304]}};
        data_V_387_fu_692 <= {{layer13_out_dout[335:320]}};
        data_V_388_fu_696 <= {{layer13_out_dout[351:336]}};
        data_V_389_fu_700 <= {{layer13_out_dout[367:352]}};
        data_V_390_fu_704 <= {{layer13_out_dout[383:368]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln39_reg_3077 <= trunc_ln39_fu_1399_p1;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_in_1 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_in_1 = i_in_fu_324;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_296_out_ap_vld = 1'b1;
    end else begin
        data_V_296_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_297_out_ap_vld = 1'b1;
    end else begin
        data_V_297_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_298_out_ap_vld = 1'b1;
    end else begin
        data_V_298_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_299_out_ap_vld = 1'b1;
    end else begin
        data_V_299_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_300_out_ap_vld = 1'b1;
    end else begin
        data_V_300_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_301_out_ap_vld = 1'b1;
    end else begin
        data_V_301_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_302_out_ap_vld = 1'b1;
    end else begin
        data_V_302_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_303_out_ap_vld = 1'b1;
    end else begin
        data_V_303_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_304_out_ap_vld = 1'b1;
    end else begin
        data_V_304_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_305_out_ap_vld = 1'b1;
    end else begin
        data_V_305_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_306_out_ap_vld = 1'b1;
    end else begin
        data_V_306_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_307_out_ap_vld = 1'b1;
    end else begin
        data_V_307_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_308_out_ap_vld = 1'b1;
    end else begin
        data_V_308_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_309_out_ap_vld = 1'b1;
    end else begin
        data_V_309_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_310_out_ap_vld = 1'b1;
    end else begin
        data_V_310_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_311_out_ap_vld = 1'b1;
    end else begin
        data_V_311_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_312_out_ap_vld = 1'b1;
    end else begin
        data_V_312_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_313_out_ap_vld = 1'b1;
    end else begin
        data_V_313_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_314_out_ap_vld = 1'b1;
    end else begin
        data_V_314_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_315_out_ap_vld = 1'b1;
    end else begin
        data_V_315_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_316_out_ap_vld = 1'b1;
    end else begin
        data_V_316_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_317_out_ap_vld = 1'b1;
    end else begin
        data_V_317_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_318_out_ap_vld = 1'b1;
    end else begin
        data_V_318_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_319_out_ap_vld = 1'b1;
    end else begin
        data_V_319_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_320_out_ap_vld = 1'b1;
    end else begin
        data_V_320_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_321_out_ap_vld = 1'b1;
    end else begin
        data_V_321_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_322_out_ap_vld = 1'b1;
    end else begin
        data_V_322_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_323_out_ap_vld = 1'b1;
    end else begin
        data_V_323_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_324_out_ap_vld = 1'b1;
    end else begin
        data_V_324_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_325_out_ap_vld = 1'b1;
    end else begin
        data_V_325_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_326_out_ap_vld = 1'b1;
    end else begin
        data_V_326_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_327_out_ap_vld = 1'b1;
    end else begin
        data_V_327_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_328_out_ap_vld = 1'b1;
    end else begin
        data_V_328_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_329_out_ap_vld = 1'b1;
    end else begin
        data_V_329_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_330_out_ap_vld = 1'b1;
    end else begin
        data_V_330_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_331_out_ap_vld = 1'b1;
    end else begin
        data_V_331_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_332_out_ap_vld = 1'b1;
    end else begin
        data_V_332_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_333_out_ap_vld = 1'b1;
    end else begin
        data_V_333_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_334_out_ap_vld = 1'b1;
    end else begin
        data_V_334_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_335_out_ap_vld = 1'b1;
    end else begin
        data_V_335_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_336_out_ap_vld = 1'b1;
    end else begin
        data_V_336_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_337_out_ap_vld = 1'b1;
    end else begin
        data_V_337_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_338_out_ap_vld = 1'b1;
    end else begin
        data_V_338_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_339_out_ap_vld = 1'b1;
    end else begin
        data_V_339_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_340_out_ap_vld = 1'b1;
    end else begin
        data_V_340_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_341_out_ap_vld = 1'b1;
    end else begin
        data_V_341_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_342_out_ap_vld = 1'b1;
    end else begin
        data_V_342_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_343_out_ap_vld = 1'b1;
    end else begin
        data_V_343_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_344_out_ap_vld = 1'b1;
    end else begin
        data_V_344_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_345_out_ap_vld = 1'b1;
    end else begin
        data_V_345_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_346_out_ap_vld = 1'b1;
    end else begin
        data_V_346_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_347_out_ap_vld = 1'b1;
    end else begin
        data_V_347_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_348_out_ap_vld = 1'b1;
    end else begin
        data_V_348_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_349_out_ap_vld = 1'b1;
    end else begin
        data_V_349_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_350_out_ap_vld = 1'b1;
    end else begin
        data_V_350_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_351_out_ap_vld = 1'b1;
    end else begin
        data_V_351_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_352_out_ap_vld = 1'b1;
    end else begin
        data_V_352_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_353_out_ap_vld = 1'b1;
    end else begin
        data_V_353_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_354_out_ap_vld = 1'b1;
    end else begin
        data_V_354_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_355_out_ap_vld = 1'b1;
    end else begin
        data_V_355_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_356_out_ap_vld = 1'b1;
    end else begin
        data_V_356_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_357_out_ap_vld = 1'b1;
    end else begin
        data_V_357_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_358_out_ap_vld = 1'b1;
    end else begin
        data_V_358_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_359_out_ap_vld = 1'b1;
    end else begin
        data_V_359_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_360_out_ap_vld = 1'b1;
    end else begin
        data_V_360_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_361_out_ap_vld = 1'b1;
    end else begin
        data_V_361_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_362_out_ap_vld = 1'b1;
    end else begin
        data_V_362_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_363_out_ap_vld = 1'b1;
    end else begin
        data_V_363_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_364_out_ap_vld = 1'b1;
    end else begin
        data_V_364_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_365_out_ap_vld = 1'b1;
    end else begin
        data_V_365_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_366_out_ap_vld = 1'b1;
    end else begin
        data_V_366_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_367_out_ap_vld = 1'b1;
    end else begin
        data_V_367_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_368_out_ap_vld = 1'b1;
    end else begin
        data_V_368_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_369_out_ap_vld = 1'b1;
    end else begin
        data_V_369_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_370_out_ap_vld = 1'b1;
    end else begin
        data_V_370_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_371_out_ap_vld = 1'b1;
    end else begin
        data_V_371_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_372_out_ap_vld = 1'b1;
    end else begin
        data_V_372_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_373_out_ap_vld = 1'b1;
    end else begin
        data_V_373_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_374_out_ap_vld = 1'b1;
    end else begin
        data_V_374_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_375_out_ap_vld = 1'b1;
    end else begin
        data_V_375_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_376_out_ap_vld = 1'b1;
    end else begin
        data_V_376_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_377_out_ap_vld = 1'b1;
    end else begin
        data_V_377_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_378_out_ap_vld = 1'b1;
    end else begin
        data_V_378_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_379_out_ap_vld = 1'b1;
    end else begin
        data_V_379_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_380_out_ap_vld = 1'b1;
    end else begin
        data_V_380_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_381_out_ap_vld = 1'b1;
    end else begin
        data_V_381_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_382_out_ap_vld = 1'b1;
    end else begin
        data_V_382_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_383_out_ap_vld = 1'b1;
    end else begin
        data_V_383_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_384_out_ap_vld = 1'b1;
    end else begin
        data_V_384_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_385_out_ap_vld = 1'b1;
    end else begin
        data_V_385_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_386_out_ap_vld = 1'b1;
    end else begin
        data_V_386_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_387_out_ap_vld = 1'b1;
    end else begin
        data_V_387_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_388_out_ap_vld = 1'b1;
    end else begin
        data_V_388_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_389_out_ap_vld = 1'b1;
    end else begin
        data_V_389_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_1387_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_390_out_ap_vld = 1'b1;
    end else begin
        data_V_390_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer13_out_blk_n = layer13_out_empty_n;
    end else begin
        layer13_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer13_out_read = 1'b1;
    end else begin
        layer13_out_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln33_fu_1393_p2 = (ap_sig_allocacmp_i_in_1 + 3'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((layer13_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((layer13_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((layer13_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (layer13_out_empty_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign data_V_296_out = data_V_296_fu_328;

assign data_V_297_out = data_V_297_fu_332;

assign data_V_298_out = data_V_298_fu_336;

assign data_V_299_out = data_V_299_fu_340;

assign data_V_300_out = data_V_300_fu_344;

assign data_V_301_out = data_V_301_fu_348;

assign data_V_302_out = data_V_302_fu_352;

assign data_V_303_out = data_V_303_fu_356;

assign data_V_304_out = data_V_304_fu_360;

assign data_V_305_out = data_V_305_fu_364;

assign data_V_306_out = data_V_306_fu_368;

assign data_V_307_out = data_V_307_fu_372;

assign data_V_308_out = data_V_308_fu_376;

assign data_V_309_out = data_V_309_fu_380;

assign data_V_310_out = data_V_310_fu_384;

assign data_V_311_out = data_V_311_fu_388;

assign data_V_312_out = data_V_163_fu_392;

assign data_V_313_out = data_V_313_fu_396;

assign data_V_314_out = data_V_314_fu_400;

assign data_V_315_out = data_V_315_fu_404;

assign data_V_316_out = data_V_316_fu_408;

assign data_V_317_out = data_V_317_fu_412;

assign data_V_318_out = data_V_318_fu_416;

assign data_V_319_out = data_V_319_fu_420;

assign data_V_320_out = data_V_320_fu_424;

assign data_V_321_out = data_V_321_fu_428;

assign data_V_322_out = data_V_322_fu_432;

assign data_V_323_out = data_V_323_fu_436;

assign data_V_324_out = data_V_324_fu_440;

assign data_V_325_out = data_V_325_fu_444;

assign data_V_326_out = data_V_326_fu_448;

assign data_V_327_out = data_V_327_fu_452;

assign data_V_328_out = data_V_328_fu_456;

assign data_V_329_out = data_V_329_fu_460;

assign data_V_330_out = data_V_330_fu_464;

assign data_V_331_out = data_V_331_fu_468;

assign data_V_332_out = data_V_332_fu_472;

assign data_V_333_out = data_V_333_fu_476;

assign data_V_334_out = data_V_334_fu_480;

assign data_V_335_out = data_V_335_fu_484;

assign data_V_336_out = data_V_164_fu_488;

assign data_V_337_out = data_V_337_fu_492;

assign data_V_338_out = data_V_338_fu_496;

assign data_V_339_out = data_V_339_fu_500;

assign data_V_340_out = data_V_340_fu_504;

assign data_V_341_out = data_V_341_fu_508;

assign data_V_342_out = data_V_342_fu_512;

assign data_V_343_out = data_V_343_fu_516;

assign data_V_344_out = data_V_344_fu_520;

assign data_V_345_out = data_V_345_fu_524;

assign data_V_346_out = data_V_346_fu_528;

assign data_V_347_out = data_V_347_fu_532;

assign data_V_348_out = data_V_348_fu_536;

assign data_V_349_out = data_V_349_fu_540;

assign data_V_350_out = data_V_350_fu_544;

assign data_V_351_out = data_V_351_fu_548;

assign data_V_352_out = data_V_352_fu_552;

assign data_V_353_out = data_V_353_fu_556;

assign data_V_354_out = data_V_354_fu_560;

assign data_V_355_out = data_V_355_fu_564;

assign data_V_356_out = data_V_356_fu_568;

assign data_V_357_out = data_V_357_fu_572;

assign data_V_358_out = data_V_358_fu_576;

assign data_V_359_out = data_V_359_fu_580;

assign data_V_360_out = data_V_165_fu_584;

assign data_V_361_out = data_V_361_fu_588;

assign data_V_362_out = data_V_362_fu_592;

assign data_V_363_out = data_V_363_fu_596;

assign data_V_364_out = data_V_364_fu_600;

assign data_V_365_out = data_V_365_fu_604;

assign data_V_366_out = data_V_366_fu_608;

assign data_V_367_out = data_V_367_fu_612;

assign data_V_368_out = data_V_368_fu_616;

assign data_V_369_out = data_V_369_fu_620;

assign data_V_370_out = data_V_370_fu_624;

assign data_V_371_out = data_V_371_fu_628;

assign data_V_372_out = data_V_372_fu_632;

assign data_V_373_out = data_V_373_fu_636;

assign data_V_374_out = data_V_374_fu_640;

assign data_V_375_out = data_V_375_fu_644;

assign data_V_376_out = data_V_376_fu_648;

assign data_V_377_out = data_V_377_fu_652;

assign data_V_378_out = data_V_378_fu_656;

assign data_V_379_out = data_V_379_fu_660;

assign data_V_380_out = data_V_380_fu_664;

assign data_V_381_out = data_V_381_fu_668;

assign data_V_382_out = data_V_382_fu_672;

assign data_V_383_out = data_V_383_fu_676;

assign data_V_384_out = data_V_384_fu_680;

assign data_V_385_out = data_V_385_fu_684;

assign data_V_386_out = data_V_386_fu_688;

assign data_V_387_out = data_V_387_fu_692;

assign data_V_388_out = data_V_388_fu_696;

assign data_V_389_out = data_V_389_fu_700;

assign data_V_390_out = data_V_390_fu_704;

assign icmp_ln33_fu_1387_p2 = ((ap_sig_allocacmp_i_in_1 == 3'd4) ? 1'b1 : 1'b0);

assign trunc_ln35_fu_1408_p1 = layer13_out_dout[15:0];

assign trunc_ln39_fu_1399_p1 = ap_sig_allocacmp_i_in_1[1:0];

endmodule //alveo_hls4ml_dense_array_array_ap_fixed_16_6_5_3_0_42u_config15_Pipeline_DataPrepare
