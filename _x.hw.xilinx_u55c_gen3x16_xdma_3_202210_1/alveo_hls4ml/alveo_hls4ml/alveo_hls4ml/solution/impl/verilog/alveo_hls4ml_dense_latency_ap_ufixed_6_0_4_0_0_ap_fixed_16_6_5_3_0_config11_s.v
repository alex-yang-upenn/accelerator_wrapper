// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module alveo_hls4ml_dense_latency_ap_ufixed_6_0_4_0_0_ap_fixed_16_6_5_3_0_config11_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        i_dout,
        i_num_data_valid,
        i_fifo_cap,
        i_empty_n,
        i_read,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        out_buf_0_address0,
        out_buf_0_ce0,
        out_buf_0_we0,
        out_buf_0_d0,
        out_buf_1_address0,
        out_buf_1_ce0,
        out_buf_1_we0,
        out_buf_1_d0,
        out_buf_2_address0,
        out_buf_2_ce0,
        out_buf_2_we0,
        out_buf_2_d0,
        out_buf_3_address0,
        out_buf_3_ce0,
        out_buf_3_we0,
        out_buf_3_d0,
        out_buf_4_address0,
        out_buf_4_ce0,
        out_buf_4_we0,
        out_buf_4_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [12:0] i_dout;
input  [3:0] i_num_data_valid;
input  [3:0] i_fifo_cap;
input   i_empty_n;
output   i_read;
input  [5:0] p_read;
input  [5:0] p_read1;
input  [5:0] p_read2;
input  [5:0] p_read3;
input  [5:0] p_read4;
output  [12:0] out_buf_0_address0;
output   out_buf_0_ce0;
output   out_buf_0_we0;
output  [12:0] out_buf_0_d0;
output  [12:0] out_buf_1_address0;
output   out_buf_1_ce0;
output   out_buf_1_we0;
output  [12:0] out_buf_1_d0;
output  [12:0] out_buf_2_address0;
output   out_buf_2_ce0;
output   out_buf_2_we0;
output  [12:0] out_buf_2_d0;
output  [12:0] out_buf_3_address0;
output   out_buf_3_ce0;
output   out_buf_3_we0;
output  [12:0] out_buf_3_d0;
output  [12:0] out_buf_4_address0;
output   out_buf_4_ce0;
output   out_buf_4_we0;
output  [12:0] out_buf_4_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg i_read;
reg out_buf_0_ce0;
reg out_buf_0_we0;
reg out_buf_1_ce0;
reg out_buf_1_we0;
reg out_buf_2_ce0;
reg out_buf_2_we0;
reg out_buf_3_ce0;
reg out_buf_3_we0;
reg out_buf_4_ce0;
reg out_buf_4_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
reg    i_blk_n;
wire    ap_block_pp0_stage0;
reg   [5:0] p_read_11_reg_3547;
reg    ap_block_pp0_stage0_11001;
reg   [5:0] p_read_12_reg_3554;
reg   [5:0] p_read_13_reg_3560;
reg   [5:0] p_read_14_reg_3568;
reg   [5:0] p_read27_reg_3575;
reg   [10:0] trunc_ln_reg_3581;
reg   [9:0] trunc_ln818_5_reg_3586;
reg   [10:0] trunc_ln818_6_reg_3591;
reg   [10:0] trunc_ln818_7_reg_3596;
reg   [10:0] trunc_ln818_8_reg_3601;
reg   [7:0] trunc_ln818_9_reg_3606;
reg   [8:0] trunc_ln818_s_reg_3611;
reg   [9:0] trunc_ln1_reg_3616;
reg   [8:0] trunc_ln818_1_reg_3621;
reg   [9:0] trunc_ln818_2_reg_3626;
reg   [10:0] trunc_ln818_3_reg_3631;
reg   [9:0] trunc_ln818_4_reg_3636;
reg   [9:0] trunc_ln818_11_reg_3641;
reg   [8:0] trunc_ln2_reg_3646;
reg   [10:0] trunc_ln818_12_reg_3651;
reg   [10:0] trunc_ln818_13_reg_3656;
reg   [9:0] trunc_ln818_14_reg_3661;
reg   [10:0] trunc_ln818_15_reg_3666;
reg   [10:0] trunc_ln818_16_reg_3671;
reg   [9:0] trunc_ln818_17_reg_3676;
reg   [8:0] trunc_ln818_18_reg_3681;
reg   [8:0] trunc_ln1273_1_reg_3686;
reg   [10:0] trunc_ln818_20_reg_3691;
wire   [8:0] add_ln813_10_fu_3257_p2;
reg   [8:0] add_ln813_10_reg_3696;
reg   [12:0] i_read_reg_3701;
wire   [12:0] add_ln813_4_fu_3368_p2;
reg   [12:0] add_ln813_4_reg_3706;
wire   [12:0] add_ln813_9_fu_3410_p2;
reg   [12:0] add_ln813_9_reg_3711;
wire   [12:0] add_ln813_14_fu_3449_p2;
reg   [12:0] add_ln813_14_reg_3716;
wire   [12:0] add_ln813_19_fu_3491_p2;
reg   [12:0] add_ln813_19_reg_3721;
wire   [12:0] add_ln813_24_fu_3533_p2;
reg   [12:0] add_ln813_24_reg_3726;
wire   [63:0] zext_ln66_fu_3539_p1;
wire   [5:0] r_V_16_fu_235_p0;
wire  signed [9:0] r_V_16_fu_235_p1;
wire   [5:0] r_V_17_fu_236_p0;
wire  signed [10:0] r_V_17_fu_236_p1;
wire   [5:0] r_V_13_fu_237_p0;
wire  signed [9:0] r_V_13_fu_237_p1;
wire   [5:0] mul_ln818_1_fu_238_p0;
wire   [15:0] zext_ln818_fu_3075_p1;
wire   [10:0] mul_ln818_1_fu_238_p1;
wire   [5:0] r_V_12_fu_239_p0;
wire   [16:0] zext_ln1273_7_fu_3136_p1;
wire  signed [10:0] r_V_12_fu_239_p1;
wire   [5:0] r_V_8_fu_240_p0;
wire   [14:0] zext_ln1273_3_fu_3002_p1;
wire  signed [8:0] r_V_8_fu_240_p1;
wire   [5:0] mul_ln818_fu_241_p0;
wire   [15:0] zext_ln1273_2_fu_2997_p1;
wire   [10:0] mul_ln818_fu_241_p1;
wire   [5:0] r_V_7_fu_242_p0;
wire  signed [8:0] r_V_7_fu_242_p1;
wire   [5:0] mul_ln818_5_fu_243_p0;
wire   [14:0] zext_ln818_4_fu_3211_p1;
wire   [9:0] mul_ln818_5_fu_243_p1;
wire   [5:0] r_V_10_fu_244_p0;
wire  signed [10:0] r_V_10_fu_244_p1;
wire   [5:0] mul_ln818_3_fu_245_p0;
wire   [10:0] mul_ln818_3_fu_245_p1;
wire   [5:0] r_V_15_fu_246_p0;
wire  signed [10:0] r_V_15_fu_246_p1;
wire   [5:0] r_V_4_fu_247_p0;
wire   [16:0] zext_ln1273_1_fu_2940_p1;
wire  signed [10:0] r_V_4_fu_247_p1;
wire   [5:0] r_V_6_fu_248_p0;
wire  signed [7:0] r_V_6_fu_248_p1;
wire   [5:0] r_V_3_fu_249_p0;
wire  signed [10:0] r_V_3_fu_249_p1;
wire   [5:0] r_V_2_fu_250_p0;
wire  signed [9:0] r_V_2_fu_250_p1;
wire   [5:0] r_V_11_fu_251_p0;
wire  signed [10:0] r_V_11_fu_251_p1;
wire   [5:0] mul_ln818_7_fu_252_p0;
wire   [9:0] mul_ln818_7_fu_252_p1;
wire   [5:0] r_V_14_fu_253_p0;
wire  signed [10:0] r_V_14_fu_253_p1;
wire   [5:0] mul_ln818_6_fu_254_p0;
wire   [9:0] mul_ln818_6_fu_254_p1;
wire   [5:0] mul_ln818_4_fu_255_p0;
wire   [9:0] mul_ln818_4_fu_255_p1;
wire   [5:0] r_V_9_fu_256_p0;
wire  signed [9:0] r_V_9_fu_256_p1;
wire   [5:0] mul_ln818_2_fu_257_p0;
wire   [6:0] mul_ln818_2_fu_257_p1;
wire   [5:0] r_V_5_fu_258_p0;
wire  signed [10:0] r_V_5_fu_258_p1;
wire   [5:0] r_V_fu_259_p0;
wire  signed [10:0] r_V_fu_259_p1;
wire   [16:0] r_V_fu_259_p2;
wire   [15:0] r_V_2_fu_250_p2;
wire   [16:0] r_V_3_fu_249_p2;
wire   [16:0] r_V_4_fu_247_p2;
wire   [16:0] r_V_5_fu_258_p2;
wire   [13:0] r_V_6_fu_248_p2;
wire   [14:0] r_V_7_fu_242_p2;
wire   [15:0] mul_ln818_fu_241_p2;
wire   [14:0] r_V_8_fu_240_p2;
wire   [15:0] r_V_9_fu_256_p2;
wire   [16:0] r_V_10_fu_244_p2;
wire   [15:0] mul_ln818_1_fu_238_p2;
wire   [11:0] mul_ln818_2_fu_257_p2;
wire   [5:0] trunc_ln818_10_fu_3098_p4;
wire   [15:0] mul_ln818_3_fu_245_p2;
wire   [14:0] mul_ln818_4_fu_255_p2;
wire   [16:0] r_V_11_fu_251_p2;
wire   [16:0] r_V_12_fu_239_p2;
wire   [15:0] r_V_13_fu_237_p2;
wire   [16:0] r_V_14_fu_253_p2;
wire   [16:0] r_V_15_fu_246_p2;
wire   [15:0] r_V_16_fu_235_p2;
wire   [14:0] mul_ln818_5_fu_243_p2;
wire   [14:0] mul_ln818_6_fu_254_p2;
wire   [14:0] mul_ln818_7_fu_252_p2;
wire   [16:0] r_V_17_fu_236_p2;
wire   [8:0] trunc_ln818_19_fu_3227_p4;
wire   [8:0] zext_ln818_5_fu_3108_p1;
wire  signed [11:0] sext_ln818_1_fu_3293_p1;
wire  signed [11:0] sext_ln1273_6_fu_3305_p1;
wire   [11:0] add_ln813_fu_3332_p2;
wire  signed [12:0] sext_ln813_1_fu_3338_p1;
wire  signed [12:0] sext_ln1273_fu_3263_p1;
wire  signed [8:0] sext_ln1273_4_fu_3278_p1;
wire   [8:0] add_ln813_2_fu_3348_p2;
wire  signed [10:0] sext_ln813_2_fu_3354_p1;
wire  signed [10:0] sext_ln818_2_fu_3320_p1;
wire   [10:0] add_ln813_3_fu_3358_p2;
wire  signed [12:0] sext_ln813_3_fu_3364_p1;
wire   [12:0] add_ln813_1_fu_3342_p2;
wire   [11:0] zext_ln818_7_fu_3323_p1;
wire  signed [11:0] sext_ln1273_7_fu_3308_p1;
wire   [11:0] add_ln813_5_fu_3374_p2;
wire  signed [12:0] sext_ln813_4_fu_3380_p1;
wire   [12:0] zext_ln818_3_fu_3296_p1;
wire  signed [9:0] sext_ln818_fu_3281_p1;
wire   [9:0] add_ln813_7_fu_3390_p2;
wire  signed [10:0] sext_ln813_5_fu_3396_p1;
wire  signed [10:0] sext_ln1273_1_fu_3266_p1;
wire   [10:0] add_ln813_8_fu_3400_p2;
wire  signed [12:0] sext_ln813_6_fu_3406_p1;
wire   [12:0] add_ln813_6_fu_3384_p2;
wire   [10:0] zext_ln813_fu_3416_p1;
wire   [10:0] zext_ln1273_10_fu_3284_p1;
wire   [10:0] add_ln813_11_fu_3419_p2;
wire  signed [10:0] sext_ln1273_8_fu_3311_p1;
wire   [10:0] add_ln813_12_fu_3429_p2;
wire  signed [11:0] sext_ln813_7_fu_3435_p1;
wire  signed [11:0] sext_ln1273_2_fu_3269_p1;
wire   [11:0] add_ln813_13_fu_3439_p2;
wire  signed [12:0] sext_ln813_8_fu_3445_p1;
wire   [12:0] zext_ln813_1_fu_3425_p1;
wire   [11:0] zext_ln1273_11_fu_3326_p1;
wire  signed [11:0] sext_ln1273_3_fu_3272_p1;
wire   [11:0] add_ln813_15_fu_3455_p2;
wire   [11:0] zext_ln818_6_fu_3299_p1;
wire   [11:0] add_ln813_16_fu_3461_p2;
wire  signed [9:0] sext_ln1273_5_fu_3287_p1;
wire   [9:0] add_ln813_17_fu_3471_p2;
wire  signed [11:0] sext_ln813_10_fu_3477_p1;
wire  signed [11:0] sext_ln1273_9_fu_3314_p1;
wire   [11:0] add_ln813_18_fu_3481_p2;
wire  signed [12:0] sext_ln813_11_fu_3487_p1;
wire  signed [12:0] sext_ln813_9_fu_3467_p1;
wire  signed [11:0] sext_ln70_fu_3275_p1;
wire  signed [11:0] sext_ln70_2_fu_3317_p1;
wire   [11:0] add_ln813_20_fu_3497_p2;
wire  signed [12:0] sext_ln813_12_fu_3503_p1;
wire   [12:0] zext_ln70_fu_3302_p1;
wire  signed [10:0] sext_ln70_1_fu_3290_p1;
wire   [10:0] add_ln813_22_fu_3513_p2;
wire  signed [11:0] sext_ln813_13_fu_3519_p1;
wire  signed [11:0] sext_ln813_fu_3329_p1;
wire   [11:0] add_ln813_23_fu_3523_p2;
wire  signed [12:0] sext_ln813_14_fu_3529_p1;
wire   [12:0] add_ln813_21_fu_3507_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [11:0] mul_ln818_2_fu_257_p00;
wire   [14:0] mul_ln818_4_fu_255_p00;
wire   [16:0] r_V_10_fu_244_p00;
wire   [15:0] r_V_13_fu_237_p00;
wire   [15:0] r_V_16_fu_235_p00;
wire   [16:0] r_V_17_fu_236_p00;
wire   [15:0] r_V_2_fu_250_p00;
wire   [13:0] r_V_6_fu_248_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

alveo_hls4ml_mul_6ns_10s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 16 ))
mul_6ns_10s_16_1_1_U58(
    .din0(r_V_16_fu_235_p0),
    .din1(r_V_16_fu_235_p1),
    .dout(r_V_16_fu_235_p2)
);

alveo_hls4ml_mul_6ns_11s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 17 ))
mul_6ns_11s_17_1_1_U59(
    .din0(r_V_17_fu_236_p0),
    .din1(r_V_17_fu_236_p1),
    .dout(r_V_17_fu_236_p2)
);

alveo_hls4ml_mul_6ns_10s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 16 ))
mul_6ns_10s_16_1_1_U60(
    .din0(r_V_13_fu_237_p0),
    .din1(r_V_13_fu_237_p1),
    .dout(r_V_13_fu_237_p2)
);

alveo_hls4ml_mul_6ns_11ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 16 ))
mul_6ns_11ns_16_1_1_U61(
    .din0(mul_ln818_1_fu_238_p0),
    .din1(mul_ln818_1_fu_238_p1),
    .dout(mul_ln818_1_fu_238_p2)
);

alveo_hls4ml_mul_6ns_11s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 17 ))
mul_6ns_11s_17_1_1_U62(
    .din0(r_V_12_fu_239_p0),
    .din1(r_V_12_fu_239_p1),
    .dout(r_V_12_fu_239_p2)
);

alveo_hls4ml_mul_6ns_9s_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 15 ))
mul_6ns_9s_15_1_1_U63(
    .din0(r_V_8_fu_240_p0),
    .din1(r_V_8_fu_240_p1),
    .dout(r_V_8_fu_240_p2)
);

alveo_hls4ml_mul_6ns_11ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 16 ))
mul_6ns_11ns_16_1_1_U64(
    .din0(mul_ln818_fu_241_p0),
    .din1(mul_ln818_fu_241_p1),
    .dout(mul_ln818_fu_241_p2)
);

alveo_hls4ml_mul_6ns_9s_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 15 ))
mul_6ns_9s_15_1_1_U65(
    .din0(r_V_7_fu_242_p0),
    .din1(r_V_7_fu_242_p1),
    .dout(r_V_7_fu_242_p2)
);

alveo_hls4ml_mul_6ns_10ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 15 ))
mul_6ns_10ns_15_1_1_U66(
    .din0(mul_ln818_5_fu_243_p0),
    .din1(mul_ln818_5_fu_243_p1),
    .dout(mul_ln818_5_fu_243_p2)
);

alveo_hls4ml_mul_6ns_11s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 17 ))
mul_6ns_11s_17_1_1_U67(
    .din0(r_V_10_fu_244_p0),
    .din1(r_V_10_fu_244_p1),
    .dout(r_V_10_fu_244_p2)
);

alveo_hls4ml_mul_6ns_11ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 16 ))
mul_6ns_11ns_16_1_1_U68(
    .din0(mul_ln818_3_fu_245_p0),
    .din1(mul_ln818_3_fu_245_p1),
    .dout(mul_ln818_3_fu_245_p2)
);

alveo_hls4ml_mul_6ns_11s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 17 ))
mul_6ns_11s_17_1_1_U69(
    .din0(r_V_15_fu_246_p0),
    .din1(r_V_15_fu_246_p1),
    .dout(r_V_15_fu_246_p2)
);

alveo_hls4ml_mul_6ns_11s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 17 ))
mul_6ns_11s_17_1_1_U70(
    .din0(r_V_4_fu_247_p0),
    .din1(r_V_4_fu_247_p1),
    .dout(r_V_4_fu_247_p2)
);

alveo_hls4ml_mul_6ns_8s_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 14 ))
mul_6ns_8s_14_1_1_U71(
    .din0(r_V_6_fu_248_p0),
    .din1(r_V_6_fu_248_p1),
    .dout(r_V_6_fu_248_p2)
);

alveo_hls4ml_mul_6ns_11s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 17 ))
mul_6ns_11s_17_1_1_U72(
    .din0(r_V_3_fu_249_p0),
    .din1(r_V_3_fu_249_p1),
    .dout(r_V_3_fu_249_p2)
);

alveo_hls4ml_mul_6ns_10s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 16 ))
mul_6ns_10s_16_1_1_U73(
    .din0(r_V_2_fu_250_p0),
    .din1(r_V_2_fu_250_p1),
    .dout(r_V_2_fu_250_p2)
);

alveo_hls4ml_mul_6ns_11s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 17 ))
mul_6ns_11s_17_1_1_U74(
    .din0(r_V_11_fu_251_p0),
    .din1(r_V_11_fu_251_p1),
    .dout(r_V_11_fu_251_p2)
);

alveo_hls4ml_mul_6ns_10ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 15 ))
mul_6ns_10ns_15_1_1_U75(
    .din0(mul_ln818_7_fu_252_p0),
    .din1(mul_ln818_7_fu_252_p1),
    .dout(mul_ln818_7_fu_252_p2)
);

alveo_hls4ml_mul_6ns_11s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 17 ))
mul_6ns_11s_17_1_1_U76(
    .din0(r_V_14_fu_253_p0),
    .din1(r_V_14_fu_253_p1),
    .dout(r_V_14_fu_253_p2)
);

alveo_hls4ml_mul_6ns_10ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 15 ))
mul_6ns_10ns_15_1_1_U77(
    .din0(mul_ln818_6_fu_254_p0),
    .din1(mul_ln818_6_fu_254_p1),
    .dout(mul_ln818_6_fu_254_p2)
);

alveo_hls4ml_mul_6ns_10ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 15 ))
mul_6ns_10ns_15_1_1_U78(
    .din0(mul_ln818_4_fu_255_p0),
    .din1(mul_ln818_4_fu_255_p1),
    .dout(mul_ln818_4_fu_255_p2)
);

alveo_hls4ml_mul_6ns_10s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 16 ))
mul_6ns_10s_16_1_1_U79(
    .din0(r_V_9_fu_256_p0),
    .din1(r_V_9_fu_256_p1),
    .dout(r_V_9_fu_256_p2)
);

alveo_hls4ml_mul_6ns_7ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 12 ))
mul_6ns_7ns_12_1_1_U80(
    .din0(mul_ln818_2_fu_257_p0),
    .din1(mul_ln818_2_fu_257_p1),
    .dout(mul_ln818_2_fu_257_p2)
);

alveo_hls4ml_mul_6ns_11s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 17 ))
mul_6ns_11s_17_1_1_U81(
    .din0(r_V_5_fu_258_p0),
    .din1(r_V_5_fu_258_p1),
    .dout(r_V_5_fu_258_p2)
);

alveo_hls4ml_mul_6ns_11s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 17 ))
mul_6ns_11s_17_1_1_U82(
    .din0(r_V_fu_259_p0),
    .din1(r_V_fu_259_p1),
    .dout(r_V_fu_259_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln813_10_reg_3696 <= add_ln813_10_fu_3257_p2;
        p_read27_reg_3575 <= p_read;
        p_read_11_reg_3547 <= p_read4;
        p_read_12_reg_3554 <= p_read3;
        p_read_13_reg_3560 <= p_read2;
        p_read_14_reg_3568 <= p_read1;
        trunc_ln1273_1_reg_3686 <= {{mul_ln818_7_fu_252_p2[14:6]}};
        trunc_ln1_reg_3616 <= {{mul_ln818_fu_241_p2[15:6]}};
        trunc_ln2_reg_3646 <= {{mul_ln818_4_fu_255_p2[14:6]}};
        trunc_ln818_11_reg_3641 <= {{mul_ln818_3_fu_245_p2[15:6]}};
        trunc_ln818_12_reg_3651 <= {{r_V_11_fu_251_p2[16:6]}};
        trunc_ln818_13_reg_3656 <= {{r_V_12_fu_239_p2[16:6]}};
        trunc_ln818_14_reg_3661 <= {{r_V_13_fu_237_p2[15:6]}};
        trunc_ln818_15_reg_3666 <= {{r_V_14_fu_253_p2[16:6]}};
        trunc_ln818_16_reg_3671 <= {{r_V_15_fu_246_p2[16:6]}};
        trunc_ln818_17_reg_3676 <= {{r_V_16_fu_235_p2[15:6]}};
        trunc_ln818_18_reg_3681 <= {{mul_ln818_5_fu_243_p2[14:6]}};
        trunc_ln818_1_reg_3621 <= {{r_V_8_fu_240_p2[14:6]}};
        trunc_ln818_20_reg_3691 <= {{r_V_17_fu_236_p2[16:6]}};
        trunc_ln818_2_reg_3626 <= {{r_V_9_fu_256_p2[15:6]}};
        trunc_ln818_3_reg_3631 <= {{r_V_10_fu_244_p2[16:6]}};
        trunc_ln818_4_reg_3636 <= {{mul_ln818_1_fu_238_p2[15:6]}};
        trunc_ln818_5_reg_3586 <= {{r_V_2_fu_250_p2[15:6]}};
        trunc_ln818_6_reg_3591 <= {{r_V_3_fu_249_p2[16:6]}};
        trunc_ln818_7_reg_3596 <= {{r_V_4_fu_247_p2[16:6]}};
        trunc_ln818_8_reg_3601 <= {{r_V_5_fu_258_p2[16:6]}};
        trunc_ln818_9_reg_3606 <= {{r_V_6_fu_248_p2[13:6]}};
        trunc_ln818_s_reg_3611 <= {{r_V_7_fu_242_p2[14:6]}};
        trunc_ln_reg_3581 <= {{r_V_fu_259_p2[16:6]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln813_14_reg_3716 <= add_ln813_14_fu_3449_p2;
        add_ln813_19_reg_3721 <= add_ln813_19_fu_3491_p2;
        add_ln813_24_reg_3726 <= add_ln813_24_fu_3533_p2;
        add_ln813_4_reg_3706 <= add_ln813_4_fu_3368_p2;
        add_ln813_9_reg_3711 <= add_ln813_9_fu_3410_p2;
        i_read_reg_3701 <= i_dout;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        i_blk_n = i_empty_n;
    end else begin
        i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        i_read = 1'b1;
    end else begin
        i_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_0_ce0 = 1'b1;
    end else begin
        out_buf_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_0_we0 = 1'b1;
    end else begin
        out_buf_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_1_ce0 = 1'b1;
    end else begin
        out_buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_1_we0 = 1'b1;
    end else begin
        out_buf_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_2_ce0 = 1'b1;
    end else begin
        out_buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_2_we0 = 1'b1;
    end else begin
        out_buf_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_3_ce0 = 1'b1;
    end else begin
        out_buf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_3_we0 = 1'b1;
    end else begin
        out_buf_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_4_ce0 = 1'b1;
    end else begin
        out_buf_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_buf_4_we0 = 1'b1;
    end else begin
        out_buf_4_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln813_10_fu_3257_p2 = (trunc_ln818_19_fu_3227_p4 + zext_ln818_5_fu_3108_p1);

assign add_ln813_11_fu_3419_p2 = (zext_ln813_fu_3416_p1 + zext_ln1273_10_fu_3284_p1);

assign add_ln813_12_fu_3429_p2 = ($signed(sext_ln1273_8_fu_3311_p1) + $signed(11'd2030));

assign add_ln813_13_fu_3439_p2 = ($signed(sext_ln813_7_fu_3435_p1) + $signed(sext_ln1273_2_fu_3269_p1));

assign add_ln813_14_fu_3449_p2 = ($signed(sext_ln813_8_fu_3445_p1) + $signed(zext_ln813_1_fu_3425_p1));

assign add_ln813_15_fu_3455_p2 = ($signed(zext_ln1273_11_fu_3326_p1) + $signed(sext_ln1273_3_fu_3272_p1));

assign add_ln813_16_fu_3461_p2 = (add_ln813_15_fu_3455_p2 + zext_ln818_6_fu_3299_p1);

assign add_ln813_17_fu_3471_p2 = ($signed(sext_ln1273_5_fu_3287_p1) + $signed(10'd1000));

assign add_ln813_18_fu_3481_p2 = ($signed(sext_ln813_10_fu_3477_p1) + $signed(sext_ln1273_9_fu_3314_p1));

assign add_ln813_19_fu_3491_p2 = ($signed(sext_ln813_11_fu_3487_p1) + $signed(sext_ln813_9_fu_3467_p1));

assign add_ln813_1_fu_3342_p2 = ($signed(sext_ln813_1_fu_3338_p1) + $signed(sext_ln1273_fu_3263_p1));

assign add_ln813_20_fu_3497_p2 = ($signed(sext_ln70_fu_3275_p1) + $signed(sext_ln70_2_fu_3317_p1));

assign add_ln813_21_fu_3507_p2 = ($signed(sext_ln813_12_fu_3503_p1) + $signed(zext_ln70_fu_3302_p1));

assign add_ln813_22_fu_3513_p2 = ($signed(sext_ln70_1_fu_3290_p1) + $signed(11'd2032));

assign add_ln813_23_fu_3523_p2 = ($signed(sext_ln813_13_fu_3519_p1) + $signed(sext_ln813_fu_3329_p1));

assign add_ln813_24_fu_3533_p2 = ($signed(sext_ln813_14_fu_3529_p1) + $signed(add_ln813_21_fu_3507_p2));

assign add_ln813_2_fu_3348_p2 = ($signed(sext_ln1273_4_fu_3278_p1) + $signed(9'd492));

assign add_ln813_3_fu_3358_p2 = ($signed(sext_ln813_2_fu_3354_p1) + $signed(sext_ln818_2_fu_3320_p1));

assign add_ln813_4_fu_3368_p2 = ($signed(sext_ln813_3_fu_3364_p1) + $signed(add_ln813_1_fu_3342_p2));

assign add_ln813_5_fu_3374_p2 = ($signed(zext_ln818_7_fu_3323_p1) + $signed(sext_ln1273_7_fu_3308_p1));

assign add_ln813_6_fu_3384_p2 = ($signed(sext_ln813_4_fu_3380_p1) + $signed(zext_ln818_3_fu_3296_p1));

assign add_ln813_7_fu_3390_p2 = ($signed(sext_ln818_fu_3281_p1) + $signed(10'd996));

assign add_ln813_8_fu_3400_p2 = ($signed(sext_ln813_5_fu_3396_p1) + $signed(sext_ln1273_1_fu_3266_p1));

assign add_ln813_9_fu_3410_p2 = ($signed(sext_ln813_6_fu_3406_p1) + $signed(add_ln813_6_fu_3384_p2));

assign add_ln813_fu_3332_p2 = ($signed(sext_ln818_1_fu_3293_p1) + $signed(sext_ln1273_6_fu_3305_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((i_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((i_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (i_empty_n == 1'b0);
end

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign mul_ln818_1_fu_238_p0 = zext_ln818_fu_3075_p1;

assign mul_ln818_1_fu_238_p1 = 16'd699;

assign mul_ln818_2_fu_257_p0 = mul_ln818_2_fu_257_p00;

assign mul_ln818_2_fu_257_p00 = p_read_13_reg_3560;

assign mul_ln818_2_fu_257_p1 = 12'd55;

assign mul_ln818_3_fu_245_p0 = zext_ln818_fu_3075_p1;

assign mul_ln818_3_fu_245_p1 = 16'd628;

assign mul_ln818_4_fu_255_p0 = mul_ln818_4_fu_255_p00;

assign mul_ln818_4_fu_255_p00 = p_read_13_reg_3560;

assign mul_ln818_4_fu_255_p1 = 15'd421;

assign mul_ln818_5_fu_243_p0 = zext_ln818_4_fu_3211_p1;

assign mul_ln818_5_fu_243_p1 = 15'd391;

assign mul_ln818_6_fu_254_p0 = zext_ln818_4_fu_3211_p1;

assign mul_ln818_6_fu_254_p1 = 15'd429;

assign mul_ln818_7_fu_252_p0 = zext_ln818_4_fu_3211_p1;

assign mul_ln818_7_fu_252_p1 = 15'd300;

assign mul_ln818_fu_241_p0 = zext_ln1273_2_fu_2997_p1;

assign mul_ln818_fu_241_p1 = 16'd885;

assign out_buf_0_address0 = zext_ln66_fu_3539_p1;

assign out_buf_0_d0 = add_ln813_4_reg_3706;

assign out_buf_1_address0 = zext_ln66_fu_3539_p1;

assign out_buf_1_d0 = add_ln813_9_reg_3711;

assign out_buf_2_address0 = zext_ln66_fu_3539_p1;

assign out_buf_2_d0 = add_ln813_14_reg_3716;

assign out_buf_3_address0 = zext_ln66_fu_3539_p1;

assign out_buf_3_d0 = add_ln813_19_reg_3721;

assign out_buf_4_address0 = zext_ln66_fu_3539_p1;

assign out_buf_4_d0 = add_ln813_24_reg_3726;

assign r_V_10_fu_244_p0 = r_V_10_fu_244_p00;

assign r_V_10_fu_244_p00 = p_read_13_reg_3560;

assign r_V_10_fu_244_p1 = 17'd130529;

assign r_V_11_fu_251_p0 = zext_ln1273_7_fu_3136_p1;

assign r_V_11_fu_251_p1 = 17'd130492;

assign r_V_12_fu_239_p0 = zext_ln1273_7_fu_3136_p1;

assign r_V_12_fu_239_p1 = 17'd130365;

assign r_V_13_fu_237_p0 = r_V_13_fu_237_p00;

assign r_V_13_fu_237_p00 = p_read_12_reg_3554;

assign r_V_13_fu_237_p1 = 16'd65094;

assign r_V_14_fu_253_p0 = zext_ln1273_7_fu_3136_p1;

assign r_V_14_fu_253_p1 = 17'd130425;

assign r_V_15_fu_246_p0 = zext_ln1273_7_fu_3136_p1;

assign r_V_15_fu_246_p1 = 17'd130479;

assign r_V_16_fu_235_p0 = r_V_16_fu_235_p00;

assign r_V_16_fu_235_p00 = p_read_11_reg_3547;

assign r_V_16_fu_235_p1 = 16'd65097;

assign r_V_17_fu_236_p0 = r_V_17_fu_236_p00;

assign r_V_17_fu_236_p00 = p_read_11_reg_3547;

assign r_V_17_fu_236_p1 = 17'd130073;

assign r_V_2_fu_250_p0 = r_V_2_fu_250_p00;

assign r_V_2_fu_250_p00 = p_read27_reg_3575;

assign r_V_2_fu_250_p1 = 16'd65065;

assign r_V_3_fu_249_p0 = zext_ln1273_1_fu_2940_p1;

assign r_V_3_fu_249_p1 = 17'd130265;

assign r_V_4_fu_247_p0 = zext_ln1273_1_fu_2940_p1;

assign r_V_4_fu_247_p1 = 17'd130519;

assign r_V_5_fu_258_p0 = zext_ln1273_1_fu_2940_p1;

assign r_V_5_fu_258_p1 = 17'd130425;

assign r_V_6_fu_248_p0 = r_V_6_fu_248_p00;

assign r_V_6_fu_248_p00 = p_read_14_reg_3568;

assign r_V_6_fu_248_p1 = 14'd16282;

assign r_V_7_fu_242_p0 = zext_ln1273_3_fu_3002_p1;

assign r_V_7_fu_242_p1 = 15'd32532;

assign r_V_8_fu_240_p0 = zext_ln1273_3_fu_3002_p1;

assign r_V_8_fu_240_p1 = 15'd32567;

assign r_V_9_fu_256_p0 = zext_ln1273_2_fu_2997_p1;

assign r_V_9_fu_256_p1 = 16'd65227;

assign r_V_fu_259_p0 = zext_ln1273_1_fu_2940_p1;

assign r_V_fu_259_p1 = 17'd130459;

assign sext_ln1273_1_fu_3266_p1 = $signed(trunc_ln818_5_reg_3586);

assign sext_ln1273_2_fu_3269_p1 = $signed(trunc_ln818_6_reg_3591);

assign sext_ln1273_3_fu_3272_p1 = $signed(trunc_ln818_7_reg_3596);

assign sext_ln1273_4_fu_3278_p1 = $signed(trunc_ln818_9_reg_3606);

assign sext_ln1273_5_fu_3287_p1 = $signed(trunc_ln818_1_reg_3621);

assign sext_ln1273_6_fu_3305_p1 = $signed(trunc_ln818_12_reg_3651);

assign sext_ln1273_7_fu_3308_p1 = $signed(trunc_ln818_13_reg_3656);

assign sext_ln1273_8_fu_3311_p1 = $signed(trunc_ln818_14_reg_3661);

assign sext_ln1273_9_fu_3314_p1 = $signed(trunc_ln818_15_reg_3666);

assign sext_ln1273_fu_3263_p1 = $signed(trunc_ln_reg_3581);

assign sext_ln70_1_fu_3290_p1 = $signed(trunc_ln818_2_reg_3626);

assign sext_ln70_2_fu_3317_p1 = $signed(trunc_ln818_16_reg_3671);

assign sext_ln70_fu_3275_p1 = $signed(trunc_ln818_8_reg_3601);

assign sext_ln813_10_fu_3477_p1 = $signed(add_ln813_17_fu_3471_p2);

assign sext_ln813_11_fu_3487_p1 = $signed(add_ln813_18_fu_3481_p2);

assign sext_ln813_12_fu_3503_p1 = $signed(add_ln813_20_fu_3497_p2);

assign sext_ln813_13_fu_3519_p1 = $signed(add_ln813_22_fu_3513_p2);

assign sext_ln813_14_fu_3529_p1 = $signed(add_ln813_23_fu_3523_p2);

assign sext_ln813_1_fu_3338_p1 = $signed(add_ln813_fu_3332_p2);

assign sext_ln813_2_fu_3354_p1 = $signed(add_ln813_2_fu_3348_p2);

assign sext_ln813_3_fu_3364_p1 = $signed(add_ln813_3_fu_3358_p2);

assign sext_ln813_4_fu_3380_p1 = $signed(add_ln813_5_fu_3374_p2);

assign sext_ln813_5_fu_3396_p1 = $signed(add_ln813_7_fu_3390_p2);

assign sext_ln813_6_fu_3406_p1 = $signed(add_ln813_8_fu_3400_p2);

assign sext_ln813_7_fu_3435_p1 = $signed(add_ln813_12_fu_3429_p2);

assign sext_ln813_8_fu_3445_p1 = $signed(add_ln813_13_fu_3439_p2);

assign sext_ln813_9_fu_3467_p1 = $signed(add_ln813_16_fu_3461_p2);

assign sext_ln813_fu_3329_p1 = $signed(trunc_ln818_20_reg_3691);

assign sext_ln818_1_fu_3293_p1 = $signed(trunc_ln818_3_reg_3631);

assign sext_ln818_2_fu_3320_p1 = $signed(trunc_ln818_17_reg_3676);

assign sext_ln818_fu_3281_p1 = $signed(trunc_ln818_s_reg_3611);

assign trunc_ln818_10_fu_3098_p4 = {{mul_ln818_2_fu_257_p2[11:6]}};

assign trunc_ln818_19_fu_3227_p4 = {{mul_ln818_6_fu_254_p2[14:6]}};

assign zext_ln1273_10_fu_3284_p1 = trunc_ln1_reg_3616;

assign zext_ln1273_11_fu_3326_p1 = trunc_ln1273_1_reg_3686;

assign zext_ln1273_1_fu_2940_p1 = p_read27_reg_3575;

assign zext_ln1273_2_fu_2997_p1 = p_read_14_reg_3568;

assign zext_ln1273_3_fu_3002_p1 = p_read_14_reg_3568;

assign zext_ln1273_7_fu_3136_p1 = p_read_12_reg_3554;

assign zext_ln66_fu_3539_p1 = i_read_reg_3701;

assign zext_ln70_fu_3302_p1 = trunc_ln2_reg_3646;

assign zext_ln813_1_fu_3425_p1 = add_ln813_11_fu_3419_p2;

assign zext_ln813_fu_3416_p1 = add_ln813_10_reg_3696;

assign zext_ln818_3_fu_3296_p1 = trunc_ln818_4_reg_3636;

assign zext_ln818_4_fu_3211_p1 = p_read_11_reg_3547;

assign zext_ln818_5_fu_3108_p1 = trunc_ln818_10_fu_3098_p4;

assign zext_ln818_6_fu_3299_p1 = trunc_ln818_11_reg_3641;

assign zext_ln818_7_fu_3323_p1 = trunc_ln818_18_reg_3681;

assign zext_ln818_fu_3075_p1 = p_read_13_reg_3560;

endmodule //alveo_hls4ml_dense_latency_ap_ufixed_6_0_4_0_0_ap_fixed_16_6_5_3_0_config11_s
