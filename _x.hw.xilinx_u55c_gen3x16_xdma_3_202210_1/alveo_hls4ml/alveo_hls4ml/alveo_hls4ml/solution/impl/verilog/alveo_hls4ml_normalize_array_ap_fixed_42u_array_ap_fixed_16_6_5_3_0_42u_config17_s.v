// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module alveo_hls4ml_normalize_array_ap_fixed_42u_array_ap_fixed_16_6_5_3_0_42u_config17_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer15_out_dout,
        layer15_out_num_data_valid,
        layer15_out_fifo_cap,
        layer15_out_empty_n,
        layer15_out_read,
        layer17_out_din,
        layer17_out_num_data_valid,
        layer17_out_fifo_cap,
        layer17_out_full_n,
        layer17_out_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [671:0] layer15_out_dout;
input  [1:0] layer15_out_num_data_valid;
input  [1:0] layer15_out_fifo_cap;
input   layer15_out_empty_n;
output   layer15_out_read;
output  [671:0] layer17_out_din;
input  [1:0] layer17_out_num_data_valid;
input  [1:0] layer17_out_fifo_cap;
input   layer17_out_full_n;
output   layer17_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer15_out_read;
reg layer17_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    layer15_out_blk_n;
reg    layer17_out_blk_n;
wire    ap_CS_fsm_state3;
wire   [25:0] mul_ln1347_fu_393_p2;
reg   [25:0] mul_ln1347_reg_7645;
wire    ap_CS_fsm_state2;
wire   [25:0] mul_ln1347_64_fu_389_p2;
reg   [25:0] mul_ln1347_64_reg_7649;
wire   [25:0] mul_ln1347_65_fu_392_p2;
reg   [25:0] mul_ln1347_65_reg_7653;
wire   [25:0] mul_ln1347_66_fu_391_p2;
reg   [25:0] mul_ln1347_66_reg_7657;
wire   [25:0] mul_ln1347_67_fu_406_p2;
reg   [25:0] mul_ln1347_67_reg_7661;
wire   [25:0] mul_ln1347_68_fu_419_p2;
reg   [25:0] mul_ln1347_68_reg_7665;
wire   [25:0] mul_ln1347_69_fu_396_p2;
reg   [25:0] mul_ln1347_69_reg_7669;
wire   [25:0] mul_ln1347_70_fu_412_p2;
reg   [25:0] mul_ln1347_70_reg_7673;
wire   [25:0] mul_ln1347_71_fu_405_p2;
reg   [25:0] mul_ln1347_71_reg_7677;
wire   [25:0] mul_ln1347_72_fu_381_p2;
reg   [25:0] mul_ln1347_72_reg_7681;
wire   [25:0] mul_ln1347_73_fu_383_p2;
reg   [25:0] mul_ln1347_73_reg_7685;
wire   [25:0] mul_ln1347_74_fu_386_p2;
reg   [25:0] mul_ln1347_74_reg_7689;
wire   [25:0] mul_ln1347_75_fu_397_p2;
reg   [25:0] mul_ln1347_75_reg_7693;
wire   [25:0] mul_ln1347_76_fu_410_p2;
reg   [25:0] mul_ln1347_76_reg_7697;
wire   [25:0] mul_ln1347_77_fu_390_p2;
reg   [25:0] mul_ln1347_77_reg_7701;
wire   [25:0] mul_ln1347_78_fu_418_p2;
reg   [25:0] mul_ln1347_78_reg_7705;
wire   [25:0] mul_ln1347_79_fu_395_p2;
reg   [25:0] mul_ln1347_79_reg_7709;
wire   [25:0] mul_ln1347_80_fu_384_p2;
reg   [25:0] mul_ln1347_80_reg_7713;
wire   [25:0] mul_ln1347_81_fu_408_p2;
reg   [25:0] mul_ln1347_81_reg_7717;
wire   [25:0] mul_ln1347_82_fu_382_p2;
reg   [25:0] mul_ln1347_82_reg_7721;
wire   [25:0] mul_ln1347_83_fu_399_p2;
reg   [25:0] mul_ln1347_83_reg_7725;
wire   [25:0] mul_ln1347_84_fu_402_p2;
reg   [25:0] mul_ln1347_84_reg_7729;
wire   [25:0] mul_ln1347_85_fu_411_p2;
reg   [25:0] mul_ln1347_85_reg_7733;
wire   [25:0] mul_ln1347_86_fu_409_p2;
reg   [25:0] mul_ln1347_86_reg_7737;
wire   [25:0] mul_ln1347_87_fu_380_p2;
reg   [25:0] mul_ln1347_87_reg_7741;
wire   [25:0] mul_ln1347_88_fu_403_p2;
reg   [25:0] mul_ln1347_88_reg_7745;
wire   [25:0] mul_ln1347_89_fu_400_p2;
reg   [25:0] mul_ln1347_89_reg_7749;
wire   [25:0] mul_ln1347_90_fu_394_p2;
reg   [25:0] mul_ln1347_90_reg_7753;
wire   [25:0] mul_ln1347_91_fu_407_p2;
reg   [25:0] mul_ln1347_91_reg_7757;
wire   [25:0] mul_ln1347_92_fu_420_p2;
reg   [25:0] mul_ln1347_92_reg_7761;
wire   [25:0] mul_ln1347_93_fu_404_p2;
reg   [25:0] mul_ln1347_93_reg_7765;
wire   [25:0] mul_ln1347_94_fu_398_p2;
reg   [25:0] mul_ln1347_94_reg_7769;
wire   [25:0] mul_ln1347_95_fu_387_p2;
reg   [25:0] mul_ln1347_95_reg_7773;
wire   [25:0] mul_ln1347_96_fu_401_p2;
reg   [25:0] mul_ln1347_96_reg_7777;
wire   [25:0] mul_ln1347_97_fu_415_p2;
reg   [25:0] mul_ln1347_97_reg_7781;
wire   [25:0] mul_ln1347_98_fu_416_p2;
reg   [25:0] mul_ln1347_98_reg_7785;
wire   [25:0] mul_ln1347_99_fu_379_p2;
reg   [25:0] mul_ln1347_99_reg_7789;
wire   [25:0] mul_ln1347_100_fu_385_p2;
reg   [25:0] mul_ln1347_100_reg_7793;
wire   [25:0] mul_ln1347_101_fu_388_p2;
reg   [25:0] mul_ln1347_101_reg_7797;
wire   [25:0] mul_ln1347_102_fu_413_p2;
reg   [25:0] mul_ln1347_102_reg_7801;
wire   [25:0] mul_ln1347_103_fu_414_p2;
reg   [25:0] mul_ln1347_103_reg_7805;
wire   [25:0] mul_ln1347_104_fu_417_p2;
reg   [25:0] mul_ln1347_104_reg_7809;
wire   [15:0] a_V_fu_7814_p1;
reg  signed [15:0] a_V_reg_9157;
reg  signed [15:0] a_V_103_reg_9162;
reg  signed [15:0] a_V_104_reg_9167;
reg  signed [15:0] a_V_64_reg_9172;
reg  signed [15:0] a_V_65_reg_9177;
reg  signed [15:0] a_V_66_reg_9182;
reg  signed [15:0] a_V_67_reg_9187;
reg  signed [15:0] a_V_68_reg_9192;
reg  signed [15:0] a_V_69_reg_9197;
reg  signed [15:0] a_V_70_reg_9202;
reg  signed [15:0] a_V_71_reg_9207;
reg  signed [15:0] a_V_72_reg_9212;
reg  signed [15:0] a_V_73_reg_9217;
reg  signed [15:0] a_V_74_reg_9222;
reg  signed [15:0] a_V_75_reg_9227;
reg  signed [15:0] a_V_76_reg_9232;
reg  signed [15:0] a_V_77_reg_9237;
reg  signed [15:0] a_V_78_reg_9242;
reg  signed [15:0] a_V_79_reg_9247;
reg  signed [15:0] a_V_80_reg_9252;
reg  signed [15:0] a_V_81_reg_9257;
reg  signed [15:0] a_V_82_reg_9262;
reg  signed [15:0] a_V_83_reg_9267;
reg  signed [15:0] a_V_84_reg_9272;
reg  signed [15:0] a_V_85_reg_9277;
reg  signed [15:0] a_V_86_reg_9282;
reg  signed [15:0] a_V_87_reg_9287;
reg  signed [15:0] a_V_88_reg_9292;
reg  signed [15:0] a_V_89_reg_9297;
reg  signed [15:0] a_V_90_reg_9302;
reg  signed [15:0] a_V_91_reg_9307;
reg  signed [15:0] a_V_92_reg_9312;
reg  signed [15:0] a_V_93_reg_9317;
reg  signed [15:0] a_V_94_reg_9322;
reg  signed [15:0] a_V_95_reg_9327;
reg  signed [15:0] a_V_96_reg_9332;
reg  signed [15:0] a_V_97_reg_9337;
reg  signed [15:0] a_V_98_reg_9342;
reg  signed [15:0] a_V_99_reg_9347;
reg  signed [15:0] a_V_100_reg_9352;
reg  signed [15:0] a_V_101_reg_9357;
reg  signed [15:0] a_V_102_reg_9362;
reg    ap_block_state1;
wire   [11:0] mul_ln1347_99_fu_379_p1;
wire   [11:0] mul_ln1347_87_fu_380_p1;
wire   [11:0] mul_ln1347_72_fu_381_p1;
wire   [11:0] mul_ln1347_82_fu_382_p1;
wire   [11:0] mul_ln1347_73_fu_383_p1;
wire   [11:0] mul_ln1347_80_fu_384_p1;
wire   [11:0] mul_ln1347_100_fu_385_p1;
wire   [11:0] mul_ln1347_74_fu_386_p1;
wire   [11:0] mul_ln1347_95_fu_387_p1;
wire   [11:0] mul_ln1347_101_fu_388_p1;
wire   [12:0] mul_ln1347_64_fu_389_p1;
wire   [11:0] mul_ln1347_77_fu_390_p1;
wire   [11:0] mul_ln1347_66_fu_391_p1;
wire   [11:0] mul_ln1347_65_fu_392_p1;
wire   [12:0] mul_ln1347_fu_393_p1;
wire   [11:0] mul_ln1347_90_fu_394_p1;
wire   [11:0] mul_ln1347_79_fu_395_p1;
wire   [11:0] mul_ln1347_69_fu_396_p1;
wire   [12:0] mul_ln1347_75_fu_397_p1;
wire   [11:0] mul_ln1347_94_fu_398_p1;
wire   [11:0] mul_ln1347_83_fu_399_p1;
wire   [11:0] mul_ln1347_89_fu_400_p1;
wire   [12:0] mul_ln1347_96_fu_401_p1;
wire   [11:0] mul_ln1347_84_fu_402_p1;
wire   [11:0] mul_ln1347_88_fu_403_p1;
wire   [11:0] mul_ln1347_93_fu_404_p1;
wire   [11:0] mul_ln1347_71_fu_405_p1;
wire   [11:0] mul_ln1347_67_fu_406_p1;
wire   [11:0] mul_ln1347_91_fu_407_p1;
wire   [11:0] mul_ln1347_81_fu_408_p1;
wire   [12:0] mul_ln1347_86_fu_409_p1;
wire   [11:0] mul_ln1347_76_fu_410_p1;
wire   [11:0] mul_ln1347_85_fu_411_p1;
wire   [11:0] mul_ln1347_70_fu_412_p1;
wire   [11:0] mul_ln1347_102_fu_413_p1;
wire   [11:0] mul_ln1347_103_fu_414_p1;
wire   [11:0] mul_ln1347_97_fu_415_p1;
wire   [11:0] mul_ln1347_98_fu_416_p1;
wire   [11:0] mul_ln1347_104_fu_417_p1;
wire   [11:0] mul_ln1347_78_fu_418_p1;
wire   [11:0] mul_ln1347_68_fu_419_p1;
wire   [12:0] mul_ln1347_92_fu_420_p1;
wire   [25:0] ret_V_fu_8396_p2;
wire   [25:0] ret_V_77_fu_8412_p2;
wire   [25:0] ret_V_78_fu_8428_p2;
wire   [25:0] ret_V_79_fu_8444_p2;
wire   [25:0] ret_V_80_fu_8460_p2;
wire   [25:0] ret_V_81_fu_8476_p2;
wire   [25:0] ret_V_82_fu_8492_p2;
wire   [25:0] ret_V_83_fu_8508_p2;
wire   [25:0] ret_V_84_fu_8524_p2;
wire   [25:0] ret_V_85_fu_8540_p2;
wire   [25:0] ret_V_86_fu_8556_p2;
wire   [25:0] ret_V_87_fu_8572_p2;
wire   [25:0] ret_V_88_fu_8588_p2;
wire   [25:0] ret_V_89_fu_8604_p2;
wire   [25:0] ret_V_90_fu_8620_p2;
wire   [25:0] ret_V_91_fu_8636_p2;
wire   [25:0] ret_V_92_fu_8652_p2;
wire   [25:0] ret_V_93_fu_8668_p2;
wire   [25:0] ret_V_94_fu_8684_p2;
wire   [25:0] ret_V_95_fu_8700_p2;
wire   [25:0] ret_V_96_fu_8716_p2;
wire   [25:0] ret_V_97_fu_8732_p2;
wire   [25:0] ret_V_98_fu_8748_p2;
wire   [25:0] ret_V_99_fu_8764_p2;
wire   [25:0] ret_V_100_fu_8780_p2;
wire   [25:0] ret_V_101_fu_8796_p2;
wire   [25:0] ret_V_102_fu_8812_p2;
wire   [25:0] ret_V_103_fu_8828_p2;
wire   [25:0] ret_V_104_fu_8844_p2;
wire   [25:0] ret_V_105_fu_8860_p2;
wire   [25:0] ret_V_106_fu_8876_p2;
wire   [25:0] ret_V_107_fu_8892_p2;
wire   [25:0] ret_V_108_fu_8908_p2;
wire   [25:0] ret_V_109_fu_8924_p2;
wire   [25:0] ret_V_110_fu_8940_p2;
wire   [25:0] ret_V_111_fu_8956_p2;
wire   [25:0] ret_V_112_fu_8972_p2;
wire   [25:0] ret_V_113_fu_8988_p2;
wire   [25:0] ret_V_114_fu_9004_p2;
wire   [25:0] ret_V_115_fu_9020_p2;
wire   [25:0] ret_V_116_fu_9036_p2;
wire   [25:0] ret_V_117_fu_9052_p2;
wire   [15:0] trunc_ln818_102_fu_9058_p4;
wire   [15:0] trunc_ln818_101_fu_9042_p4;
wire   [15:0] trunc_ln818_100_fu_9026_p4;
wire   [15:0] trunc_ln818_99_fu_9010_p4;
wire   [15:0] trunc_ln818_98_fu_8994_p4;
wire   [15:0] trunc_ln818_97_fu_8978_p4;
wire   [15:0] trunc_ln818_96_fu_8962_p4;
wire   [15:0] trunc_ln818_95_fu_8946_p4;
wire   [15:0] trunc_ln818_94_fu_8930_p4;
wire   [15:0] trunc_ln818_93_fu_8914_p4;
wire   [15:0] trunc_ln818_92_fu_8898_p4;
wire   [15:0] trunc_ln818_91_fu_8882_p4;
wire   [15:0] trunc_ln818_90_fu_8866_p4;
wire   [15:0] trunc_ln818_89_fu_8850_p4;
wire   [15:0] trunc_ln818_88_fu_8834_p4;
wire   [15:0] trunc_ln818_87_fu_8818_p4;
wire   [15:0] trunc_ln818_86_fu_8802_p4;
wire   [15:0] trunc_ln818_85_fu_8786_p4;
wire   [15:0] trunc_ln818_84_fu_8770_p4;
wire   [15:0] trunc_ln818_83_fu_8754_p4;
wire   [15:0] trunc_ln818_82_fu_8738_p4;
wire   [15:0] trunc_ln818_81_fu_8722_p4;
wire   [15:0] trunc_ln818_80_fu_8706_p4;
wire   [15:0] trunc_ln818_79_fu_8690_p4;
wire   [15:0] trunc_ln818_78_fu_8674_p4;
wire   [15:0] trunc_ln818_77_fu_8658_p4;
wire   [15:0] trunc_ln818_76_fu_8642_p4;
wire   [15:0] trunc_ln818_75_fu_8626_p4;
wire   [15:0] trunc_ln818_74_fu_8610_p4;
wire   [15:0] trunc_ln818_73_fu_8594_p4;
wire   [15:0] trunc_ln818_72_fu_8578_p4;
wire   [15:0] trunc_ln818_71_fu_8562_p4;
wire   [15:0] trunc_ln818_70_fu_8546_p4;
wire   [15:0] trunc_ln818_69_fu_8530_p4;
wire   [15:0] trunc_ln818_68_fu_8514_p4;
wire   [15:0] trunc_ln818_67_fu_8498_p4;
wire   [15:0] trunc_ln818_66_fu_8482_p4;
wire   [15:0] trunc_ln818_65_fu_8466_p4;
wire   [15:0] trunc_ln818_64_fu_8450_p4;
wire   [15:0] trunc_ln818_63_fu_8434_p4;
wire   [15:0] trunc_ln818_s_fu_8418_p4;
wire   [15:0] trunc_ln_fu_8402_p4;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
end

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1012(
    .din0(a_V_99_reg_9347),
    .din1(mul_ln1347_99_fu_379_p1),
    .dout(mul_ln1347_99_fu_379_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1013(
    .din0(a_V_87_reg_9287),
    .din1(mul_ln1347_87_fu_380_p1),
    .dout(mul_ln1347_87_fu_380_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1014(
    .din0(a_V_72_reg_9212),
    .din1(mul_ln1347_72_fu_381_p1),
    .dout(mul_ln1347_72_fu_381_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1015(
    .din0(a_V_82_reg_9262),
    .din1(mul_ln1347_82_fu_382_p1),
    .dout(mul_ln1347_82_fu_382_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1016(
    .din0(a_V_73_reg_9217),
    .din1(mul_ln1347_73_fu_383_p1),
    .dout(mul_ln1347_73_fu_383_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1017(
    .din0(a_V_80_reg_9252),
    .din1(mul_ln1347_80_fu_384_p1),
    .dout(mul_ln1347_80_fu_384_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1018(
    .din0(a_V_100_reg_9352),
    .din1(mul_ln1347_100_fu_385_p1),
    .dout(mul_ln1347_100_fu_385_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1019(
    .din0(a_V_74_reg_9222),
    .din1(mul_ln1347_74_fu_386_p1),
    .dout(mul_ln1347_74_fu_386_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1020(
    .din0(a_V_95_reg_9327),
    .din1(mul_ln1347_95_fu_387_p1),
    .dout(mul_ln1347_95_fu_387_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1021(
    .din0(a_V_101_reg_9357),
    .din1(mul_ln1347_101_fu_388_p1),
    .dout(mul_ln1347_101_fu_388_p2)
);

alveo_hls4ml_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1022(
    .din0(a_V_64_reg_9172),
    .din1(mul_ln1347_64_fu_389_p1),
    .dout(mul_ln1347_64_fu_389_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1023(
    .din0(a_V_77_reg_9237),
    .din1(mul_ln1347_77_fu_390_p1),
    .dout(mul_ln1347_77_fu_390_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1024(
    .din0(a_V_66_reg_9182),
    .din1(mul_ln1347_66_fu_391_p1),
    .dout(mul_ln1347_66_fu_391_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1025(
    .din0(a_V_65_reg_9177),
    .din1(mul_ln1347_65_fu_392_p1),
    .dout(mul_ln1347_65_fu_392_p2)
);

alveo_hls4ml_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1026(
    .din0(a_V_reg_9157),
    .din1(mul_ln1347_fu_393_p1),
    .dout(mul_ln1347_fu_393_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1027(
    .din0(a_V_90_reg_9302),
    .din1(mul_ln1347_90_fu_394_p1),
    .dout(mul_ln1347_90_fu_394_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1028(
    .din0(a_V_79_reg_9247),
    .din1(mul_ln1347_79_fu_395_p1),
    .dout(mul_ln1347_79_fu_395_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1029(
    .din0(a_V_69_reg_9197),
    .din1(mul_ln1347_69_fu_396_p1),
    .dout(mul_ln1347_69_fu_396_p2)
);

alveo_hls4ml_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1030(
    .din0(a_V_75_reg_9227),
    .din1(mul_ln1347_75_fu_397_p1),
    .dout(mul_ln1347_75_fu_397_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1031(
    .din0(a_V_94_reg_9322),
    .din1(mul_ln1347_94_fu_398_p1),
    .dout(mul_ln1347_94_fu_398_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1032(
    .din0(a_V_83_reg_9267),
    .din1(mul_ln1347_83_fu_399_p1),
    .dout(mul_ln1347_83_fu_399_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1033(
    .din0(a_V_89_reg_9297),
    .din1(mul_ln1347_89_fu_400_p1),
    .dout(mul_ln1347_89_fu_400_p2)
);

alveo_hls4ml_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1034(
    .din0(a_V_96_reg_9332),
    .din1(mul_ln1347_96_fu_401_p1),
    .dout(mul_ln1347_96_fu_401_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1035(
    .din0(a_V_84_reg_9272),
    .din1(mul_ln1347_84_fu_402_p1),
    .dout(mul_ln1347_84_fu_402_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1036(
    .din0(a_V_88_reg_9292),
    .din1(mul_ln1347_88_fu_403_p1),
    .dout(mul_ln1347_88_fu_403_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1037(
    .din0(a_V_93_reg_9317),
    .din1(mul_ln1347_93_fu_404_p1),
    .dout(mul_ln1347_93_fu_404_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1038(
    .din0(a_V_71_reg_9207),
    .din1(mul_ln1347_71_fu_405_p1),
    .dout(mul_ln1347_71_fu_405_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1039(
    .din0(a_V_67_reg_9187),
    .din1(mul_ln1347_67_fu_406_p1),
    .dout(mul_ln1347_67_fu_406_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1040(
    .din0(a_V_91_reg_9307),
    .din1(mul_ln1347_91_fu_407_p1),
    .dout(mul_ln1347_91_fu_407_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1041(
    .din0(a_V_81_reg_9257),
    .din1(mul_ln1347_81_fu_408_p1),
    .dout(mul_ln1347_81_fu_408_p2)
);

alveo_hls4ml_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1042(
    .din0(a_V_86_reg_9282),
    .din1(mul_ln1347_86_fu_409_p1),
    .dout(mul_ln1347_86_fu_409_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1043(
    .din0(a_V_76_reg_9232),
    .din1(mul_ln1347_76_fu_410_p1),
    .dout(mul_ln1347_76_fu_410_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1044(
    .din0(a_V_85_reg_9277),
    .din1(mul_ln1347_85_fu_411_p1),
    .dout(mul_ln1347_85_fu_411_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1045(
    .din0(a_V_70_reg_9202),
    .din1(mul_ln1347_70_fu_412_p1),
    .dout(mul_ln1347_70_fu_412_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1046(
    .din0(a_V_102_reg_9362),
    .din1(mul_ln1347_102_fu_413_p1),
    .dout(mul_ln1347_102_fu_413_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1047(
    .din0(a_V_103_reg_9162),
    .din1(mul_ln1347_103_fu_414_p1),
    .dout(mul_ln1347_103_fu_414_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1048(
    .din0(a_V_97_reg_9337),
    .din1(mul_ln1347_97_fu_415_p1),
    .dout(mul_ln1347_97_fu_415_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1049(
    .din0(a_V_98_reg_9342),
    .din1(mul_ln1347_98_fu_416_p1),
    .dout(mul_ln1347_98_fu_416_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1050(
    .din0(a_V_104_reg_9167),
    .din1(mul_ln1347_104_fu_417_p1),
    .dout(mul_ln1347_104_fu_417_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1051(
    .din0(a_V_78_reg_9242),
    .din1(mul_ln1347_78_fu_418_p1),
    .dout(mul_ln1347_78_fu_418_p2)
);

alveo_hls4ml_mul_16s_12ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12ns_26_1_1_U1052(
    .din0(a_V_68_reg_9192),
    .din1(mul_ln1347_68_fu_419_p1),
    .dout(mul_ln1347_68_fu_419_p2)
);

alveo_hls4ml_mul_16s_13ns_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
mul_16s_13ns_26_1_1_U1053(
    .din0(a_V_92_reg_9312),
    .din1(mul_ln1347_92_fu_420_p1),
    .dout(mul_ln1347_92_fu_420_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((layer17_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        a_V_100_reg_9352 <= {{layer15_out_dout[607:592]}};
        a_V_101_reg_9357 <= {{layer15_out_dout[623:608]}};
        a_V_102_reg_9362 <= {{layer15_out_dout[639:624]}};
        a_V_103_reg_9162 <= {{layer15_out_dout[655:640]}};
        a_V_104_reg_9167 <= {{layer15_out_dout[671:656]}};
        a_V_64_reg_9172 <= {{layer15_out_dout[31:16]}};
        a_V_65_reg_9177 <= {{layer15_out_dout[47:32]}};
        a_V_66_reg_9182 <= {{layer15_out_dout[63:48]}};
        a_V_67_reg_9187 <= {{layer15_out_dout[79:64]}};
        a_V_68_reg_9192 <= {{layer15_out_dout[95:80]}};
        a_V_69_reg_9197 <= {{layer15_out_dout[111:96]}};
        a_V_70_reg_9202 <= {{layer15_out_dout[127:112]}};
        a_V_71_reg_9207 <= {{layer15_out_dout[143:128]}};
        a_V_72_reg_9212 <= {{layer15_out_dout[159:144]}};
        a_V_73_reg_9217 <= {{layer15_out_dout[175:160]}};
        a_V_74_reg_9222 <= {{layer15_out_dout[191:176]}};
        a_V_75_reg_9227 <= {{layer15_out_dout[207:192]}};
        a_V_76_reg_9232 <= {{layer15_out_dout[223:208]}};
        a_V_77_reg_9237 <= {{layer15_out_dout[239:224]}};
        a_V_78_reg_9242 <= {{layer15_out_dout[255:240]}};
        a_V_79_reg_9247 <= {{layer15_out_dout[271:256]}};
        a_V_80_reg_9252 <= {{layer15_out_dout[287:272]}};
        a_V_81_reg_9257 <= {{layer15_out_dout[303:288]}};
        a_V_82_reg_9262 <= {{layer15_out_dout[319:304]}};
        a_V_83_reg_9267 <= {{layer15_out_dout[335:320]}};
        a_V_84_reg_9272 <= {{layer15_out_dout[351:336]}};
        a_V_85_reg_9277 <= {{layer15_out_dout[367:352]}};
        a_V_86_reg_9282 <= {{layer15_out_dout[383:368]}};
        a_V_87_reg_9287 <= {{layer15_out_dout[399:384]}};
        a_V_88_reg_9292 <= {{layer15_out_dout[415:400]}};
        a_V_89_reg_9297 <= {{layer15_out_dout[431:416]}};
        a_V_90_reg_9302 <= {{layer15_out_dout[447:432]}};
        a_V_91_reg_9307 <= {{layer15_out_dout[463:448]}};
        a_V_92_reg_9312 <= {{layer15_out_dout[479:464]}};
        a_V_93_reg_9317 <= {{layer15_out_dout[495:480]}};
        a_V_94_reg_9322 <= {{layer15_out_dout[511:496]}};
        a_V_95_reg_9327 <= {{layer15_out_dout[527:512]}};
        a_V_96_reg_9332 <= {{layer15_out_dout[543:528]}};
        a_V_97_reg_9337 <= {{layer15_out_dout[559:544]}};
        a_V_98_reg_9342 <= {{layer15_out_dout[575:560]}};
        a_V_99_reg_9347 <= {{layer15_out_dout[591:576]}};
        a_V_reg_9157 <= a_V_fu_7814_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mul_ln1347_100_reg_7793 <= mul_ln1347_100_fu_385_p2;
        mul_ln1347_101_reg_7797 <= mul_ln1347_101_fu_388_p2;
        mul_ln1347_102_reg_7801 <= mul_ln1347_102_fu_413_p2;
        mul_ln1347_103_reg_7805 <= mul_ln1347_103_fu_414_p2;
        mul_ln1347_104_reg_7809 <= mul_ln1347_104_fu_417_p2;
        mul_ln1347_64_reg_7649 <= mul_ln1347_64_fu_389_p2;
        mul_ln1347_65_reg_7653 <= mul_ln1347_65_fu_392_p2;
        mul_ln1347_66_reg_7657 <= mul_ln1347_66_fu_391_p2;
        mul_ln1347_67_reg_7661 <= mul_ln1347_67_fu_406_p2;
        mul_ln1347_68_reg_7665 <= mul_ln1347_68_fu_419_p2;
        mul_ln1347_69_reg_7669 <= mul_ln1347_69_fu_396_p2;
        mul_ln1347_70_reg_7673 <= mul_ln1347_70_fu_412_p2;
        mul_ln1347_71_reg_7677 <= mul_ln1347_71_fu_405_p2;
        mul_ln1347_72_reg_7681 <= mul_ln1347_72_fu_381_p2;
        mul_ln1347_73_reg_7685 <= mul_ln1347_73_fu_383_p2;
        mul_ln1347_74_reg_7689 <= mul_ln1347_74_fu_386_p2;
        mul_ln1347_75_reg_7693 <= mul_ln1347_75_fu_397_p2;
        mul_ln1347_76_reg_7697 <= mul_ln1347_76_fu_410_p2;
        mul_ln1347_77_reg_7701 <= mul_ln1347_77_fu_390_p2;
        mul_ln1347_78_reg_7705 <= mul_ln1347_78_fu_418_p2;
        mul_ln1347_79_reg_7709 <= mul_ln1347_79_fu_395_p2;
        mul_ln1347_80_reg_7713 <= mul_ln1347_80_fu_384_p2;
        mul_ln1347_81_reg_7717 <= mul_ln1347_81_fu_408_p2;
        mul_ln1347_82_reg_7721 <= mul_ln1347_82_fu_382_p2;
        mul_ln1347_83_reg_7725 <= mul_ln1347_83_fu_399_p2;
        mul_ln1347_84_reg_7729 <= mul_ln1347_84_fu_402_p2;
        mul_ln1347_85_reg_7733 <= mul_ln1347_85_fu_411_p2;
        mul_ln1347_86_reg_7737 <= mul_ln1347_86_fu_409_p2;
        mul_ln1347_87_reg_7741 <= mul_ln1347_87_fu_380_p2;
        mul_ln1347_88_reg_7745 <= mul_ln1347_88_fu_403_p2;
        mul_ln1347_89_reg_7749 <= mul_ln1347_89_fu_400_p2;
        mul_ln1347_90_reg_7753 <= mul_ln1347_90_fu_394_p2;
        mul_ln1347_91_reg_7757 <= mul_ln1347_91_fu_407_p2;
        mul_ln1347_92_reg_7761 <= mul_ln1347_92_fu_420_p2;
        mul_ln1347_93_reg_7765 <= mul_ln1347_93_fu_404_p2;
        mul_ln1347_94_reg_7769 <= mul_ln1347_94_fu_398_p2;
        mul_ln1347_95_reg_7773 <= mul_ln1347_95_fu_387_p2;
        mul_ln1347_96_reg_7777 <= mul_ln1347_96_fu_401_p2;
        mul_ln1347_97_reg_7781 <= mul_ln1347_97_fu_415_p2;
        mul_ln1347_98_reg_7785 <= mul_ln1347_98_fu_416_p2;
        mul_ln1347_99_reg_7789 <= mul_ln1347_99_fu_379_p2;
        mul_ln1347_reg_7645 <= mul_ln1347_fu_393_p2;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((layer17_out_full_n == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((layer17_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((layer17_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer15_out_blk_n = layer15_out_empty_n;
    end else begin
        layer15_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer15_out_read = 1'b1;
    end else begin
        layer15_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        layer17_out_blk_n = layer17_out_full_n;
    end else begin
        layer17_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((layer17_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        layer17_out_write = 1'b1;
    end else begin
        layer17_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((layer17_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_V_fu_7814_p1 = layer15_out_dout[15:0];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign layer17_out_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{trunc_ln818_102_fu_9058_p4}, {trunc_ln818_101_fu_9042_p4}}, {trunc_ln818_100_fu_9026_p4}}, {trunc_ln818_99_fu_9010_p4}}, {trunc_ln818_98_fu_8994_p4}}, {trunc_ln818_97_fu_8978_p4}}, {trunc_ln818_96_fu_8962_p4}}, {trunc_ln818_95_fu_8946_p4}}, {trunc_ln818_94_fu_8930_p4}}, {trunc_ln818_93_fu_8914_p4}}, {trunc_ln818_92_fu_8898_p4}}, {trunc_ln818_91_fu_8882_p4}}, {trunc_ln818_90_fu_8866_p4}}, {trunc_ln818_89_fu_8850_p4}}, {trunc_ln818_88_fu_8834_p4}}, {trunc_ln818_87_fu_8818_p4}}, {trunc_ln818_86_fu_8802_p4}}, {trunc_ln818_85_fu_8786_p4}}, {trunc_ln818_84_fu_8770_p4}}, {trunc_ln818_83_fu_8754_p4}}, {trunc_ln818_82_fu_8738_p4}}, {trunc_ln818_81_fu_8722_p4}}, {trunc_ln818_80_fu_8706_p4}}, {trunc_ln818_79_fu_8690_p4}}, {trunc_ln818_78_fu_8674_p4}}, {trunc_ln818_77_fu_8658_p4}}, {trunc_ln818_76_fu_8642_p4}}, {trunc_ln818_75_fu_8626_p4}}, {trunc_ln818_74_fu_8610_p4}}, {trunc_ln818_73_fu_8594_p4}}, {trunc_ln818_72_fu_8578_p4}}, {trunc_ln818_71_fu_8562_p4}}, {trunc_ln818_70_fu_8546_p4}}, {trunc_ln818_69_fu_8530_p4}}, {trunc_ln818_68_fu_8514_p4}}, {trunc_ln818_67_fu_8498_p4}}, {trunc_ln818_66_fu_8482_p4}}, {trunc_ln818_65_fu_8466_p4}}, {trunc_ln818_64_fu_8450_p4}}, {trunc_ln818_63_fu_8434_p4}}, {trunc_ln818_s_fu_8418_p4}}, {trunc_ln_fu_8402_p4}};

assign mul_ln1347_100_fu_385_p1 = 26'd1570;

assign mul_ln1347_101_fu_388_p1 = 26'd1289;

assign mul_ln1347_102_fu_413_p1 = 26'd1774;

assign mul_ln1347_103_fu_414_p1 = 26'd1437;

assign mul_ln1347_104_fu_417_p1 = 26'd1253;

assign mul_ln1347_64_fu_389_p1 = 26'd2427;

assign mul_ln1347_65_fu_392_p1 = 26'd1917;

assign mul_ln1347_66_fu_391_p1 = 26'd1374;

assign mul_ln1347_67_fu_406_p1 = 26'd1293;

assign mul_ln1347_68_fu_419_p1 = 26'd1414;

assign mul_ln1347_69_fu_396_p1 = 26'd1463;

assign mul_ln1347_70_fu_412_p1 = 26'd1626;

assign mul_ln1347_71_fu_405_p1 = 26'd1582;

assign mul_ln1347_72_fu_381_p1 = 26'd1234;

assign mul_ln1347_73_fu_383_p1 = 26'd1265;

assign mul_ln1347_74_fu_386_p1 = 26'd1472;

assign mul_ln1347_75_fu_397_p1 = 26'd2588;

assign mul_ln1347_76_fu_410_p1 = 26'd1640;

assign mul_ln1347_77_fu_390_p1 = 26'd1388;

assign mul_ln1347_78_fu_418_p1 = 26'd1764;

assign mul_ln1347_79_fu_395_p1 = 26'd1585;

assign mul_ln1347_80_fu_384_p1 = 26'd1703;

assign mul_ln1347_81_fu_408_p1 = 26'd1454;

assign mul_ln1347_82_fu_382_p1 = 26'd1459;

assign mul_ln1347_83_fu_399_p1 = 26'd1860;

assign mul_ln1347_84_fu_402_p1 = 26'd1686;

assign mul_ln1347_85_fu_411_p1 = 26'd1749;

assign mul_ln1347_86_fu_409_p1 = 26'd2088;

assign mul_ln1347_87_fu_380_p1 = 26'd1729;

assign mul_ln1347_88_fu_403_p1 = 26'd1918;

assign mul_ln1347_89_fu_400_p1 = 26'd1727;

assign mul_ln1347_90_fu_394_p1 = 26'd1773;

assign mul_ln1347_91_fu_407_p1 = 26'd1358;

assign mul_ln1347_92_fu_420_p1 = 26'd2065;

assign mul_ln1347_93_fu_404_p1 = 26'd1950;

assign mul_ln1347_94_fu_398_p1 = 26'd1629;

assign mul_ln1347_95_fu_387_p1 = 26'd1300;

assign mul_ln1347_96_fu_401_p1 = 26'd2234;

assign mul_ln1347_97_fu_415_p1 = 26'd1870;

assign mul_ln1347_98_fu_416_p1 = 26'd1251;

assign mul_ln1347_99_fu_379_p1 = 26'd1761;

assign mul_ln1347_fu_393_p1 = 26'd2598;

assign ret_V_100_fu_8780_p2 = (mul_ln1347_87_reg_7741 + 26'd31744);

assign ret_V_101_fu_8796_p2 = (mul_ln1347_88_reg_7745 + 26'd158720);

assign ret_V_102_fu_8812_p2 = (mul_ln1347_89_reg_7749 + 26'd627712);

assign ret_V_103_fu_8828_p2 = (mul_ln1347_90_reg_7753 + 26'd325632);

assign ret_V_104_fu_8844_p2 = (mul_ln1347_91_reg_7757 + 26'd399360);

assign ret_V_105_fu_8860_p2 = ($signed(mul_ln1347_92_reg_7761) + $signed(26'd67104768));

assign ret_V_106_fu_8876_p2 = ($signed(mul_ln1347_93_reg_7765) + $signed(26'd67073024));

assign ret_V_107_fu_8892_p2 = (mul_ln1347_94_reg_7769 + 26'd455680);

assign ret_V_108_fu_8908_p2 = ($signed(mul_ln1347_95_reg_7773) + $signed(26'd67101696));

assign ret_V_109_fu_8924_p2 = (mul_ln1347_96_reg_7777 + 26'd351232);

assign ret_V_110_fu_8940_p2 = (mul_ln1347_97_reg_7781 + 26'd168960);

assign ret_V_111_fu_8956_p2 = ($signed(mul_ln1347_98_reg_7785) + $signed(26'd66733056));

assign ret_V_112_fu_8972_p2 = (mul_ln1347_99_reg_7789 + 26'd136192);

assign ret_V_113_fu_8988_p2 = ($signed(mul_ln1347_100_reg_7793) + $signed(26'd67096576));

assign ret_V_114_fu_9004_p2 = (mul_ln1347_101_reg_7797 + 26'd446464);

assign ret_V_115_fu_9020_p2 = ($signed(mul_ln1347_102_reg_7801) + $signed(26'd66762752));

assign ret_V_116_fu_9036_p2 = ($signed(mul_ln1347_103_reg_7805) + $signed(26'd66977792));

assign ret_V_117_fu_9052_p2 = (mul_ln1347_104_reg_7809 + 26'd421888);

assign ret_V_77_fu_8412_p2 = (mul_ln1347_64_reg_7649 + 26'd441344);

assign ret_V_78_fu_8428_p2 = (mul_ln1347_65_reg_7653 + 26'd604160);

assign ret_V_79_fu_8444_p2 = (mul_ln1347_66_reg_7657 + 26'd305152);

assign ret_V_80_fu_8460_p2 = (mul_ln1347_67_reg_7661 + 26'd129024);

assign ret_V_81_fu_8476_p2 = (mul_ln1347_68_reg_7665 + 26'd14336);

assign ret_V_82_fu_8492_p2 = ($signed(mul_ln1347_69_reg_7669) + $signed(26'd67099648));

assign ret_V_83_fu_8508_p2 = ($signed(mul_ln1347_70_reg_7673) + $signed(26'd66468864));

assign ret_V_84_fu_8524_p2 = (mul_ln1347_71_reg_7677 + 26'd23552);

assign ret_V_85_fu_8540_p2 = (mul_ln1347_72_reg_7681 + 26'd189440);

assign ret_V_86_fu_8556_p2 = (mul_ln1347_73_reg_7685 + 26'd200704);

assign ret_V_87_fu_8572_p2 = (mul_ln1347_74_reg_7689 + 26'd177152);

assign ret_V_88_fu_8588_p2 = ($signed(mul_ln1347_75_reg_7693) + $signed(26'd66723840));

assign ret_V_89_fu_8604_p2 = (mul_ln1347_76_reg_7697 + 26'd387072);

assign ret_V_90_fu_8620_p2 = ($signed(mul_ln1347_77_reg_7701) + $signed(26'd67033088));

assign ret_V_91_fu_8636_p2 = (mul_ln1347_78_reg_7705 + 26'd321536);

assign ret_V_92_fu_8652_p2 = (mul_ln1347_79_reg_7709 + 26'd50176);

assign ret_V_93_fu_8668_p2 = (mul_ln1347_80_reg_7713 + 26'd218112);

assign ret_V_94_fu_8684_p2 = ($signed(mul_ln1347_81_reg_7717) + $signed(26'd67055616));

assign ret_V_95_fu_8700_p2 = (mul_ln1347_82_reg_7721 + 26'd212992);

assign ret_V_96_fu_8716_p2 = ($signed(mul_ln1347_83_reg_7725) + $signed(26'd67075072));

assign ret_V_97_fu_8732_p2 = (mul_ln1347_84_reg_7729 + 26'd396288);

assign ret_V_98_fu_8748_p2 = (mul_ln1347_85_reg_7733 + 26'd161792);

assign ret_V_99_fu_8764_p2 = (mul_ln1347_86_reg_7737 + 26'd36864);

assign ret_V_fu_8396_p2 = (mul_ln1347_reg_7645 + 26'd398336);

assign start_out = real_start;

assign trunc_ln818_100_fu_9026_p4 = {{ret_V_115_fu_9020_p2[25:10]}};

assign trunc_ln818_101_fu_9042_p4 = {{ret_V_116_fu_9036_p2[25:10]}};

assign trunc_ln818_102_fu_9058_p4 = {{ret_V_117_fu_9052_p2[25:10]}};

assign trunc_ln818_63_fu_8434_p4 = {{ret_V_78_fu_8428_p2[25:10]}};

assign trunc_ln818_64_fu_8450_p4 = {{ret_V_79_fu_8444_p2[25:10]}};

assign trunc_ln818_65_fu_8466_p4 = {{ret_V_80_fu_8460_p2[25:10]}};

assign trunc_ln818_66_fu_8482_p4 = {{ret_V_81_fu_8476_p2[25:10]}};

assign trunc_ln818_67_fu_8498_p4 = {{ret_V_82_fu_8492_p2[25:10]}};

assign trunc_ln818_68_fu_8514_p4 = {{ret_V_83_fu_8508_p2[25:10]}};

assign trunc_ln818_69_fu_8530_p4 = {{ret_V_84_fu_8524_p2[25:10]}};

assign trunc_ln818_70_fu_8546_p4 = {{ret_V_85_fu_8540_p2[25:10]}};

assign trunc_ln818_71_fu_8562_p4 = {{ret_V_86_fu_8556_p2[25:10]}};

assign trunc_ln818_72_fu_8578_p4 = {{ret_V_87_fu_8572_p2[25:10]}};

assign trunc_ln818_73_fu_8594_p4 = {{ret_V_88_fu_8588_p2[25:10]}};

assign trunc_ln818_74_fu_8610_p4 = {{ret_V_89_fu_8604_p2[25:10]}};

assign trunc_ln818_75_fu_8626_p4 = {{ret_V_90_fu_8620_p2[25:10]}};

assign trunc_ln818_76_fu_8642_p4 = {{ret_V_91_fu_8636_p2[25:10]}};

assign trunc_ln818_77_fu_8658_p4 = {{ret_V_92_fu_8652_p2[25:10]}};

assign trunc_ln818_78_fu_8674_p4 = {{ret_V_93_fu_8668_p2[25:10]}};

assign trunc_ln818_79_fu_8690_p4 = {{ret_V_94_fu_8684_p2[25:10]}};

assign trunc_ln818_80_fu_8706_p4 = {{ret_V_95_fu_8700_p2[25:10]}};

assign trunc_ln818_81_fu_8722_p4 = {{ret_V_96_fu_8716_p2[25:10]}};

assign trunc_ln818_82_fu_8738_p4 = {{ret_V_97_fu_8732_p2[25:10]}};

assign trunc_ln818_83_fu_8754_p4 = {{ret_V_98_fu_8748_p2[25:10]}};

assign trunc_ln818_84_fu_8770_p4 = {{ret_V_99_fu_8764_p2[25:10]}};

assign trunc_ln818_85_fu_8786_p4 = {{ret_V_100_fu_8780_p2[25:10]}};

assign trunc_ln818_86_fu_8802_p4 = {{ret_V_101_fu_8796_p2[25:10]}};

assign trunc_ln818_87_fu_8818_p4 = {{ret_V_102_fu_8812_p2[25:10]}};

assign trunc_ln818_88_fu_8834_p4 = {{ret_V_103_fu_8828_p2[25:10]}};

assign trunc_ln818_89_fu_8850_p4 = {{ret_V_104_fu_8844_p2[25:10]}};

assign trunc_ln818_90_fu_8866_p4 = {{ret_V_105_fu_8860_p2[25:10]}};

assign trunc_ln818_91_fu_8882_p4 = {{ret_V_106_fu_8876_p2[25:10]}};

assign trunc_ln818_92_fu_8898_p4 = {{ret_V_107_fu_8892_p2[25:10]}};

assign trunc_ln818_93_fu_8914_p4 = {{ret_V_108_fu_8908_p2[25:10]}};

assign trunc_ln818_94_fu_8930_p4 = {{ret_V_109_fu_8924_p2[25:10]}};

assign trunc_ln818_95_fu_8946_p4 = {{ret_V_110_fu_8940_p2[25:10]}};

assign trunc_ln818_96_fu_8962_p4 = {{ret_V_111_fu_8956_p2[25:10]}};

assign trunc_ln818_97_fu_8978_p4 = {{ret_V_112_fu_8972_p2[25:10]}};

assign trunc_ln818_98_fu_8994_p4 = {{ret_V_113_fu_8988_p2[25:10]}};

assign trunc_ln818_99_fu_9010_p4 = {{ret_V_114_fu_9004_p2[25:10]}};

assign trunc_ln818_s_fu_8418_p4 = {{ret_V_77_fu_8412_p2[25:10]}};

assign trunc_ln_fu_8402_p4 = {{ret_V_fu_8396_p2[25:10]}};

endmodule //alveo_hls4ml_normalize_array_ap_fixed_42u_array_ap_fixed_16_6_5_3_0_42u_config17_s
