-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity alveo_hls4ml_pooling1d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config9_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    layer8_out_dout : IN STD_LOGIC_VECTOR (95 downto 0);
    layer8_out_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    layer8_out_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    layer8_out_empty_n : IN STD_LOGIC;
    layer8_out_read : OUT STD_LOGIC;
    layer9_out_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    layer9_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    layer9_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    layer9_out_full_n : IN STD_LOGIC;
    layer9_out_write : OUT STD_LOGIC );
end;


architecture behav of alveo_hls4ml_pooling1d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config9_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_39 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_38 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_37 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_36 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_35 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_34 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_33 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_32 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_31 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_30 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_29 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_28 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_27 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_26 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_25 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_24 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal sX_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer8_out_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln185_reg_1741 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer9_out_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal and_ln145_reg_1850 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln185_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln145_2_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln145_2_reg_1745 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln165_fu_466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln165_reg_1750 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln187_fu_489_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_reg_1754 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_s_reg_1760 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_23_reg_1766 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_24_reg_1772 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_25_reg_1778 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_26_reg_1784 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_27_reg_1790 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_28_reg_1796 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_29_reg_1802 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_30_reg_1808 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_31_reg_1814 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_32_reg_1820 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_33_reg_1826 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_34_reg_1832 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_35_reg_1838 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_36_reg_1844 : STD_LOGIC_VECTOR (5 downto 0);
    signal and_ln145_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_phi_mux_storemerge_phi_fu_231_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln172_fu_666_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_reg_227 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge_reg_227 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln165_fu_460_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_iw_fu_146 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_iw_4_fu_444_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_0_0_0_0_0151_fu_150 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_1_0_0_0154_fu_154 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_2_0_0_0157_fu_158 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_3_0_0_0160_fu_162 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_4_0_0_0163_fu_166 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_5_0_0_0166_fu_170 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_6_0_0_0169_fu_174 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_7_0_0_0172_fu_178 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_8_0_0_0175_fu_182 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_9_0_0_0178_fu_186 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_10_0_0_0181_fu_190 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_11_0_0_0184_fu_194 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_12_0_0_0187_fu_198 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_13_0_0_0190_fu_202 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_14_0_0_0193_fu_206 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_15_0_0_0196_fu_210 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln145_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln172_fu_658_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_V_fu_679_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_48_fu_687_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_fu_694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_fu_706_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal res_pack_data_fu_714_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_49_fu_726_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_50_fu_734_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_24_fu_741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_24_fu_747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_24_fu_753_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal res_pack_data_4_fu_761_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_51_fu_773_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_52_fu_781_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_25_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_25_fu_794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_25_fu_800_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal res_pack_data_5_fu_808_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_53_fu_820_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_54_fu_828_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_26_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_26_fu_841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_26_fu_847_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal res_pack_data_6_fu_855_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_55_fu_867_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_56_fu_875_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_27_fu_882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_27_fu_888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_27_fu_894_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln_fu_902_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_57_fu_914_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_58_fu_922_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_28_fu_929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_28_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_28_fu_941_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_s_fu_949_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_59_fu_961_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_60_fu_969_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_29_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_29_fu_982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_29_fu_988_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_18_fu_996_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_61_fu_1008_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_62_fu_1016_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_30_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_30_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_30_fu_1035_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_19_fu_1043_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_63_fu_1055_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_64_fu_1063_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_31_fu_1070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_31_fu_1076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_31_fu_1082_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_20_fu_1090_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_65_fu_1102_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_66_fu_1110_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_32_fu_1117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_32_fu_1123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_32_fu_1129_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_21_fu_1137_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_67_fu_1149_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_68_fu_1157_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_33_fu_1164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_33_fu_1170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_33_fu_1176_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_22_fu_1184_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_69_fu_1196_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_70_fu_1204_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_34_fu_1211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_34_fu_1217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_34_fu_1223_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_23_fu_1231_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_71_fu_1243_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_72_fu_1251_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_35_fu_1258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_35_fu_1264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_35_fu_1270_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_24_fu_1278_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_73_fu_1290_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_74_fu_1298_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_36_fu_1305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_36_fu_1311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_36_fu_1317_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_25_fu_1325_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_75_fu_1337_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_76_fu_1345_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_37_fu_1352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_37_fu_1358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_37_fu_1364_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_26_fu_1372_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_77_fu_1384_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_78_fu_1392_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_38_fu_1399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_38_fu_1405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_38_fu_1411_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln837_28_fu_1380_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_27_fu_1333_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_26_fu_1286_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_25_fu_1239_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_24_fu_1192_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_23_fu_1145_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_22_fu_1098_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_21_fu_1051_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_20_fu_1004_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_19_fu_957_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_fu_910_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln137_6_fu_863_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln137_5_fu_816_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln137_4_fu_769_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln137_fu_722_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln161_s_fu_1419_p18 : STD_LOGIC_VECTOR (249 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_187 : BOOLEAN;
    signal ap_condition_257 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_storemerge_reg_227_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_187)) then
                if (((icmp_ln185_fu_438_p2 = ap_const_lv1_0) and (icmp_ln165_fu_466_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_storemerge_reg_227 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_storemerge_reg_227 <= ap_phi_reg_pp0_iter0_storemerge_reg_227;
                end if;
            end if; 
        end if;
    end process;

    i_iw_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_iw_fu_146 <= ap_const_lv3_0;
            elsif (((icmp_ln185_fu_438_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                i_iw_fu_146 <= i_iw_4_fu_444_p2;
            end if; 
        end if;
    end process;

    pX_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_257)) then
                if ((icmp_ln165_fu_466_p2 = ap_const_lv1_1)) then 
                    pX_1 <= ap_const_lv32_0;
                elsif ((icmp_ln165_fu_466_p2 = ap_const_lv1_0)) then 
                    pX_1 <= add_ln165_fu_460_p2;
                end if;
            end if; 
        end if;
    end process;

    p_0_0_0_0_0151_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_0_0_0_0151_fu_150 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_39;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_0_0_0_0151_fu_150 <= trunc_ln187_reg_1754;
            end if; 
        end if;
    end process;

    p_0_10_0_0_0181_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_10_0_0_0181_fu_190 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_29;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_10_0_0_0181_fu_190 <= trunc_ln187_33_reg_1826;
            end if; 
        end if;
    end process;

    p_0_11_0_0_0184_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_11_0_0_0184_fu_194 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_28;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_11_0_0_0184_fu_194 <= trunc_ln187_34_reg_1832;
            end if; 
        end if;
    end process;

    p_0_12_0_0_0187_fu_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_12_0_0_0187_fu_198 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_27;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_12_0_0_0187_fu_198 <= trunc_ln187_35_reg_1838;
            end if; 
        end if;
    end process;

    p_0_13_0_0_0190_fu_202_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_13_0_0_0190_fu_202 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_26;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_13_0_0_0190_fu_202 <= trunc_ln187_36_reg_1844;
            end if; 
        end if;
    end process;

    p_0_14_0_0_0193_fu_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_14_0_0_0193_fu_206 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_25;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_14_0_0_0193_fu_206 <= trunc_ln187_s_reg_1760;
            end if; 
        end if;
    end process;

    p_0_15_0_0_0196_fu_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_15_0_0_0196_fu_210 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_24;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_15_0_0_0196_fu_210 <= trunc_ln187_23_reg_1766;
            end if; 
        end if;
    end process;

    p_0_1_0_0_0154_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_1_0_0_0154_fu_154 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_38;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_1_0_0_0154_fu_154 <= trunc_ln187_24_reg_1772;
            end if; 
        end if;
    end process;

    p_0_2_0_0_0157_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_2_0_0_0157_fu_158 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_37;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_2_0_0_0157_fu_158 <= trunc_ln187_25_reg_1778;
            end if; 
        end if;
    end process;

    p_0_3_0_0_0160_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_3_0_0_0160_fu_162 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_36;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_3_0_0_0160_fu_162 <= trunc_ln187_26_reg_1784;
            end if; 
        end if;
    end process;

    p_0_4_0_0_0163_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_4_0_0_0163_fu_166 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_35;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_4_0_0_0163_fu_166 <= trunc_ln187_27_reg_1790;
            end if; 
        end if;
    end process;

    p_0_5_0_0_0166_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_5_0_0_0166_fu_170 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_34;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_5_0_0_0166_fu_170 <= trunc_ln187_28_reg_1796;
            end if; 
        end if;
    end process;

    p_0_6_0_0_0169_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_6_0_0_0169_fu_174 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_33;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_6_0_0_0169_fu_174 <= trunc_ln187_29_reg_1802;
            end if; 
        end if;
    end process;

    p_0_7_0_0_0172_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_7_0_0_0172_fu_178 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_32;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_7_0_0_0172_fu_178 <= trunc_ln187_30_reg_1808;
            end if; 
        end if;
    end process;

    p_0_8_0_0_0175_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_8_0_0_0175_fu_182 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_31;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_8_0_0_0175_fu_182 <= trunc_ln187_31_reg_1814;
            end if; 
        end if;
    end process;

    p_0_9_0_0_0178_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_9_0_0_0178_fu_186 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_30;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_9_0_0_0178_fu_186 <= trunc_ln187_32_reg_1820;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln185_reg_1741 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln145_reg_1850 <= and_ln145_fu_653_p2;
                trunc_ln187_23_reg_1766 <= layer8_out_dout(95 downto 90);
                trunc_ln187_24_reg_1772 <= layer8_out_dout(11 downto 6);
                trunc_ln187_25_reg_1778 <= layer8_out_dout(17 downto 12);
                trunc_ln187_26_reg_1784 <= layer8_out_dout(23 downto 18);
                trunc_ln187_27_reg_1790 <= layer8_out_dout(29 downto 24);
                trunc_ln187_28_reg_1796 <= layer8_out_dout(35 downto 30);
                trunc_ln187_29_reg_1802 <= layer8_out_dout(41 downto 36);
                trunc_ln187_30_reg_1808 <= layer8_out_dout(47 downto 42);
                trunc_ln187_31_reg_1814 <= layer8_out_dout(53 downto 48);
                trunc_ln187_32_reg_1820 <= layer8_out_dout(59 downto 54);
                trunc_ln187_33_reg_1826 <= layer8_out_dout(65 downto 60);
                trunc_ln187_34_reg_1832 <= layer8_out_dout(71 downto 66);
                trunc_ln187_35_reg_1838 <= layer8_out_dout(77 downto 72);
                trunc_ln187_36_reg_1844 <= layer8_out_dout(83 downto 78);
                trunc_ln187_reg_1754 <= trunc_ln187_fu_489_p1;
                trunc_ln187_s_reg_1760 <= layer8_out_dout(89 downto 84);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln185_fu_438_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln145_2_reg_1745 <= icmp_ln145_2_fu_454_p2;
                icmp_ln165_reg_1750 <= icmp_ln165_fu_466_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln185_reg_1741 <= icmp_ln185_fu_438_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_24 <= p_0_15_0_0_0196_fu_210;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_25 <= p_0_14_0_0_0193_fu_206;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_26 <= p_0_13_0_0_0190_fu_202;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_27 <= p_0_12_0_0_0187_fu_198;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_28 <= p_0_11_0_0_0184_fu_194;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_29 <= p_0_10_0_0_0181_fu_190;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_30 <= p_0_9_0_0_0178_fu_186;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_31 <= p_0_8_0_0_0175_fu_182;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_32 <= p_0_7_0_0_0172_fu_178;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_33 <= p_0_6_0_0_0169_fu_174;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_34 <= p_0_5_0_0_0166_fu_170;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_35 <= p_0_4_0_0_0163_fu_166;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_36 <= p_0_3_0_0_0160_fu_162;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_37 <= p_0_2_0_0_0157_fu_158;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_38 <= p_0_1_0_0_0154_fu_154;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_39 <= p_0_0_0_0_0151_fu_150;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                sX_1 <= ap_phi_mux_storemerge_phi_fu_231_p4;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, icmp_ln185_fu_438_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln185_fu_438_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((icmp_ln185_fu_438_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln165_fu_460_p2 <= std_logic_vector(unsigned(pX_1) + unsigned(ap_const_lv32_1));
    add_ln172_fu_666_p2 <= std_logic_vector(unsigned(sX_1) + unsigned(select_ln172_fu_658_p3));
    and_ln145_fu_653_p2 <= (icmp_ln145_fu_647_p2 and icmp_ln145_2_reg_1745);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg)
    begin
        if (((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(layer8_out_empty_n, layer9_out_full_n, ap_enable_reg_pp0_iter1, icmp_ln185_reg_1741, ap_enable_reg_pp0_iter2, and_ln145_reg_1850)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_const_lv1_1 = and_ln145_reg_1850) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (layer9_out_full_n = ap_const_logic_0)) or ((icmp_ln185_reg_1741 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (layer8_out_empty_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(layer8_out_empty_n, layer9_out_full_n, ap_enable_reg_pp0_iter1, icmp_ln185_reg_1741, ap_enable_reg_pp0_iter2, and_ln145_reg_1850)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_lv1_1 = and_ln145_reg_1850) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (layer9_out_full_n = ap_const_logic_0)) or ((icmp_ln185_reg_1741 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (layer8_out_empty_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(layer8_out_empty_n, layer9_out_full_n, ap_enable_reg_pp0_iter1, icmp_ln185_reg_1741, ap_enable_reg_pp0_iter2, and_ln145_reg_1850)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_lv1_1 = and_ln145_reg_1850) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (layer9_out_full_n = ap_const_logic_0)) or ((icmp_ln185_reg_1741 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (layer8_out_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(layer8_out_empty_n, icmp_ln185_reg_1741)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((icmp_ln185_reg_1741 = ap_const_lv1_0) and (layer8_out_empty_n = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter2_assign_proc : process(layer9_out_full_n, and_ln145_reg_1850)
    begin
                ap_block_state4_pp0_stage0_iter2 <= ((ap_const_lv1_1 = and_ln145_reg_1850) and (layer9_out_full_n = ap_const_logic_0));
    end process;


    ap_condition_187_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_187 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_257_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln185_fu_438_p2, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_257 <= ((icmp_ln185_fu_438_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln185_fu_438_p2)
    begin
        if ((icmp_ln185_fu_438_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge_phi_fu_231_p4_assign_proc : process(icmp_ln185_reg_1741, icmp_ln165_reg_1750, add_ln172_fu_666_p2, ap_phi_reg_pp0_iter1_storemerge_reg_227)
    begin
        if (((icmp_ln185_reg_1741 = ap_const_lv1_0) and (icmp_ln165_reg_1750 = ap_const_lv1_0))) then 
            ap_phi_mux_storemerge_phi_fu_231_p4 <= add_ln172_fu_666_p2;
        else 
            ap_phi_mux_storemerge_phi_fu_231_p4 <= ap_phi_reg_pp0_iter1_storemerge_reg_227;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_reg_227 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;
    i_iw_4_fu_444_p2 <= std_logic_vector(unsigned(i_iw_fu_146) + unsigned(ap_const_lv3_1));
    icmp_ln145_2_fu_454_p2 <= "1" when (signed(pX_1) > signed(ap_const_lv32_0)) else "0";
    icmp_ln145_fu_647_p2 <= "1" when (sX_1 = ap_const_lv32_1) else "0";
    icmp_ln1651_24_fu_741_p2 <= "1" when (unsigned(pool_window_V_49_fu_726_p3) < unsigned(pool_window_V_50_fu_734_p3)) else "0";
    icmp_ln1651_25_fu_788_p2 <= "1" when (unsigned(pool_window_V_51_fu_773_p3) < unsigned(pool_window_V_52_fu_781_p3)) else "0";
    icmp_ln1651_26_fu_835_p2 <= "1" when (unsigned(pool_window_V_53_fu_820_p3) < unsigned(pool_window_V_54_fu_828_p3)) else "0";
    icmp_ln1651_27_fu_882_p2 <= "1" when (unsigned(pool_window_V_55_fu_867_p3) < unsigned(pool_window_V_56_fu_875_p3)) else "0";
    icmp_ln1651_28_fu_929_p2 <= "1" when (unsigned(pool_window_V_57_fu_914_p3) < unsigned(pool_window_V_58_fu_922_p3)) else "0";
    icmp_ln1651_29_fu_976_p2 <= "1" when (unsigned(pool_window_V_59_fu_961_p3) < unsigned(pool_window_V_60_fu_969_p3)) else "0";
    icmp_ln1651_30_fu_1023_p2 <= "1" when (unsigned(pool_window_V_61_fu_1008_p3) < unsigned(pool_window_V_62_fu_1016_p3)) else "0";
    icmp_ln1651_31_fu_1070_p2 <= "1" when (unsigned(pool_window_V_63_fu_1055_p3) < unsigned(pool_window_V_64_fu_1063_p3)) else "0";
    icmp_ln1651_32_fu_1117_p2 <= "1" when (unsigned(pool_window_V_65_fu_1102_p3) < unsigned(pool_window_V_66_fu_1110_p3)) else "0";
    icmp_ln1651_33_fu_1164_p2 <= "1" when (unsigned(pool_window_V_67_fu_1149_p3) < unsigned(pool_window_V_68_fu_1157_p3)) else "0";
    icmp_ln1651_34_fu_1211_p2 <= "1" when (unsigned(pool_window_V_69_fu_1196_p3) < unsigned(pool_window_V_70_fu_1204_p3)) else "0";
    icmp_ln1651_35_fu_1258_p2 <= "1" when (unsigned(pool_window_V_71_fu_1243_p3) < unsigned(pool_window_V_72_fu_1251_p3)) else "0";
    icmp_ln1651_36_fu_1305_p2 <= "1" when (unsigned(pool_window_V_73_fu_1290_p3) < unsigned(pool_window_V_74_fu_1298_p3)) else "0";
    icmp_ln1651_37_fu_1352_p2 <= "1" when (unsigned(pool_window_V_75_fu_1337_p3) < unsigned(pool_window_V_76_fu_1345_p3)) else "0";
    icmp_ln1651_38_fu_1399_p2 <= "1" when (unsigned(pool_window_V_77_fu_1384_p3) < unsigned(pool_window_V_78_fu_1392_p3)) else "0";
    icmp_ln1651_fu_694_p2 <= "1" when (unsigned(pool_window_V_fu_679_p3) < unsigned(pool_window_V_48_fu_687_p3)) else "0";
    icmp_ln165_fu_466_p2 <= "1" when (add_ln165_fu_460_p2 = ap_const_lv32_4) else "0";
    icmp_ln185_fu_438_p2 <= "1" when (i_iw_fu_146 = ap_const_lv3_4) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    layer8_out_blk_n_assign_proc : process(layer8_out_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln185_reg_1741)
    begin
        if (((icmp_ln185_reg_1741 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer8_out_blk_n <= layer8_out_empty_n;
        else 
            layer8_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer8_out_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln185_reg_1741, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln185_reg_1741 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer8_out_read <= ap_const_logic_1;
        else 
            layer8_out_read <= ap_const_logic_0;
        end if; 
    end process;


    layer9_out_blk_n_assign_proc : process(layer9_out_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, and_ln145_reg_1850)
    begin
        if (((ap_const_lv1_1 = and_ln145_reg_1850) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            layer9_out_blk_n <= layer9_out_full_n;
        else 
            layer9_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    layer9_out_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln161_s_fu_1419_p18),256));

    layer9_out_write_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln145_reg_1850, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_1 = and_ln145_reg_1850) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            layer9_out_write <= ap_const_logic_1;
        else 
            layer9_out_write <= ap_const_logic_0;
        end if; 
    end process;

    or_ln161_s_fu_1419_p18 <= ((((((((((((((((select_ln65_38_fu_1411_p3 & ap_const_lv1_0) & zext_ln837_28_fu_1380_p1) & zext_ln837_27_fu_1333_p1) & zext_ln837_26_fu_1286_p1) & zext_ln837_25_fu_1239_p1) & zext_ln837_24_fu_1192_p1) & zext_ln837_23_fu_1145_p1) & zext_ln837_22_fu_1098_p1) & zext_ln837_21_fu_1051_p1) & zext_ln837_20_fu_1004_p1) & zext_ln837_19_fu_957_p1) & zext_ln837_fu_910_p1) & zext_ln137_6_fu_863_p1) & zext_ln137_5_fu_816_p1) & zext_ln137_4_fu_769_p1) & zext_ln137_fu_722_p1);
    pool_window_V_48_fu_687_p3 <= (trunc_ln187_reg_1754 & ap_const_lv3_0);
    pool_window_V_49_fu_726_p3 <= (p_0_1_0_0_0154_fu_154 & ap_const_lv3_0);
    pool_window_V_50_fu_734_p3 <= (trunc_ln187_24_reg_1772 & ap_const_lv3_0);
    pool_window_V_51_fu_773_p3 <= (p_0_2_0_0_0157_fu_158 & ap_const_lv3_0);
    pool_window_V_52_fu_781_p3 <= (trunc_ln187_25_reg_1778 & ap_const_lv3_0);
    pool_window_V_53_fu_820_p3 <= (p_0_3_0_0_0160_fu_162 & ap_const_lv3_0);
    pool_window_V_54_fu_828_p3 <= (trunc_ln187_26_reg_1784 & ap_const_lv3_0);
    pool_window_V_55_fu_867_p3 <= (p_0_4_0_0_0163_fu_166 & ap_const_lv3_0);
    pool_window_V_56_fu_875_p3 <= (trunc_ln187_27_reg_1790 & ap_const_lv3_0);
    pool_window_V_57_fu_914_p3 <= (p_0_5_0_0_0166_fu_170 & ap_const_lv3_0);
    pool_window_V_58_fu_922_p3 <= (trunc_ln187_28_reg_1796 & ap_const_lv3_0);
    pool_window_V_59_fu_961_p3 <= (p_0_6_0_0_0169_fu_174 & ap_const_lv3_0);
    pool_window_V_60_fu_969_p3 <= (trunc_ln187_29_reg_1802 & ap_const_lv3_0);
    pool_window_V_61_fu_1008_p3 <= (p_0_7_0_0_0172_fu_178 & ap_const_lv3_0);
    pool_window_V_62_fu_1016_p3 <= (trunc_ln187_30_reg_1808 & ap_const_lv3_0);
    pool_window_V_63_fu_1055_p3 <= (p_0_8_0_0_0175_fu_182 & ap_const_lv3_0);
    pool_window_V_64_fu_1063_p3 <= (trunc_ln187_31_reg_1814 & ap_const_lv3_0);
    pool_window_V_65_fu_1102_p3 <= (p_0_9_0_0_0178_fu_186 & ap_const_lv3_0);
    pool_window_V_66_fu_1110_p3 <= (trunc_ln187_32_reg_1820 & ap_const_lv3_0);
    pool_window_V_67_fu_1149_p3 <= (p_0_10_0_0_0181_fu_190 & ap_const_lv3_0);
    pool_window_V_68_fu_1157_p3 <= (trunc_ln187_33_reg_1826 & ap_const_lv3_0);
    pool_window_V_69_fu_1196_p3 <= (p_0_11_0_0_0184_fu_194 & ap_const_lv3_0);
    pool_window_V_70_fu_1204_p3 <= (trunc_ln187_34_reg_1832 & ap_const_lv3_0);
    pool_window_V_71_fu_1243_p3 <= (p_0_12_0_0_0187_fu_198 & ap_const_lv3_0);
    pool_window_V_72_fu_1251_p3 <= (trunc_ln187_35_reg_1838 & ap_const_lv3_0);
    pool_window_V_73_fu_1290_p3 <= (p_0_13_0_0_0190_fu_202 & ap_const_lv3_0);
    pool_window_V_74_fu_1298_p3 <= (trunc_ln187_36_reg_1844 & ap_const_lv3_0);
    pool_window_V_75_fu_1337_p3 <= (p_0_14_0_0_0193_fu_206 & ap_const_lv3_0);
    pool_window_V_76_fu_1345_p3 <= (trunc_ln187_s_reg_1760 & ap_const_lv3_0);
    pool_window_V_77_fu_1384_p3 <= (p_0_15_0_0_0196_fu_210 & ap_const_lv3_0);
    pool_window_V_78_fu_1392_p3 <= (trunc_ln187_23_reg_1766 & ap_const_lv3_0);
    pool_window_V_fu_679_p3 <= (p_0_0_0_0_0151_fu_150 & ap_const_lv3_0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    res_pack_data_4_fu_761_p3 <= (select_ln65_24_fu_753_p3 & ap_const_lv1_0);
    res_pack_data_5_fu_808_p3 <= (select_ln65_25_fu_800_p3 & ap_const_lv1_0);
    res_pack_data_6_fu_855_p3 <= (select_ln65_26_fu_847_p3 & ap_const_lv1_0);
    res_pack_data_fu_714_p3 <= (select_ln65_fu_706_p3 & ap_const_lv1_0);
    select_ln172_fu_658_p3 <= 
        ap_const_lv32_FFFFFFFF when (icmp_ln145_fu_647_p2(0) = '1') else 
        ap_const_lv32_1;
    select_ln65_24_fu_753_p3 <= 
        pool_window_V_49_fu_726_p3 when (xor_ln1651_24_fu_747_p2(0) = '1') else 
        pool_window_V_50_fu_734_p3;
    select_ln65_25_fu_800_p3 <= 
        pool_window_V_51_fu_773_p3 when (xor_ln1651_25_fu_794_p2(0) = '1') else 
        pool_window_V_52_fu_781_p3;
    select_ln65_26_fu_847_p3 <= 
        pool_window_V_53_fu_820_p3 when (xor_ln1651_26_fu_841_p2(0) = '1') else 
        pool_window_V_54_fu_828_p3;
    select_ln65_27_fu_894_p3 <= 
        pool_window_V_55_fu_867_p3 when (xor_ln1651_27_fu_888_p2(0) = '1') else 
        pool_window_V_56_fu_875_p3;
    select_ln65_28_fu_941_p3 <= 
        pool_window_V_57_fu_914_p3 when (xor_ln1651_28_fu_935_p2(0) = '1') else 
        pool_window_V_58_fu_922_p3;
    select_ln65_29_fu_988_p3 <= 
        pool_window_V_59_fu_961_p3 when (xor_ln1651_29_fu_982_p2(0) = '1') else 
        pool_window_V_60_fu_969_p3;
    select_ln65_30_fu_1035_p3 <= 
        pool_window_V_61_fu_1008_p3 when (xor_ln1651_30_fu_1029_p2(0) = '1') else 
        pool_window_V_62_fu_1016_p3;
    select_ln65_31_fu_1082_p3 <= 
        pool_window_V_63_fu_1055_p3 when (xor_ln1651_31_fu_1076_p2(0) = '1') else 
        pool_window_V_64_fu_1063_p3;
    select_ln65_32_fu_1129_p3 <= 
        pool_window_V_65_fu_1102_p3 when (xor_ln1651_32_fu_1123_p2(0) = '1') else 
        pool_window_V_66_fu_1110_p3;
    select_ln65_33_fu_1176_p3 <= 
        pool_window_V_67_fu_1149_p3 when (xor_ln1651_33_fu_1170_p2(0) = '1') else 
        pool_window_V_68_fu_1157_p3;
    select_ln65_34_fu_1223_p3 <= 
        pool_window_V_69_fu_1196_p3 when (xor_ln1651_34_fu_1217_p2(0) = '1') else 
        pool_window_V_70_fu_1204_p3;
    select_ln65_35_fu_1270_p3 <= 
        pool_window_V_71_fu_1243_p3 when (xor_ln1651_35_fu_1264_p2(0) = '1') else 
        pool_window_V_72_fu_1251_p3;
    select_ln65_36_fu_1317_p3 <= 
        pool_window_V_73_fu_1290_p3 when (xor_ln1651_36_fu_1311_p2(0) = '1') else 
        pool_window_V_74_fu_1298_p3;
    select_ln65_37_fu_1364_p3 <= 
        pool_window_V_75_fu_1337_p3 when (xor_ln1651_37_fu_1358_p2(0) = '1') else 
        pool_window_V_76_fu_1345_p3;
    select_ln65_38_fu_1411_p3 <= 
        pool_window_V_77_fu_1384_p3 when (xor_ln1651_38_fu_1405_p2(0) = '1') else 
        pool_window_V_78_fu_1392_p3;
    select_ln65_fu_706_p3 <= 
        pool_window_V_fu_679_p3 when (xor_ln1651_fu_700_p2(0) = '1') else 
        pool_window_V_48_fu_687_p3;
    shl_ln841_18_fu_996_p3 <= (select_ln65_29_fu_988_p3 & ap_const_lv1_0);
    shl_ln841_19_fu_1043_p3 <= (select_ln65_30_fu_1035_p3 & ap_const_lv1_0);
    shl_ln841_20_fu_1090_p3 <= (select_ln65_31_fu_1082_p3 & ap_const_lv1_0);
    shl_ln841_21_fu_1137_p3 <= (select_ln65_32_fu_1129_p3 & ap_const_lv1_0);
    shl_ln841_22_fu_1184_p3 <= (select_ln65_33_fu_1176_p3 & ap_const_lv1_0);
    shl_ln841_23_fu_1231_p3 <= (select_ln65_34_fu_1223_p3 & ap_const_lv1_0);
    shl_ln841_24_fu_1278_p3 <= (select_ln65_35_fu_1270_p3 & ap_const_lv1_0);
    shl_ln841_25_fu_1325_p3 <= (select_ln65_36_fu_1317_p3 & ap_const_lv1_0);
    shl_ln841_26_fu_1372_p3 <= (select_ln65_37_fu_1364_p3 & ap_const_lv1_0);
    shl_ln841_s_fu_949_p3 <= (select_ln65_28_fu_941_p3 & ap_const_lv1_0);
    shl_ln_fu_902_p3 <= (select_ln65_27_fu_894_p3 & ap_const_lv1_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln187_fu_489_p1 <= layer8_out_dout(6 - 1 downto 0);
    xor_ln1651_24_fu_747_p2 <= (icmp_ln1651_24_fu_741_p2 xor ap_const_lv1_1);
    xor_ln1651_25_fu_794_p2 <= (icmp_ln1651_25_fu_788_p2 xor ap_const_lv1_1);
    xor_ln1651_26_fu_841_p2 <= (icmp_ln1651_26_fu_835_p2 xor ap_const_lv1_1);
    xor_ln1651_27_fu_888_p2 <= (icmp_ln1651_27_fu_882_p2 xor ap_const_lv1_1);
    xor_ln1651_28_fu_935_p2 <= (icmp_ln1651_28_fu_929_p2 xor ap_const_lv1_1);
    xor_ln1651_29_fu_982_p2 <= (icmp_ln1651_29_fu_976_p2 xor ap_const_lv1_1);
    xor_ln1651_30_fu_1029_p2 <= (icmp_ln1651_30_fu_1023_p2 xor ap_const_lv1_1);
    xor_ln1651_31_fu_1076_p2 <= (icmp_ln1651_31_fu_1070_p2 xor ap_const_lv1_1);
    xor_ln1651_32_fu_1123_p2 <= (icmp_ln1651_32_fu_1117_p2 xor ap_const_lv1_1);
    xor_ln1651_33_fu_1170_p2 <= (icmp_ln1651_33_fu_1164_p2 xor ap_const_lv1_1);
    xor_ln1651_34_fu_1217_p2 <= (icmp_ln1651_34_fu_1211_p2 xor ap_const_lv1_1);
    xor_ln1651_35_fu_1264_p2 <= (icmp_ln1651_35_fu_1258_p2 xor ap_const_lv1_1);
    xor_ln1651_36_fu_1311_p2 <= (icmp_ln1651_36_fu_1305_p2 xor ap_const_lv1_1);
    xor_ln1651_37_fu_1358_p2 <= (icmp_ln1651_37_fu_1352_p2 xor ap_const_lv1_1);
    xor_ln1651_38_fu_1405_p2 <= (icmp_ln1651_38_fu_1399_p2 xor ap_const_lv1_1);
    xor_ln1651_fu_700_p2 <= (icmp_ln1651_fu_694_p2 xor ap_const_lv1_1);
    zext_ln137_4_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(res_pack_data_4_fu_761_p3),16));
    zext_ln137_5_fu_816_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(res_pack_data_5_fu_808_p3),16));
    zext_ln137_6_fu_863_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(res_pack_data_6_fu_855_p3),16));
    zext_ln137_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(res_pack_data_fu_714_p3),16));
    zext_ln837_19_fu_957_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_s_fu_949_p3),16));
    zext_ln837_20_fu_1004_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_18_fu_996_p3),16));
    zext_ln837_21_fu_1051_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_19_fu_1043_p3),16));
    zext_ln837_22_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_20_fu_1090_p3),16));
    zext_ln837_23_fu_1145_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_21_fu_1137_p3),16));
    zext_ln837_24_fu_1192_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_22_fu_1184_p3),16));
    zext_ln837_25_fu_1239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_23_fu_1231_p3),16));
    zext_ln837_26_fu_1286_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_24_fu_1278_p3),16));
    zext_ln837_27_fu_1333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_25_fu_1325_p3),16));
    zext_ln837_28_fu_1380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_26_fu_1372_p3),16));
    zext_ln837_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_902_p3),16));
end behav;
