-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity alveo_hls4ml_pooling1d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config5_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    layer4_out_dout : IN STD_LOGIC_VECTOR (95 downto 0);
    layer4_out_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    layer4_out_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    layer4_out_empty_n : IN STD_LOGIC;
    layer4_out_read : OUT STD_LOGIC;
    layer5_out_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    layer5_out_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    layer5_out_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    layer5_out_full_n : IN STD_LOGIC;
    layer5_out_write : OUT STD_LOGIC );
end;


architecture behav of alveo_hls4ml_pooling1d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config5_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_55 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_54 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_53 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_52 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_51 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_50 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_49 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_48 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_47 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_46 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_45 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_44 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_43 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_42 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_41 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_40 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal sX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer4_out_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln185_reg_1743 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer5_out_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal and_ln145_reg_1852 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln185_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln145_3_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln145_3_reg_1747 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln165_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln165_reg_1752 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln187_fu_491_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_reg_1756 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_s_reg_1762 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_37_reg_1768 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_38_reg_1774 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_39_reg_1780 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_40_reg_1786 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_41_reg_1792 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_42_reg_1798 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_43_reg_1804 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_44_reg_1810 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_45_reg_1816 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_46_reg_1822 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_47_reg_1828 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_48_reg_1834 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_49_reg_1840 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln187_50_reg_1846 : STD_LOGIC_VECTOR (5 downto 0);
    signal and_ln145_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_phi_mux_storemerge_phi_fu_233_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln172_fu_668_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_reg_229 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge_reg_229 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln165_fu_462_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_iw_fu_148 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_iw_6_fu_446_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0_0_0_0_0151_fu_152 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_1_0_0_0154_fu_156 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_2_0_0_0157_fu_160 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_3_0_0_0160_fu_164 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_4_0_0_0163_fu_168 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_5_0_0_0166_fu_172 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_6_0_0_0169_fu_176 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_7_0_0_0172_fu_180 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_8_0_0_0175_fu_184 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_9_0_0_0178_fu_188 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_10_0_0_0181_fu_192 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_11_0_0_0184_fu_196 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_12_0_0_0187_fu_200 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_13_0_0_0190_fu_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_14_0_0_0193_fu_208 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_15_0_0_0196_fu_212 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln145_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln172_fu_660_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_window_V_fu_681_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_79_fu_689_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_fu_696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_fu_708_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal res_pack_data_fu_716_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_80_fu_728_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_81_fu_736_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_39_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_39_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_39_fu_755_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal res_pack_data_7_fu_763_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_82_fu_775_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_83_fu_783_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_40_fu_790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_40_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_40_fu_802_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal res_pack_data_8_fu_810_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_84_fu_822_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_85_fu_830_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_41_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_41_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_41_fu_849_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal res_pack_data_9_fu_857_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_86_fu_869_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_87_fu_877_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_42_fu_884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_42_fu_890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_42_fu_896_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln_fu_904_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_88_fu_916_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_89_fu_924_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_43_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_43_fu_937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_43_fu_943_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_s_fu_951_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_90_fu_963_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_91_fu_971_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_44_fu_978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_44_fu_984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_44_fu_990_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_27_fu_998_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_92_fu_1010_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_93_fu_1018_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_45_fu_1025_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_45_fu_1031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_45_fu_1037_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_28_fu_1045_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_94_fu_1057_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_95_fu_1065_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_46_fu_1072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_46_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_46_fu_1084_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_29_fu_1092_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_96_fu_1104_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_97_fu_1112_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_47_fu_1119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_47_fu_1125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_47_fu_1131_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_30_fu_1139_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_98_fu_1151_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_99_fu_1159_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_48_fu_1166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_48_fu_1172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_48_fu_1178_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_31_fu_1186_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_100_fu_1198_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_101_fu_1206_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_49_fu_1213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_49_fu_1219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_49_fu_1225_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_32_fu_1233_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_102_fu_1245_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_103_fu_1253_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_50_fu_1260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_50_fu_1266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_50_fu_1272_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_33_fu_1280_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_104_fu_1292_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_105_fu_1300_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_51_fu_1307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_51_fu_1313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_51_fu_1319_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_34_fu_1327_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_106_fu_1339_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_107_fu_1347_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_52_fu_1354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_52_fu_1360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_52_fu_1366_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln841_35_fu_1374_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_V_108_fu_1386_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_window_V_109_fu_1394_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1651_53_fu_1401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1651_53_fu_1407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_53_fu_1413_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln837_38_fu_1382_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_37_fu_1335_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_36_fu_1288_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_35_fu_1241_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_34_fu_1194_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_33_fu_1147_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_32_fu_1100_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_31_fu_1053_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_30_fu_1006_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_29_fu_959_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln837_fu_912_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln137_9_fu_865_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln137_8_fu_818_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln137_7_fu_771_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln137_fu_724_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln161_s_fu_1421_p18 : STD_LOGIC_VECTOR (249 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_187 : BOOLEAN;
    signal ap_condition_257 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_storemerge_reg_229_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_187)) then
                if (((icmp_ln185_fu_440_p2 = ap_const_lv1_0) and (icmp_ln165_fu_468_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_storemerge_reg_229 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_storemerge_reg_229 <= ap_phi_reg_pp0_iter0_storemerge_reg_229;
                end if;
            end if; 
        end if;
    end process;

    i_iw_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_iw_fu_148 <= ap_const_lv4_0;
            elsif (((icmp_ln185_fu_440_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                i_iw_fu_148 <= i_iw_6_fu_446_p2;
            end if; 
        end if;
    end process;

    pX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_257)) then
                if ((icmp_ln165_fu_468_p2 = ap_const_lv1_1)) then 
                    pX_2 <= ap_const_lv32_0;
                elsif ((icmp_ln165_fu_468_p2 = ap_const_lv1_0)) then 
                    pX_2 <= add_ln165_fu_462_p2;
                end if;
            end if; 
        end if;
    end process;

    p_0_0_0_0_0151_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_0_0_0_0151_fu_152 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_55;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_0_0_0_0151_fu_152 <= trunc_ln187_reg_1756;
            end if; 
        end if;
    end process;

    p_0_10_0_0_0181_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_10_0_0_0181_fu_192 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_45;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_10_0_0_0181_fu_192 <= trunc_ln187_47_reg_1828;
            end if; 
        end if;
    end process;

    p_0_11_0_0_0184_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_11_0_0_0184_fu_196 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_44;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_11_0_0_0184_fu_196 <= trunc_ln187_48_reg_1834;
            end if; 
        end if;
    end process;

    p_0_12_0_0_0187_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_12_0_0_0187_fu_200 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_43;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_12_0_0_0187_fu_200 <= trunc_ln187_49_reg_1840;
            end if; 
        end if;
    end process;

    p_0_13_0_0_0190_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_13_0_0_0190_fu_204 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_42;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_13_0_0_0190_fu_204 <= trunc_ln187_50_reg_1846;
            end if; 
        end if;
    end process;

    p_0_14_0_0_0193_fu_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_14_0_0_0193_fu_208 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_41;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_14_0_0_0193_fu_208 <= trunc_ln187_s_reg_1762;
            end if; 
        end if;
    end process;

    p_0_15_0_0_0196_fu_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_15_0_0_0196_fu_212 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_40;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_15_0_0_0196_fu_212 <= trunc_ln187_37_reg_1768;
            end if; 
        end if;
    end process;

    p_0_1_0_0_0154_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_1_0_0_0154_fu_156 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_54;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_1_0_0_0154_fu_156 <= trunc_ln187_38_reg_1774;
            end if; 
        end if;
    end process;

    p_0_2_0_0_0157_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_2_0_0_0157_fu_160 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_53;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_2_0_0_0157_fu_160 <= trunc_ln187_39_reg_1780;
            end if; 
        end if;
    end process;

    p_0_3_0_0_0160_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_3_0_0_0160_fu_164 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_52;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_3_0_0_0160_fu_164 <= trunc_ln187_40_reg_1786;
            end if; 
        end if;
    end process;

    p_0_4_0_0_0163_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_4_0_0_0163_fu_168 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_51;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_4_0_0_0163_fu_168 <= trunc_ln187_41_reg_1792;
            end if; 
        end if;
    end process;

    p_0_5_0_0_0166_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_5_0_0_0166_fu_172 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_50;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_5_0_0_0166_fu_172 <= trunc_ln187_42_reg_1798;
            end if; 
        end if;
    end process;

    p_0_6_0_0_0169_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_6_0_0_0169_fu_176 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_49;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_6_0_0_0169_fu_176 <= trunc_ln187_43_reg_1804;
            end if; 
        end if;
    end process;

    p_0_7_0_0_0172_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_7_0_0_0172_fu_180 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_48;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_7_0_0_0172_fu_180 <= trunc_ln187_44_reg_1810;
            end if; 
        end if;
    end process;

    p_0_8_0_0_0175_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_8_0_0_0175_fu_184 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_47;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_8_0_0_0175_fu_184 <= trunc_ln187_45_reg_1816;
            end if; 
        end if;
    end process;

    p_0_9_0_0_0178_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0_9_0_0_0178_fu_188 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_46;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0_9_0_0_0178_fu_188 <= trunc_ln187_46_reg_1822;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln185_reg_1743 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln145_reg_1852 <= and_ln145_fu_655_p2;
                trunc_ln187_37_reg_1768 <= layer4_out_dout(95 downto 90);
                trunc_ln187_38_reg_1774 <= layer4_out_dout(11 downto 6);
                trunc_ln187_39_reg_1780 <= layer4_out_dout(17 downto 12);
                trunc_ln187_40_reg_1786 <= layer4_out_dout(23 downto 18);
                trunc_ln187_41_reg_1792 <= layer4_out_dout(29 downto 24);
                trunc_ln187_42_reg_1798 <= layer4_out_dout(35 downto 30);
                trunc_ln187_43_reg_1804 <= layer4_out_dout(41 downto 36);
                trunc_ln187_44_reg_1810 <= layer4_out_dout(47 downto 42);
                trunc_ln187_45_reg_1816 <= layer4_out_dout(53 downto 48);
                trunc_ln187_46_reg_1822 <= layer4_out_dout(59 downto 54);
                trunc_ln187_47_reg_1828 <= layer4_out_dout(65 downto 60);
                trunc_ln187_48_reg_1834 <= layer4_out_dout(71 downto 66);
                trunc_ln187_49_reg_1840 <= layer4_out_dout(77 downto 72);
                trunc_ln187_50_reg_1846 <= layer4_out_dout(83 downto 78);
                trunc_ln187_reg_1756 <= trunc_ln187_fu_491_p1;
                trunc_ln187_s_reg_1762 <= layer4_out_dout(89 downto 84);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln185_fu_440_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln145_3_reg_1747 <= icmp_ln145_3_fu_456_p2;
                icmp_ln165_reg_1752 <= icmp_ln165_fu_468_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln185_reg_1743 <= icmp_ln185_fu_440_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_40 <= p_0_15_0_0_0196_fu_212;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_41 <= p_0_14_0_0_0193_fu_208;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_42 <= p_0_13_0_0_0190_fu_204;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_43 <= p_0_12_0_0_0187_fu_200;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_44 <= p_0_11_0_0_0184_fu_196;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_45 <= p_0_10_0_0_0181_fu_192;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_46 <= p_0_9_0_0_0178_fu_188;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_47 <= p_0_8_0_0_0175_fu_184;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_48 <= p_0_7_0_0_0172_fu_180;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_49 <= p_0_6_0_0_0169_fu_176;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_50 <= p_0_5_0_0_0166_fu_172;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_51 <= p_0_4_0_0_0163_fu_168;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_52 <= p_0_3_0_0_0160_fu_164;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_53 <= p_0_2_0_0_0157_fu_160;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_54 <= p_0_1_0_0_0154_fu_156;
                p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_55 <= p_0_0_0_0_0151_fu_152;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                sX_2 <= ap_phi_mux_storemerge_phi_fu_233_p4;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, icmp_ln185_fu_440_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln185_fu_440_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((icmp_ln185_fu_440_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln165_fu_462_p2 <= std_logic_vector(unsigned(pX_2) + unsigned(ap_const_lv32_1));
    add_ln172_fu_668_p2 <= std_logic_vector(unsigned(sX_2) + unsigned(select_ln172_fu_660_p3));
    and_ln145_fu_655_p2 <= (icmp_ln145_fu_649_p2 and icmp_ln145_3_reg_1747);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg)
    begin
        if (((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(layer4_out_empty_n, layer5_out_full_n, ap_enable_reg_pp0_iter1, icmp_ln185_reg_1743, ap_enable_reg_pp0_iter2, and_ln145_reg_1852)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_const_lv1_1 = and_ln145_reg_1852) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (layer5_out_full_n = ap_const_logic_0)) or ((icmp_ln185_reg_1743 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (layer4_out_empty_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(layer4_out_empty_n, layer5_out_full_n, ap_enable_reg_pp0_iter1, icmp_ln185_reg_1743, ap_enable_reg_pp0_iter2, and_ln145_reg_1852)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_lv1_1 = and_ln145_reg_1852) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (layer5_out_full_n = ap_const_logic_0)) or ((icmp_ln185_reg_1743 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (layer4_out_empty_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(layer4_out_empty_n, layer5_out_full_n, ap_enable_reg_pp0_iter1, icmp_ln185_reg_1743, ap_enable_reg_pp0_iter2, and_ln145_reg_1852)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_lv1_1 = and_ln145_reg_1852) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (layer5_out_full_n = ap_const_logic_0)) or ((icmp_ln185_reg_1743 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (layer4_out_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(layer4_out_empty_n, icmp_ln185_reg_1743)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((icmp_ln185_reg_1743 = ap_const_lv1_0) and (layer4_out_empty_n = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter2_assign_proc : process(layer5_out_full_n, and_ln145_reg_1852)
    begin
                ap_block_state4_pp0_stage0_iter2 <= ((ap_const_lv1_1 = and_ln145_reg_1852) and (layer5_out_full_n = ap_const_logic_0));
    end process;


    ap_condition_187_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_187 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_257_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln185_fu_440_p2, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_257 <= ((icmp_ln185_fu_440_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln185_fu_440_p2)
    begin
        if ((icmp_ln185_fu_440_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge_phi_fu_233_p4_assign_proc : process(icmp_ln185_reg_1743, icmp_ln165_reg_1752, add_ln172_fu_668_p2, ap_phi_reg_pp0_iter1_storemerge_reg_229)
    begin
        if (((icmp_ln185_reg_1743 = ap_const_lv1_0) and (icmp_ln165_reg_1752 = ap_const_lv1_0))) then 
            ap_phi_mux_storemerge_phi_fu_233_p4 <= add_ln172_fu_668_p2;
        else 
            ap_phi_mux_storemerge_phi_fu_233_p4 <= ap_phi_reg_pp0_iter1_storemerge_reg_229;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_reg_229 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;
    i_iw_6_fu_446_p2 <= std_logic_vector(unsigned(i_iw_fu_148) + unsigned(ap_const_lv4_1));
    icmp_ln145_3_fu_456_p2 <= "1" when (signed(pX_2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln145_fu_649_p2 <= "1" when (sX_2 = ap_const_lv32_1) else "0";
    icmp_ln1651_39_fu_743_p2 <= "1" when (unsigned(pool_window_V_80_fu_728_p3) < unsigned(pool_window_V_81_fu_736_p3)) else "0";
    icmp_ln1651_40_fu_790_p2 <= "1" when (unsigned(pool_window_V_82_fu_775_p3) < unsigned(pool_window_V_83_fu_783_p3)) else "0";
    icmp_ln1651_41_fu_837_p2 <= "1" when (unsigned(pool_window_V_84_fu_822_p3) < unsigned(pool_window_V_85_fu_830_p3)) else "0";
    icmp_ln1651_42_fu_884_p2 <= "1" when (unsigned(pool_window_V_86_fu_869_p3) < unsigned(pool_window_V_87_fu_877_p3)) else "0";
    icmp_ln1651_43_fu_931_p2 <= "1" when (unsigned(pool_window_V_88_fu_916_p3) < unsigned(pool_window_V_89_fu_924_p3)) else "0";
    icmp_ln1651_44_fu_978_p2 <= "1" when (unsigned(pool_window_V_90_fu_963_p3) < unsigned(pool_window_V_91_fu_971_p3)) else "0";
    icmp_ln1651_45_fu_1025_p2 <= "1" when (unsigned(pool_window_V_92_fu_1010_p3) < unsigned(pool_window_V_93_fu_1018_p3)) else "0";
    icmp_ln1651_46_fu_1072_p2 <= "1" when (unsigned(pool_window_V_94_fu_1057_p3) < unsigned(pool_window_V_95_fu_1065_p3)) else "0";
    icmp_ln1651_47_fu_1119_p2 <= "1" when (unsigned(pool_window_V_96_fu_1104_p3) < unsigned(pool_window_V_97_fu_1112_p3)) else "0";
    icmp_ln1651_48_fu_1166_p2 <= "1" when (unsigned(pool_window_V_98_fu_1151_p3) < unsigned(pool_window_V_99_fu_1159_p3)) else "0";
    icmp_ln1651_49_fu_1213_p2 <= "1" when (unsigned(pool_window_V_100_fu_1198_p3) < unsigned(pool_window_V_101_fu_1206_p3)) else "0";
    icmp_ln1651_50_fu_1260_p2 <= "1" when (unsigned(pool_window_V_102_fu_1245_p3) < unsigned(pool_window_V_103_fu_1253_p3)) else "0";
    icmp_ln1651_51_fu_1307_p2 <= "1" when (unsigned(pool_window_V_104_fu_1292_p3) < unsigned(pool_window_V_105_fu_1300_p3)) else "0";
    icmp_ln1651_52_fu_1354_p2 <= "1" when (unsigned(pool_window_V_106_fu_1339_p3) < unsigned(pool_window_V_107_fu_1347_p3)) else "0";
    icmp_ln1651_53_fu_1401_p2 <= "1" when (unsigned(pool_window_V_108_fu_1386_p3) < unsigned(pool_window_V_109_fu_1394_p3)) else "0";
    icmp_ln1651_fu_696_p2 <= "1" when (unsigned(pool_window_V_fu_681_p3) < unsigned(pool_window_V_79_fu_689_p3)) else "0";
    icmp_ln165_fu_468_p2 <= "1" when (add_ln165_fu_462_p2 = ap_const_lv32_8) else "0";
    icmp_ln185_fu_440_p2 <= "1" when (i_iw_fu_148 = ap_const_lv4_8) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    layer4_out_blk_n_assign_proc : process(layer4_out_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln185_reg_1743)
    begin
        if (((icmp_ln185_reg_1743 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer4_out_blk_n <= layer4_out_empty_n;
        else 
            layer4_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer4_out_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln185_reg_1743, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln185_reg_1743 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer4_out_read <= ap_const_logic_1;
        else 
            layer4_out_read <= ap_const_logic_0;
        end if; 
    end process;


    layer5_out_blk_n_assign_proc : process(layer5_out_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, and_ln145_reg_1852)
    begin
        if (((ap_const_lv1_1 = and_ln145_reg_1852) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            layer5_out_blk_n <= layer5_out_full_n;
        else 
            layer5_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    layer5_out_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln161_s_fu_1421_p18),256));

    layer5_out_write_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln145_reg_1852, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_1 = and_ln145_reg_1852) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            layer5_out_write <= ap_const_logic_1;
        else 
            layer5_out_write <= ap_const_logic_0;
        end if; 
    end process;

    or_ln161_s_fu_1421_p18 <= ((((((((((((((((select_ln65_53_fu_1413_p3 & ap_const_lv1_0) & zext_ln837_38_fu_1382_p1) & zext_ln837_37_fu_1335_p1) & zext_ln837_36_fu_1288_p1) & zext_ln837_35_fu_1241_p1) & zext_ln837_34_fu_1194_p1) & zext_ln837_33_fu_1147_p1) & zext_ln837_32_fu_1100_p1) & zext_ln837_31_fu_1053_p1) & zext_ln837_30_fu_1006_p1) & zext_ln837_29_fu_959_p1) & zext_ln837_fu_912_p1) & zext_ln137_9_fu_865_p1) & zext_ln137_8_fu_818_p1) & zext_ln137_7_fu_771_p1) & zext_ln137_fu_724_p1);
    pool_window_V_100_fu_1198_p3 <= (p_0_11_0_0_0184_fu_196 & ap_const_lv3_0);
    pool_window_V_101_fu_1206_p3 <= (trunc_ln187_48_reg_1834 & ap_const_lv3_0);
    pool_window_V_102_fu_1245_p3 <= (p_0_12_0_0_0187_fu_200 & ap_const_lv3_0);
    pool_window_V_103_fu_1253_p3 <= (trunc_ln187_49_reg_1840 & ap_const_lv3_0);
    pool_window_V_104_fu_1292_p3 <= (p_0_13_0_0_0190_fu_204 & ap_const_lv3_0);
    pool_window_V_105_fu_1300_p3 <= (trunc_ln187_50_reg_1846 & ap_const_lv3_0);
    pool_window_V_106_fu_1339_p3 <= (p_0_14_0_0_0193_fu_208 & ap_const_lv3_0);
    pool_window_V_107_fu_1347_p3 <= (trunc_ln187_s_reg_1762 & ap_const_lv3_0);
    pool_window_V_108_fu_1386_p3 <= (p_0_15_0_0_0196_fu_212 & ap_const_lv3_0);
    pool_window_V_109_fu_1394_p3 <= (trunc_ln187_37_reg_1768 & ap_const_lv3_0);
    pool_window_V_79_fu_689_p3 <= (trunc_ln187_reg_1756 & ap_const_lv3_0);
    pool_window_V_80_fu_728_p3 <= (p_0_1_0_0_0154_fu_156 & ap_const_lv3_0);
    pool_window_V_81_fu_736_p3 <= (trunc_ln187_38_reg_1774 & ap_const_lv3_0);
    pool_window_V_82_fu_775_p3 <= (p_0_2_0_0_0157_fu_160 & ap_const_lv3_0);
    pool_window_V_83_fu_783_p3 <= (trunc_ln187_39_reg_1780 & ap_const_lv3_0);
    pool_window_V_84_fu_822_p3 <= (p_0_3_0_0_0160_fu_164 & ap_const_lv3_0);
    pool_window_V_85_fu_830_p3 <= (trunc_ln187_40_reg_1786 & ap_const_lv3_0);
    pool_window_V_86_fu_869_p3 <= (p_0_4_0_0_0163_fu_168 & ap_const_lv3_0);
    pool_window_V_87_fu_877_p3 <= (trunc_ln187_41_reg_1792 & ap_const_lv3_0);
    pool_window_V_88_fu_916_p3 <= (p_0_5_0_0_0166_fu_172 & ap_const_lv3_0);
    pool_window_V_89_fu_924_p3 <= (trunc_ln187_42_reg_1798 & ap_const_lv3_0);
    pool_window_V_90_fu_963_p3 <= (p_0_6_0_0_0169_fu_176 & ap_const_lv3_0);
    pool_window_V_91_fu_971_p3 <= (trunc_ln187_43_reg_1804 & ap_const_lv3_0);
    pool_window_V_92_fu_1010_p3 <= (p_0_7_0_0_0172_fu_180 & ap_const_lv3_0);
    pool_window_V_93_fu_1018_p3 <= (trunc_ln187_44_reg_1810 & ap_const_lv3_0);
    pool_window_V_94_fu_1057_p3 <= (p_0_8_0_0_0175_fu_184 & ap_const_lv3_0);
    pool_window_V_95_fu_1065_p3 <= (trunc_ln187_45_reg_1816 & ap_const_lv3_0);
    pool_window_V_96_fu_1104_p3 <= (p_0_9_0_0_0178_fu_188 & ap_const_lv3_0);
    pool_window_V_97_fu_1112_p3 <= (trunc_ln187_46_reg_1822 & ap_const_lv3_0);
    pool_window_V_98_fu_1151_p3 <= (p_0_10_0_0_0181_fu_192 & ap_const_lv3_0);
    pool_window_V_99_fu_1159_p3 <= (trunc_ln187_47_reg_1828 & ap_const_lv3_0);
    pool_window_V_fu_681_p3 <= (p_0_0_0_0_0151_fu_152 & ap_const_lv3_0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    res_pack_data_7_fu_763_p3 <= (select_ln65_39_fu_755_p3 & ap_const_lv1_0);
    res_pack_data_8_fu_810_p3 <= (select_ln65_40_fu_802_p3 & ap_const_lv1_0);
    res_pack_data_9_fu_857_p3 <= (select_ln65_41_fu_849_p3 & ap_const_lv1_0);
    res_pack_data_fu_716_p3 <= (select_ln65_fu_708_p3 & ap_const_lv1_0);
    select_ln172_fu_660_p3 <= 
        ap_const_lv32_FFFFFFFF when (icmp_ln145_fu_649_p2(0) = '1') else 
        ap_const_lv32_1;
    select_ln65_39_fu_755_p3 <= 
        pool_window_V_80_fu_728_p3 when (xor_ln1651_39_fu_749_p2(0) = '1') else 
        pool_window_V_81_fu_736_p3;
    select_ln65_40_fu_802_p3 <= 
        pool_window_V_82_fu_775_p3 when (xor_ln1651_40_fu_796_p2(0) = '1') else 
        pool_window_V_83_fu_783_p3;
    select_ln65_41_fu_849_p3 <= 
        pool_window_V_84_fu_822_p3 when (xor_ln1651_41_fu_843_p2(0) = '1') else 
        pool_window_V_85_fu_830_p3;
    select_ln65_42_fu_896_p3 <= 
        pool_window_V_86_fu_869_p3 when (xor_ln1651_42_fu_890_p2(0) = '1') else 
        pool_window_V_87_fu_877_p3;
    select_ln65_43_fu_943_p3 <= 
        pool_window_V_88_fu_916_p3 when (xor_ln1651_43_fu_937_p2(0) = '1') else 
        pool_window_V_89_fu_924_p3;
    select_ln65_44_fu_990_p3 <= 
        pool_window_V_90_fu_963_p3 when (xor_ln1651_44_fu_984_p2(0) = '1') else 
        pool_window_V_91_fu_971_p3;
    select_ln65_45_fu_1037_p3 <= 
        pool_window_V_92_fu_1010_p3 when (xor_ln1651_45_fu_1031_p2(0) = '1') else 
        pool_window_V_93_fu_1018_p3;
    select_ln65_46_fu_1084_p3 <= 
        pool_window_V_94_fu_1057_p3 when (xor_ln1651_46_fu_1078_p2(0) = '1') else 
        pool_window_V_95_fu_1065_p3;
    select_ln65_47_fu_1131_p3 <= 
        pool_window_V_96_fu_1104_p3 when (xor_ln1651_47_fu_1125_p2(0) = '1') else 
        pool_window_V_97_fu_1112_p3;
    select_ln65_48_fu_1178_p3 <= 
        pool_window_V_98_fu_1151_p3 when (xor_ln1651_48_fu_1172_p2(0) = '1') else 
        pool_window_V_99_fu_1159_p3;
    select_ln65_49_fu_1225_p3 <= 
        pool_window_V_100_fu_1198_p3 when (xor_ln1651_49_fu_1219_p2(0) = '1') else 
        pool_window_V_101_fu_1206_p3;
    select_ln65_50_fu_1272_p3 <= 
        pool_window_V_102_fu_1245_p3 when (xor_ln1651_50_fu_1266_p2(0) = '1') else 
        pool_window_V_103_fu_1253_p3;
    select_ln65_51_fu_1319_p3 <= 
        pool_window_V_104_fu_1292_p3 when (xor_ln1651_51_fu_1313_p2(0) = '1') else 
        pool_window_V_105_fu_1300_p3;
    select_ln65_52_fu_1366_p3 <= 
        pool_window_V_106_fu_1339_p3 when (xor_ln1651_52_fu_1360_p2(0) = '1') else 
        pool_window_V_107_fu_1347_p3;
    select_ln65_53_fu_1413_p3 <= 
        pool_window_V_108_fu_1386_p3 when (xor_ln1651_53_fu_1407_p2(0) = '1') else 
        pool_window_V_109_fu_1394_p3;
    select_ln65_fu_708_p3 <= 
        pool_window_V_fu_681_p3 when (xor_ln1651_fu_702_p2(0) = '1') else 
        pool_window_V_79_fu_689_p3;
    shl_ln841_27_fu_998_p3 <= (select_ln65_44_fu_990_p3 & ap_const_lv1_0);
    shl_ln841_28_fu_1045_p3 <= (select_ln65_45_fu_1037_p3 & ap_const_lv1_0);
    shl_ln841_29_fu_1092_p3 <= (select_ln65_46_fu_1084_p3 & ap_const_lv1_0);
    shl_ln841_30_fu_1139_p3 <= (select_ln65_47_fu_1131_p3 & ap_const_lv1_0);
    shl_ln841_31_fu_1186_p3 <= (select_ln65_48_fu_1178_p3 & ap_const_lv1_0);
    shl_ln841_32_fu_1233_p3 <= (select_ln65_49_fu_1225_p3 & ap_const_lv1_0);
    shl_ln841_33_fu_1280_p3 <= (select_ln65_50_fu_1272_p3 & ap_const_lv1_0);
    shl_ln841_34_fu_1327_p3 <= (select_ln65_51_fu_1319_p3 & ap_const_lv1_0);
    shl_ln841_35_fu_1374_p3 <= (select_ln65_52_fu_1366_p3 & ap_const_lv1_0);
    shl_ln841_s_fu_951_p3 <= (select_ln65_43_fu_943_p3 & ap_const_lv1_0);
    shl_ln_fu_904_p3 <= (select_ln65_42_fu_896_p3 & ap_const_lv1_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln187_fu_491_p1 <= layer4_out_dout(6 - 1 downto 0);
    xor_ln1651_39_fu_749_p2 <= (icmp_ln1651_39_fu_743_p2 xor ap_const_lv1_1);
    xor_ln1651_40_fu_796_p2 <= (icmp_ln1651_40_fu_790_p2 xor ap_const_lv1_1);
    xor_ln1651_41_fu_843_p2 <= (icmp_ln1651_41_fu_837_p2 xor ap_const_lv1_1);
    xor_ln1651_42_fu_890_p2 <= (icmp_ln1651_42_fu_884_p2 xor ap_const_lv1_1);
    xor_ln1651_43_fu_937_p2 <= (icmp_ln1651_43_fu_931_p2 xor ap_const_lv1_1);
    xor_ln1651_44_fu_984_p2 <= (icmp_ln1651_44_fu_978_p2 xor ap_const_lv1_1);
    xor_ln1651_45_fu_1031_p2 <= (icmp_ln1651_45_fu_1025_p2 xor ap_const_lv1_1);
    xor_ln1651_46_fu_1078_p2 <= (icmp_ln1651_46_fu_1072_p2 xor ap_const_lv1_1);
    xor_ln1651_47_fu_1125_p2 <= (icmp_ln1651_47_fu_1119_p2 xor ap_const_lv1_1);
    xor_ln1651_48_fu_1172_p2 <= (icmp_ln1651_48_fu_1166_p2 xor ap_const_lv1_1);
    xor_ln1651_49_fu_1219_p2 <= (icmp_ln1651_49_fu_1213_p2 xor ap_const_lv1_1);
    xor_ln1651_50_fu_1266_p2 <= (icmp_ln1651_50_fu_1260_p2 xor ap_const_lv1_1);
    xor_ln1651_51_fu_1313_p2 <= (icmp_ln1651_51_fu_1307_p2 xor ap_const_lv1_1);
    xor_ln1651_52_fu_1360_p2 <= (icmp_ln1651_52_fu_1354_p2 xor ap_const_lv1_1);
    xor_ln1651_53_fu_1407_p2 <= (icmp_ln1651_53_fu_1401_p2 xor ap_const_lv1_1);
    xor_ln1651_fu_702_p2 <= (icmp_ln1651_fu_696_p2 xor ap_const_lv1_1);
    zext_ln137_7_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(res_pack_data_7_fu_763_p3),16));
    zext_ln137_8_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(res_pack_data_8_fu_810_p3),16));
    zext_ln137_9_fu_865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(res_pack_data_9_fu_857_p3),16));
    zext_ln137_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(res_pack_data_fu_716_p3),16));
    zext_ln837_29_fu_959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_s_fu_951_p3),16));
    zext_ln837_30_fu_1006_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_27_fu_998_p3),16));
    zext_ln837_31_fu_1053_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_28_fu_1045_p3),16));
    zext_ln837_32_fu_1100_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_29_fu_1092_p3),16));
    zext_ln837_33_fu_1147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_30_fu_1139_p3),16));
    zext_ln837_34_fu_1194_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_31_fu_1186_p3),16));
    zext_ln837_35_fu_1241_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_32_fu_1233_p3),16));
    zext_ln837_36_fu_1288_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_33_fu_1280_p3),16));
    zext_ln837_37_fu_1335_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_34_fu_1327_p3),16));
    zext_ln837_38_fu_1382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln841_35_fu_1374_p3),16));
    zext_ln837_fu_912_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_904_p3),16));
end behav;
