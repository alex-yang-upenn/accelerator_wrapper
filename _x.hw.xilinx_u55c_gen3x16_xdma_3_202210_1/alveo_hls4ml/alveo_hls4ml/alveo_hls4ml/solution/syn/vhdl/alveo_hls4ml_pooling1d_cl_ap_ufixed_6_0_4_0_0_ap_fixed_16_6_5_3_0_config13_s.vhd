-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity alveo_hls4ml_pooling1d_cl_ap_ufixed_6_0_4_0_0_ap_fixed_16_6_5_3_0_config13_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read9 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read10 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read11 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read12 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read13 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read14 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read15 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read16 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read17 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read18 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read19 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read20 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read21 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read22 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_read23 : IN STD_LOGIC_VECTOR (5 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (9 downto 0) );
end;


architecture behav of alveo_hls4ml_pooling1d_cl_ap_ufixed_6_0_4_0_0_ap_fixed_16_6_5_3_0_config13_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal icmp_ln1649_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_fu_214_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1649_188_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_47_fu_236_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1649_189_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_48_fu_258_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1649_190_fu_274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_49_fu_280_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1649_191_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_50_fu_302_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1649_192_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_51_fu_324_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1649_193_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_52_fu_346_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1649_194_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_53_fu_368_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1649_195_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_54_fu_390_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1649_196_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_55_fu_412_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1649_197_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_56_fu_434_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1649_198_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_57_fu_456_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln_fu_222_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln838_s_fu_244_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln838_45_fu_266_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln838_46_fu_288_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln838_47_fu_310_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln838_48_fu_332_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln838_49_fu_354_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln838_50_fu_376_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln838_51_fu_398_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln838_52_fu_420_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln838_53_fu_442_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln838_54_fu_464_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal ap_return_4_preg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal ap_return_5_preg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal ap_return_6_preg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal ap_return_7_preg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal ap_return_8_preg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal ap_return_9_preg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal ap_return_10_preg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal ap_return_11_preg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg(4) <= '0';
                ap_return_0_preg(5) <= '0';
                ap_return_0_preg(6) <= '0';
                ap_return_0_preg(7) <= '0';
                ap_return_0_preg(8) <= '0';
                ap_return_0_preg(9) <= '0';
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                                        ap_return_0_preg(9 downto 4) <= shl_ln_fu_222_p3(9 downto 4);
                end if; 
            end if;
        end if;
    end process;


    ap_return_10_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_10_preg(4) <= '0';
                ap_return_10_preg(5) <= '0';
                ap_return_10_preg(6) <= '0';
                ap_return_10_preg(7) <= '0';
                ap_return_10_preg(8) <= '0';
                ap_return_10_preg(9) <= '0';
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                                        ap_return_10_preg(9 downto 4) <= shl_ln838_53_fu_442_p3(9 downto 4);
                end if; 
            end if;
        end if;
    end process;


    ap_return_11_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_11_preg(4) <= '0';
                ap_return_11_preg(5) <= '0';
                ap_return_11_preg(6) <= '0';
                ap_return_11_preg(7) <= '0';
                ap_return_11_preg(8) <= '0';
                ap_return_11_preg(9) <= '0';
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                                        ap_return_11_preg(9 downto 4) <= shl_ln838_54_fu_464_p3(9 downto 4);
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg(4) <= '0';
                ap_return_1_preg(5) <= '0';
                ap_return_1_preg(6) <= '0';
                ap_return_1_preg(7) <= '0';
                ap_return_1_preg(8) <= '0';
                ap_return_1_preg(9) <= '0';
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                                        ap_return_1_preg(9 downto 4) <= shl_ln838_s_fu_244_p3(9 downto 4);
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg(4) <= '0';
                ap_return_2_preg(5) <= '0';
                ap_return_2_preg(6) <= '0';
                ap_return_2_preg(7) <= '0';
                ap_return_2_preg(8) <= '0';
                ap_return_2_preg(9) <= '0';
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                                        ap_return_2_preg(9 downto 4) <= shl_ln838_45_fu_266_p3(9 downto 4);
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg(4) <= '0';
                ap_return_3_preg(5) <= '0';
                ap_return_3_preg(6) <= '0';
                ap_return_3_preg(7) <= '0';
                ap_return_3_preg(8) <= '0';
                ap_return_3_preg(9) <= '0';
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                                        ap_return_3_preg(9 downto 4) <= shl_ln838_46_fu_288_p3(9 downto 4);
                end if; 
            end if;
        end if;
    end process;


    ap_return_4_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_4_preg(4) <= '0';
                ap_return_4_preg(5) <= '0';
                ap_return_4_preg(6) <= '0';
                ap_return_4_preg(7) <= '0';
                ap_return_4_preg(8) <= '0';
                ap_return_4_preg(9) <= '0';
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                                        ap_return_4_preg(9 downto 4) <= shl_ln838_47_fu_310_p3(9 downto 4);
                end if; 
            end if;
        end if;
    end process;


    ap_return_5_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_5_preg(4) <= '0';
                ap_return_5_preg(5) <= '0';
                ap_return_5_preg(6) <= '0';
                ap_return_5_preg(7) <= '0';
                ap_return_5_preg(8) <= '0';
                ap_return_5_preg(9) <= '0';
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                                        ap_return_5_preg(9 downto 4) <= shl_ln838_48_fu_332_p3(9 downto 4);
                end if; 
            end if;
        end if;
    end process;


    ap_return_6_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_6_preg(4) <= '0';
                ap_return_6_preg(5) <= '0';
                ap_return_6_preg(6) <= '0';
                ap_return_6_preg(7) <= '0';
                ap_return_6_preg(8) <= '0';
                ap_return_6_preg(9) <= '0';
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                                        ap_return_6_preg(9 downto 4) <= shl_ln838_49_fu_354_p3(9 downto 4);
                end if; 
            end if;
        end if;
    end process;


    ap_return_7_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_7_preg(4) <= '0';
                ap_return_7_preg(5) <= '0';
                ap_return_7_preg(6) <= '0';
                ap_return_7_preg(7) <= '0';
                ap_return_7_preg(8) <= '0';
                ap_return_7_preg(9) <= '0';
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                                        ap_return_7_preg(9 downto 4) <= shl_ln838_50_fu_376_p3(9 downto 4);
                end if; 
            end if;
        end if;
    end process;


    ap_return_8_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_8_preg(4) <= '0';
                ap_return_8_preg(5) <= '0';
                ap_return_8_preg(6) <= '0';
                ap_return_8_preg(7) <= '0';
                ap_return_8_preg(8) <= '0';
                ap_return_8_preg(9) <= '0';
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                                        ap_return_8_preg(9 downto 4) <= shl_ln838_51_fu_398_p3(9 downto 4);
                end if; 
            end if;
        end if;
    end process;


    ap_return_9_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_9_preg(4) <= '0';
                ap_return_9_preg(5) <= '0';
                ap_return_9_preg(6) <= '0';
                ap_return_9_preg(7) <= '0';
                ap_return_9_preg(8) <= '0';
                ap_return_9_preg(9) <= '0';
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                                        ap_return_9_preg(9 downto 4) <= shl_ln838_52_fu_420_p3(9 downto 4);
                end if; 
            end if;
        end if;
    end process;

    ap_return_0_preg(3 downto 0) <= "0000";
    ap_return_1_preg(3 downto 0) <= "0000";
    ap_return_2_preg(3 downto 0) <= "0000";
    ap_return_3_preg(3 downto 0) <= "0000";
    ap_return_4_preg(3 downto 0) <= "0000";
    ap_return_5_preg(3 downto 0) <= "0000";
    ap_return_6_preg(3 downto 0) <= "0000";
    ap_return_7_preg(3 downto 0) <= "0000";
    ap_return_8_preg(3 downto 0) <= "0000";
    ap_return_9_preg(3 downto 0) <= "0000";
    ap_return_10_preg(3 downto 0) <= "0000";
    ap_return_11_preg(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, shl_ln_fu_222_p3, ap_return_0_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_0 <= shl_ln_fu_222_p3;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, shl_ln838_s_fu_244_p3, ap_return_1_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_1 <= shl_ln838_s_fu_244_p3;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_10_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, shl_ln838_53_fu_442_p3, ap_return_10_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_10 <= shl_ln838_53_fu_442_p3;
        else 
            ap_return_10 <= ap_return_10_preg;
        end if; 
    end process;


    ap_return_11_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, shl_ln838_54_fu_464_p3, ap_return_11_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_11 <= shl_ln838_54_fu_464_p3;
        else 
            ap_return_11 <= ap_return_11_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, shl_ln838_45_fu_266_p3, ap_return_2_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_2 <= shl_ln838_45_fu_266_p3;
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, shl_ln838_46_fu_288_p3, ap_return_3_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_3 <= shl_ln838_46_fu_288_p3;
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;


    ap_return_4_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, shl_ln838_47_fu_310_p3, ap_return_4_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_4 <= shl_ln838_47_fu_310_p3;
        else 
            ap_return_4 <= ap_return_4_preg;
        end if; 
    end process;


    ap_return_5_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, shl_ln838_48_fu_332_p3, ap_return_5_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_5 <= shl_ln838_48_fu_332_p3;
        else 
            ap_return_5 <= ap_return_5_preg;
        end if; 
    end process;


    ap_return_6_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, shl_ln838_49_fu_354_p3, ap_return_6_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_6 <= shl_ln838_49_fu_354_p3;
        else 
            ap_return_6 <= ap_return_6_preg;
        end if; 
    end process;


    ap_return_7_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, shl_ln838_50_fu_376_p3, ap_return_7_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_7 <= shl_ln838_50_fu_376_p3;
        else 
            ap_return_7 <= ap_return_7_preg;
        end if; 
    end process;


    ap_return_8_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, shl_ln838_51_fu_398_p3, ap_return_8_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_8 <= shl_ln838_51_fu_398_p3;
        else 
            ap_return_8 <= ap_return_8_preg;
        end if; 
    end process;


    ap_return_9_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, shl_ln838_52_fu_420_p3, ap_return_9_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_9 <= shl_ln838_52_fu_420_p3;
        else 
            ap_return_9 <= ap_return_9_preg;
        end if; 
    end process;

    icmp_ln1649_188_fu_230_p2 <= "1" when (unsigned(p_read13) > unsigned(p_read1)) else "0";
    icmp_ln1649_189_fu_252_p2 <= "1" when (unsigned(p_read14) > unsigned(p_read2)) else "0";
    icmp_ln1649_190_fu_274_p2 <= "1" when (unsigned(p_read15) > unsigned(p_read3)) else "0";
    icmp_ln1649_191_fu_296_p2 <= "1" when (unsigned(p_read16) > unsigned(p_read4)) else "0";
    icmp_ln1649_192_fu_318_p2 <= "1" when (unsigned(p_read17) > unsigned(p_read5)) else "0";
    icmp_ln1649_193_fu_340_p2 <= "1" when (unsigned(p_read18) > unsigned(p_read6)) else "0";
    icmp_ln1649_194_fu_362_p2 <= "1" when (unsigned(p_read19) > unsigned(p_read7)) else "0";
    icmp_ln1649_195_fu_384_p2 <= "1" when (unsigned(p_read20) > unsigned(p_read8)) else "0";
    icmp_ln1649_196_fu_406_p2 <= "1" when (unsigned(p_read21) > unsigned(p_read9)) else "0";
    icmp_ln1649_197_fu_428_p2 <= "1" when (unsigned(p_read22) > unsigned(p_read10)) else "0";
    icmp_ln1649_198_fu_450_p2 <= "1" when (unsigned(p_read23) > unsigned(p_read11)) else "0";
    icmp_ln1649_fu_208_p2 <= "1" when (unsigned(p_read12) > unsigned(p_read)) else "0";
    select_ln14_47_fu_236_p3 <= 
        p_read13 when (icmp_ln1649_188_fu_230_p2(0) = '1') else 
        p_read1;
    select_ln14_48_fu_258_p3 <= 
        p_read14 when (icmp_ln1649_189_fu_252_p2(0) = '1') else 
        p_read2;
    select_ln14_49_fu_280_p3 <= 
        p_read15 when (icmp_ln1649_190_fu_274_p2(0) = '1') else 
        p_read3;
    select_ln14_50_fu_302_p3 <= 
        p_read16 when (icmp_ln1649_191_fu_296_p2(0) = '1') else 
        p_read4;
    select_ln14_51_fu_324_p3 <= 
        p_read17 when (icmp_ln1649_192_fu_318_p2(0) = '1') else 
        p_read5;
    select_ln14_52_fu_346_p3 <= 
        p_read18 when (icmp_ln1649_193_fu_340_p2(0) = '1') else 
        p_read6;
    select_ln14_53_fu_368_p3 <= 
        p_read19 when (icmp_ln1649_194_fu_362_p2(0) = '1') else 
        p_read7;
    select_ln14_54_fu_390_p3 <= 
        p_read20 when (icmp_ln1649_195_fu_384_p2(0) = '1') else 
        p_read8;
    select_ln14_55_fu_412_p3 <= 
        p_read21 when (icmp_ln1649_196_fu_406_p2(0) = '1') else 
        p_read9;
    select_ln14_56_fu_434_p3 <= 
        p_read22 when (icmp_ln1649_197_fu_428_p2(0) = '1') else 
        p_read10;
    select_ln14_57_fu_456_p3 <= 
        p_read23 when (icmp_ln1649_198_fu_450_p2(0) = '1') else 
        p_read11;
    select_ln14_fu_214_p3 <= 
        p_read12 when (icmp_ln1649_fu_208_p2(0) = '1') else 
        p_read;
    shl_ln838_45_fu_266_p3 <= (select_ln14_48_fu_258_p3 & ap_const_lv4_0);
    shl_ln838_46_fu_288_p3 <= (select_ln14_49_fu_280_p3 & ap_const_lv4_0);
    shl_ln838_47_fu_310_p3 <= (select_ln14_50_fu_302_p3 & ap_const_lv4_0);
    shl_ln838_48_fu_332_p3 <= (select_ln14_51_fu_324_p3 & ap_const_lv4_0);
    shl_ln838_49_fu_354_p3 <= (select_ln14_52_fu_346_p3 & ap_const_lv4_0);
    shl_ln838_50_fu_376_p3 <= (select_ln14_53_fu_368_p3 & ap_const_lv4_0);
    shl_ln838_51_fu_398_p3 <= (select_ln14_54_fu_390_p3 & ap_const_lv4_0);
    shl_ln838_52_fu_420_p3 <= (select_ln14_55_fu_412_p3 & ap_const_lv4_0);
    shl_ln838_53_fu_442_p3 <= (select_ln14_56_fu_434_p3 & ap_const_lv4_0);
    shl_ln838_54_fu_464_p3 <= (select_ln14_57_fu_456_p3 & ap_const_lv4_0);
    shl_ln838_s_fu_244_p3 <= (select_ln14_47_fu_236_p3 & ap_const_lv4_0);
    shl_ln_fu_222_p3 <= (select_ln14_fu_214_p3 & ap_const_lv4_0);
end behav;
