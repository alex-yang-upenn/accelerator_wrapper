-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity alveo_hls4ml_relu_ap_fixed_16_6_5_3_0_ap_ufixed_6_0_4_0_0_relu_config4_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (5 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (5 downto 0) );
end;


architecture behav of alveo_hls4ml_relu_ap_fixed_16_6_5_3_0_ap_ufixed_6_0_4_0_0_relu_config4_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal p_read_1_reg_602 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_read_2_reg_608 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_3_reg_614 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read_4_reg_620 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_fu_122_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_1_reg_626 : STD_LOGIC_VECTOR (5 downto 0);
    signal Range1_all_ones_fu_138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_reg_632 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_reg_637 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_3_fu_202_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_3_reg_643 : STD_LOGIC_VECTOR (5 downto 0);
    signal Range1_all_ones_1_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_reg_649 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_fu_224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_reg_654 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_5_fu_282_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_5_reg_660 : STD_LOGIC_VECTOR (5 downto 0);
    signal Range1_all_ones_2_fu_298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_reg_671 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_7_fu_362_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_7_reg_677 : STD_LOGIC_VECTOR (5 downto 0);
    signal Range1_all_ones_3_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_3_reg_683 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_3_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_3_reg_688 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal trunc_ln828_fu_96_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_s_fu_80_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_fu_100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln374_fu_106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_10_fu_88_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln374_fu_112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_70_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln377_fu_118_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_128_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln828_1_fu_176_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_3_fu_160_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_1_fu_180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln374_1_fu_186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_12_fu_168_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln374_1_fu_192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_fu_150_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln377_1_fu_198_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_208_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln828_2_fu_256_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_6_fu_240_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_2_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln374_2_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_14_fu_248_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln374_2_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_4_fu_230_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln377_2_fu_278_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_288_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln828_3_fu_336_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_9_fu_320_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_3_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln374_3_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_16_fu_328_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln374_3_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_6_fu_310_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln377_3_fu_358_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_3_fu_368_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_402_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_fu_395_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln888_fu_409_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_415_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1649_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln302_fu_422_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_fu_449_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_13_fu_442_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln888_1_fu_456_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_1_fu_462_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1649_1_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln302_1_fu_469_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_10_fu_496_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_15_fu_489_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln888_2_fu_503_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_2_fu_509_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1649_2_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln302_2_fu_516_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_14_fu_543_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_17_fu_536_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln888_3_fu_550_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_3_fu_556_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1649_3_fu_531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln302_3_fu_563_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln1649_fu_429_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln1649_1_fu_476_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln1649_2_fu_523_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln1649_3_fu_570_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv6_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_return_0_preg <= select_ln1649_fu_429_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv6_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_return_1_preg <= select_ln1649_1_fu_476_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv6_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_return_2_preg <= select_ln1649_2_fu_523_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg <= ap_const_lv6_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_return_3_preg <= select_ln1649_3_fu_570_p3;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                Range1_all_ones_1_reg_649 <= Range1_all_ones_1_fu_218_p2;
                Range1_all_ones_2_reg_666 <= Range1_all_ones_2_fu_298_p2;
                Range1_all_ones_3_reg_683 <= Range1_all_ones_3_fu_378_p2;
                Range1_all_ones_reg_632 <= Range1_all_ones_fu_138_p2;
                Range1_all_zeros_1_reg_654 <= Range1_all_zeros_1_fu_224_p2;
                Range1_all_zeros_2_reg_671 <= Range1_all_zeros_2_fu_304_p2;
                Range1_all_zeros_3_reg_688 <= Range1_all_zeros_3_fu_384_p2;
                Range1_all_zeros_reg_637 <= Range1_all_zeros_fu_144_p2;
                p_Val2_1_reg_626 <= p_Val2_1_fu_122_p2;
                p_Val2_3_reg_643 <= p_Val2_3_fu_202_p2;
                p_Val2_5_reg_660 <= p_Val2_5_fu_282_p2;
                p_Val2_7_reg_677 <= p_Val2_7_fu_362_p2;
                p_read_1_reg_602 <= p_read3;
                p_read_2_reg_608 <= p_read2;
                p_read_3_reg_614 <= p_read1;
                p_read_4_reg_620 <= p_read;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Range1_all_ones_1_fu_218_p2 <= "1" when (tmp_1_fu_208_p4 = ap_const_lv6_3F) else "0";
    Range1_all_ones_2_fu_298_p2 <= "1" when (tmp_2_fu_288_p4 = ap_const_lv6_3F) else "0";
    Range1_all_ones_3_fu_378_p2 <= "1" when (tmp_3_fu_368_p4 = ap_const_lv6_3F) else "0";
    Range1_all_ones_fu_138_p2 <= "1" when (tmp_s_fu_128_p4 = ap_const_lv6_3F) else "0";
    Range1_all_zeros_1_fu_224_p2 <= "1" when (tmp_1_fu_208_p4 = ap_const_lv6_0) else "0";
    Range1_all_zeros_2_fu_304_p2 <= "1" when (tmp_2_fu_288_p4 = ap_const_lv6_0) else "0";
    Range1_all_zeros_3_fu_384_p2 <= "1" when (tmp_3_fu_368_p4 = ap_const_lv6_0) else "0";
    Range1_all_zeros_fu_144_p2 <= "1" when (tmp_s_fu_128_p4 = ap_const_lv6_0) else "0";
    and_ln374_1_fu_192_p2 <= (p_Result_12_fu_168_p3 and or_ln374_1_fu_186_p2);
    and_ln374_2_fu_272_p2 <= (p_Result_14_fu_248_p3 and or_ln374_2_fu_266_p2);
    and_ln374_3_fu_352_p2 <= (p_Result_16_fu_328_p3 and or_ln374_3_fu_346_p2);
    and_ln374_fu_112_p2 <= (p_Result_10_fu_88_p3 and or_ln374_fu_106_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_done_reg = ap_const_logic_1) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or (ap_const_logic_0 = ap_ce) or ((ap_done_reg = ap_const_logic_1) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_done_reg = ap_const_logic_1);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_done_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001, select_ln1649_fu_429_p3, ap_return_0_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_return_0 <= select_ln1649_fu_429_p3;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001, select_ln1649_1_fu_476_p3, ap_return_1_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_return_1 <= select_ln1649_1_fu_476_p3;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001, select_ln1649_2_fu_523_p3, ap_return_2_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_return_2 <= select_ln1649_2_fu_523_p3;
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001, select_ln1649_3_fu_570_p3, ap_return_3_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_return_3 <= select_ln1649_3_fu_570_p3;
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;

    deleted_zeros_1_fu_462_p3 <= 
        select_ln888_1_fu_456_p3 when (p_Result_13_fu_442_p3(0) = '1') else 
        Range1_all_zeros_1_reg_654;
    deleted_zeros_2_fu_509_p3 <= 
        select_ln888_2_fu_503_p3 when (p_Result_15_fu_489_p3(0) = '1') else 
        Range1_all_zeros_2_reg_671;
    deleted_zeros_3_fu_556_p3 <= 
        select_ln888_3_fu_550_p3 when (p_Result_17_fu_536_p3(0) = '1') else 
        Range1_all_zeros_3_reg_688;
    deleted_zeros_fu_415_p3 <= 
        select_ln888_fu_409_p3 when (p_Result_11_fu_395_p3(0) = '1') else 
        Range1_all_zeros_reg_637;
    icmp_ln1649_1_fu_437_p2 <= "1" when (signed(p_read_3_reg_614) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1649_2_fu_484_p2 <= "1" when (signed(p_read_2_reg_608) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1649_3_fu_531_p2 <= "1" when (signed(p_read_1_reg_602) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1649_fu_390_p2 <= "1" when (signed(p_read_4_reg_620) > signed(ap_const_lv16_0)) else "0";
    or_ln374_1_fu_186_p2 <= (r_1_fu_180_p2 or p_Result_3_fu_160_p3);
    or_ln374_2_fu_266_p2 <= (r_2_fu_260_p2 or p_Result_6_fu_240_p3);
    or_ln374_3_fu_346_p2 <= (r_3_fu_340_p2 or p_Result_9_fu_320_p3);
    or_ln374_fu_106_p2 <= (r_fu_100_p2 or p_Result_s_fu_80_p3);
    p_Result_10_fu_88_p3 <= p_read(3 downto 3);
    p_Result_11_fu_395_p3 <= p_read_4_reg_620(9 downto 9);
    p_Result_12_fu_168_p3 <= p_read1(3 downto 3);
    p_Result_13_fu_442_p3 <= p_read_3_reg_614(9 downto 9);
    p_Result_14_fu_248_p3 <= p_read2(3 downto 3);
    p_Result_15_fu_489_p3 <= p_read_2_reg_608(9 downto 9);
    p_Result_16_fu_328_p3 <= p_read3(3 downto 3);
    p_Result_17_fu_536_p3 <= p_read_1_reg_602(9 downto 9);
    p_Result_3_fu_160_p3 <= p_read1(4 downto 4);
    p_Result_6_fu_240_p3 <= p_read2(4 downto 4);
    p_Result_9_fu_320_p3 <= p_read3(4 downto 4);
    p_Result_s_fu_80_p3 <= p_read(4 downto 4);
    p_Val2_1_fu_122_p2 <= std_logic_vector(unsigned(p_Val2_s_fu_70_p4) + unsigned(zext_ln377_fu_118_p1));
    p_Val2_2_fu_150_p4 <= p_read1(9 downto 4);
    p_Val2_3_fu_202_p2 <= std_logic_vector(unsigned(p_Val2_2_fu_150_p4) + unsigned(zext_ln377_1_fu_198_p1));
    p_Val2_4_fu_230_p4 <= p_read2(9 downto 4);
    p_Val2_5_fu_282_p2 <= std_logic_vector(unsigned(p_Val2_4_fu_230_p4) + unsigned(zext_ln377_2_fu_278_p1));
    p_Val2_6_fu_310_p4 <= p_read3(9 downto 4);
    p_Val2_7_fu_362_p2 <= std_logic_vector(unsigned(p_Val2_6_fu_310_p4) + unsigned(zext_ln377_3_fu_358_p1));
    p_Val2_s_fu_70_p4 <= p_read(9 downto 4);
    r_1_fu_180_p2 <= "0" when (trunc_ln828_1_fu_176_p1 = ap_const_lv3_0) else "1";
    r_2_fu_260_p2 <= "0" when (trunc_ln828_2_fu_256_p1 = ap_const_lv3_0) else "1";
    r_3_fu_340_p2 <= "0" when (trunc_ln828_3_fu_336_p1 = ap_const_lv3_0) else "1";
    r_fu_100_p2 <= "0" when (trunc_ln828_fu_96_p1 = ap_const_lv3_0) else "1";
    select_ln1649_1_fu_476_p3 <= 
        select_ln302_1_fu_469_p3 when (icmp_ln1649_1_fu_437_p2(0) = '1') else 
        ap_const_lv6_0;
    select_ln1649_2_fu_523_p3 <= 
        select_ln302_2_fu_516_p3 when (icmp_ln1649_2_fu_484_p2(0) = '1') else 
        ap_const_lv6_0;
    select_ln1649_3_fu_570_p3 <= 
        select_ln302_3_fu_563_p3 when (icmp_ln1649_3_fu_531_p2(0) = '1') else 
        ap_const_lv6_0;
    select_ln1649_fu_429_p3 <= 
        select_ln302_fu_422_p3 when (icmp_ln1649_fu_390_p2(0) = '1') else 
        ap_const_lv6_0;
    select_ln302_1_fu_469_p3 <= 
        p_Val2_3_reg_643 when (deleted_zeros_1_fu_462_p3(0) = '1') else 
        ap_const_lv6_3F;
    select_ln302_2_fu_516_p3 <= 
        p_Val2_5_reg_660 when (deleted_zeros_2_fu_509_p3(0) = '1') else 
        ap_const_lv6_3F;
    select_ln302_3_fu_563_p3 <= 
        p_Val2_7_reg_677 when (deleted_zeros_3_fu_556_p3(0) = '1') else 
        ap_const_lv6_3F;
    select_ln302_fu_422_p3 <= 
        p_Val2_1_reg_626 when (deleted_zeros_fu_415_p3(0) = '1') else 
        ap_const_lv6_3F;
    select_ln888_1_fu_456_p3 <= 
        Range1_all_zeros_1_reg_654 when (tmp_6_fu_449_p3(0) = '1') else 
        Range1_all_ones_1_reg_649;
    select_ln888_2_fu_503_p3 <= 
        Range1_all_zeros_2_reg_671 when (tmp_10_fu_496_p3(0) = '1') else 
        Range1_all_ones_2_reg_666;
    select_ln888_3_fu_550_p3 <= 
        Range1_all_zeros_3_reg_688 when (tmp_14_fu_543_p3(0) = '1') else 
        Range1_all_ones_3_reg_683;
    select_ln888_fu_409_p3 <= 
        Range1_all_zeros_reg_637 when (tmp_fu_402_p3(0) = '1') else 
        Range1_all_ones_reg_632;
    tmp_10_fu_496_p3 <= p_Val2_5_reg_660(5 downto 5);
    tmp_14_fu_543_p3 <= p_Val2_7_reg_677(5 downto 5);
    tmp_1_fu_208_p4 <= p_read1(15 downto 10);
    tmp_2_fu_288_p4 <= p_read2(15 downto 10);
    tmp_3_fu_368_p4 <= p_read3(15 downto 10);
    tmp_6_fu_449_p3 <= p_Val2_3_reg_643(5 downto 5);
    tmp_fu_402_p3 <= p_Val2_1_reg_626(5 downto 5);
    tmp_s_fu_128_p4 <= p_read(15 downto 10);
    trunc_ln828_1_fu_176_p1 <= p_read1(3 - 1 downto 0);
    trunc_ln828_2_fu_256_p1 <= p_read2(3 - 1 downto 0);
    trunc_ln828_3_fu_336_p1 <= p_read3(3 - 1 downto 0);
    trunc_ln828_fu_96_p1 <= p_read(3 - 1 downto 0);
    zext_ln377_1_fu_198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln374_1_fu_192_p2),6));
    zext_ln377_2_fu_278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln374_2_fu_272_p2),6));
    zext_ln377_3_fu_358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln374_3_fu_352_p2),6));
    zext_ln377_fu_118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln374_fu_112_p2),6));
end behav;
