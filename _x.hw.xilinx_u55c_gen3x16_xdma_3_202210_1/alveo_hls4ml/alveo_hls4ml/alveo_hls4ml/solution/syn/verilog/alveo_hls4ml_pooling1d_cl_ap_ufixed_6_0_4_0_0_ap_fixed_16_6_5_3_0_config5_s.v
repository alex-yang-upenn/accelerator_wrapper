// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module alveo_hls4ml_pooling1d_cl_ap_ufixed_6_0_4_0_0_ap_fixed_16_6_5_3_0_config5_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        p_read18,
        p_read19,
        p_read20,
        p_read21,
        p_read22,
        p_read23,
        p_read24,
        p_read25,
        p_read26,
        p_read27,
        p_read28,
        p_read29,
        p_read30,
        p_read31,
        p_read32,
        p_read33,
        p_read34,
        p_read35,
        p_read36,
        p_read37,
        p_read38,
        p_read39,
        p_read40,
        p_read41,
        p_read42,
        p_read43,
        p_read44,
        p_read45,
        p_read46,
        p_read47,
        p_read48,
        p_read49,
        p_read50,
        p_read51,
        p_read52,
        p_read53,
        p_read54,
        p_read55,
        p_read56,
        p_read57,
        p_read58,
        p_read59,
        p_read60,
        p_read61,
        p_read62,
        p_read63,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_return_31
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [5:0] p_read;
input  [5:0] p_read1;
input  [5:0] p_read2;
input  [5:0] p_read3;
input  [5:0] p_read4;
input  [5:0] p_read5;
input  [5:0] p_read6;
input  [5:0] p_read7;
input  [5:0] p_read8;
input  [5:0] p_read9;
input  [5:0] p_read10;
input  [5:0] p_read11;
input  [5:0] p_read12;
input  [5:0] p_read13;
input  [5:0] p_read14;
input  [5:0] p_read15;
input  [5:0] p_read16;
input  [5:0] p_read17;
input  [5:0] p_read18;
input  [5:0] p_read19;
input  [5:0] p_read20;
input  [5:0] p_read21;
input  [5:0] p_read22;
input  [5:0] p_read23;
input  [5:0] p_read24;
input  [5:0] p_read25;
input  [5:0] p_read26;
input  [5:0] p_read27;
input  [5:0] p_read28;
input  [5:0] p_read29;
input  [5:0] p_read30;
input  [5:0] p_read31;
input  [5:0] p_read32;
input  [5:0] p_read33;
input  [5:0] p_read34;
input  [5:0] p_read35;
input  [5:0] p_read36;
input  [5:0] p_read37;
input  [5:0] p_read38;
input  [5:0] p_read39;
input  [5:0] p_read40;
input  [5:0] p_read41;
input  [5:0] p_read42;
input  [5:0] p_read43;
input  [5:0] p_read44;
input  [5:0] p_read45;
input  [5:0] p_read46;
input  [5:0] p_read47;
input  [5:0] p_read48;
input  [5:0] p_read49;
input  [5:0] p_read50;
input  [5:0] p_read51;
input  [5:0] p_read52;
input  [5:0] p_read53;
input  [5:0] p_read54;
input  [5:0] p_read55;
input  [5:0] p_read56;
input  [5:0] p_read57;
input  [5:0] p_read58;
input  [5:0] p_read59;
input  [5:0] p_read60;
input  [5:0] p_read61;
input  [5:0] p_read62;
input  [5:0] p_read63;
output  [9:0] ap_return_0;
output  [9:0] ap_return_1;
output  [9:0] ap_return_2;
output  [9:0] ap_return_3;
output  [9:0] ap_return_4;
output  [9:0] ap_return_5;
output  [9:0] ap_return_6;
output  [9:0] ap_return_7;
output  [9:0] ap_return_8;
output  [9:0] ap_return_9;
output  [9:0] ap_return_10;
output  [9:0] ap_return_11;
output  [9:0] ap_return_12;
output  [9:0] ap_return_13;
output  [9:0] ap_return_14;
output  [9:0] ap_return_15;
output  [9:0] ap_return_16;
output  [9:0] ap_return_17;
output  [9:0] ap_return_18;
output  [9:0] ap_return_19;
output  [9:0] ap_return_20;
output  [9:0] ap_return_21;
output  [9:0] ap_return_22;
output  [9:0] ap_return_23;
output  [9:0] ap_return_24;
output  [9:0] ap_return_25;
output  [9:0] ap_return_26;
output  [9:0] ap_return_27;
output  [9:0] ap_return_28;
output  [9:0] ap_return_29;
output  [9:0] ap_return_30;
output  [9:0] ap_return_31;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] ap_return_0;
reg[9:0] ap_return_1;
reg[9:0] ap_return_2;
reg[9:0] ap_return_3;
reg[9:0] ap_return_4;
reg[9:0] ap_return_5;
reg[9:0] ap_return_6;
reg[9:0] ap_return_7;
reg[9:0] ap_return_8;
reg[9:0] ap_return_9;
reg[9:0] ap_return_10;
reg[9:0] ap_return_11;
reg[9:0] ap_return_12;
reg[9:0] ap_return_13;
reg[9:0] ap_return_14;
reg[9:0] ap_return_15;
reg[9:0] ap_return_16;
reg[9:0] ap_return_17;
reg[9:0] ap_return_18;
reg[9:0] ap_return_19;
reg[9:0] ap_return_20;
reg[9:0] ap_return_21;
reg[9:0] ap_return_22;
reg[9:0] ap_return_23;
reg[9:0] ap_return_24;
reg[9:0] ap_return_25;
reg[9:0] ap_return_26;
reg[9:0] ap_return_27;
reg[9:0] ap_return_28;
reg[9:0] ap_return_29;
reg[9:0] ap_return_30;
reg[9:0] ap_return_31;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1;
wire   [0:0] icmp_ln1649_fu_528_p2;
wire   [5:0] select_ln14_fu_534_p3;
wire   [0:0] icmp_ln1649_157_fu_550_p2;
wire   [5:0] select_ln14_16_fu_556_p3;
wire   [0:0] icmp_ln1649_158_fu_572_p2;
wire   [5:0] select_ln14_17_fu_578_p3;
wire   [0:0] icmp_ln1649_159_fu_594_p2;
wire   [5:0] select_ln14_18_fu_600_p3;
wire   [0:0] icmp_ln1649_160_fu_616_p2;
wire   [5:0] select_ln14_19_fu_622_p3;
wire   [0:0] icmp_ln1649_161_fu_638_p2;
wire   [5:0] select_ln14_20_fu_644_p3;
wire   [0:0] icmp_ln1649_162_fu_660_p2;
wire   [5:0] select_ln14_21_fu_666_p3;
wire   [0:0] icmp_ln1649_163_fu_682_p2;
wire   [5:0] select_ln14_22_fu_688_p3;
wire   [0:0] icmp_ln1649_164_fu_704_p2;
wire   [5:0] select_ln14_23_fu_710_p3;
wire   [0:0] icmp_ln1649_165_fu_726_p2;
wire   [5:0] select_ln14_24_fu_732_p3;
wire   [0:0] icmp_ln1649_166_fu_748_p2;
wire   [5:0] select_ln14_25_fu_754_p3;
wire   [0:0] icmp_ln1649_167_fu_770_p2;
wire   [5:0] select_ln14_26_fu_776_p3;
wire   [0:0] icmp_ln1649_168_fu_792_p2;
wire   [5:0] select_ln14_27_fu_798_p3;
wire   [0:0] icmp_ln1649_169_fu_814_p2;
wire   [5:0] select_ln14_28_fu_820_p3;
wire   [0:0] icmp_ln1649_170_fu_836_p2;
wire   [5:0] select_ln14_29_fu_842_p3;
wire   [0:0] icmp_ln1649_171_fu_858_p2;
wire   [5:0] select_ln14_30_fu_864_p3;
wire   [0:0] icmp_ln1649_172_fu_880_p2;
wire   [5:0] select_ln14_31_fu_886_p3;
wire   [0:0] icmp_ln1649_173_fu_902_p2;
wire   [5:0] select_ln14_32_fu_908_p3;
wire   [0:0] icmp_ln1649_174_fu_924_p2;
wire   [5:0] select_ln14_33_fu_930_p3;
wire   [0:0] icmp_ln1649_175_fu_946_p2;
wire   [5:0] select_ln14_34_fu_952_p3;
wire   [0:0] icmp_ln1649_176_fu_968_p2;
wire   [5:0] select_ln14_35_fu_974_p3;
wire   [0:0] icmp_ln1649_177_fu_990_p2;
wire   [5:0] select_ln14_36_fu_996_p3;
wire   [0:0] icmp_ln1649_178_fu_1012_p2;
wire   [5:0] select_ln14_37_fu_1018_p3;
wire   [0:0] icmp_ln1649_179_fu_1034_p2;
wire   [5:0] select_ln14_38_fu_1040_p3;
wire   [0:0] icmp_ln1649_180_fu_1056_p2;
wire   [5:0] select_ln14_39_fu_1062_p3;
wire   [0:0] icmp_ln1649_181_fu_1078_p2;
wire   [5:0] select_ln14_40_fu_1084_p3;
wire   [0:0] icmp_ln1649_182_fu_1100_p2;
wire   [5:0] select_ln14_41_fu_1106_p3;
wire   [0:0] icmp_ln1649_183_fu_1122_p2;
wire   [5:0] select_ln14_42_fu_1128_p3;
wire   [0:0] icmp_ln1649_184_fu_1144_p2;
wire   [5:0] select_ln14_43_fu_1150_p3;
wire   [0:0] icmp_ln1649_185_fu_1166_p2;
wire   [5:0] select_ln14_44_fu_1172_p3;
wire   [0:0] icmp_ln1649_186_fu_1188_p2;
wire   [5:0] select_ln14_45_fu_1194_p3;
wire   [0:0] icmp_ln1649_187_fu_1210_p2;
wire   [5:0] select_ln14_46_fu_1216_p3;
wire   [9:0] shl_ln_fu_542_p3;
wire   [9:0] shl_ln838_17_fu_630_p3;
wire   [9:0] shl_ln838_21_fu_718_p3;
wire   [9:0] shl_ln838_25_fu_806_p3;
wire   [9:0] shl_ln838_29_fu_894_p3;
wire   [9:0] shl_ln838_33_fu_982_p3;
wire   [9:0] shl_ln838_37_fu_1070_p3;
wire   [9:0] shl_ln838_41_fu_1158_p3;
wire   [9:0] shl_ln838_s_fu_564_p3;
wire   [9:0] shl_ln838_18_fu_652_p3;
wire   [9:0] shl_ln838_22_fu_740_p3;
wire   [9:0] shl_ln838_26_fu_828_p3;
wire   [9:0] shl_ln838_30_fu_916_p3;
wire   [9:0] shl_ln838_34_fu_1004_p3;
wire   [9:0] shl_ln838_38_fu_1092_p3;
wire   [9:0] shl_ln838_42_fu_1180_p3;
wire   [9:0] shl_ln838_15_fu_586_p3;
wire   [9:0] shl_ln838_19_fu_674_p3;
wire   [9:0] shl_ln838_23_fu_762_p3;
wire   [9:0] shl_ln838_27_fu_850_p3;
wire   [9:0] shl_ln838_31_fu_938_p3;
wire   [9:0] shl_ln838_35_fu_1026_p3;
wire   [9:0] shl_ln838_39_fu_1114_p3;
wire   [9:0] shl_ln838_43_fu_1202_p3;
wire   [9:0] shl_ln838_16_fu_608_p3;
wire   [9:0] shl_ln838_20_fu_696_p3;
wire   [9:0] shl_ln838_24_fu_784_p3;
wire   [9:0] shl_ln838_28_fu_872_p3;
wire   [9:0] shl_ln838_32_fu_960_p3;
wire   [9:0] shl_ln838_36_fu_1048_p3;
wire   [9:0] shl_ln838_40_fu_1136_p3;
wire   [9:0] shl_ln838_44_fu_1224_p3;
reg   [9:0] ap_return_0_preg;
reg   [9:0] ap_return_1_preg;
reg   [9:0] ap_return_2_preg;
reg   [9:0] ap_return_3_preg;
reg   [9:0] ap_return_4_preg;
reg   [9:0] ap_return_5_preg;
reg   [9:0] ap_return_6_preg;
reg   [9:0] ap_return_7_preg;
reg   [9:0] ap_return_8_preg;
reg   [9:0] ap_return_9_preg;
reg   [9:0] ap_return_10_preg;
reg   [9:0] ap_return_11_preg;
reg   [9:0] ap_return_12_preg;
reg   [9:0] ap_return_13_preg;
reg   [9:0] ap_return_14_preg;
reg   [9:0] ap_return_15_preg;
reg   [9:0] ap_return_16_preg;
reg   [9:0] ap_return_17_preg;
reg   [9:0] ap_return_18_preg;
reg   [9:0] ap_return_19_preg;
reg   [9:0] ap_return_20_preg;
reg   [9:0] ap_return_21_preg;
reg   [9:0] ap_return_22_preg;
reg   [9:0] ap_return_23_preg;
reg   [9:0] ap_return_24_preg;
reg   [9:0] ap_return_25_preg;
reg   [9:0] ap_return_26_preg;
reg   [9:0] ap_return_27_preg;
reg   [9:0] ap_return_28_preg;
reg   [9:0] ap_return_29_preg;
reg   [9:0] ap_return_30_preg;
reg   [9:0] ap_return_31_preg;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_return_0_preg = 10'd0;
#0 ap_return_1_preg = 10'd0;
#0 ap_return_2_preg = 10'd0;
#0 ap_return_3_preg = 10'd0;
#0 ap_return_4_preg = 10'd0;
#0 ap_return_5_preg = 10'd0;
#0 ap_return_6_preg = 10'd0;
#0 ap_return_7_preg = 10'd0;
#0 ap_return_8_preg = 10'd0;
#0 ap_return_9_preg = 10'd0;
#0 ap_return_10_preg = 10'd0;
#0 ap_return_11_preg = 10'd0;
#0 ap_return_12_preg = 10'd0;
#0 ap_return_13_preg = 10'd0;
#0 ap_return_14_preg = 10'd0;
#0 ap_return_15_preg = 10'd0;
#0 ap_return_16_preg = 10'd0;
#0 ap_return_17_preg = 10'd0;
#0 ap_return_18_preg = 10'd0;
#0 ap_return_19_preg = 10'd0;
#0 ap_return_20_preg = 10'd0;
#0 ap_return_21_preg = 10'd0;
#0 ap_return_22_preg = 10'd0;
#0 ap_return_23_preg = 10'd0;
#0 ap_return_24_preg = 10'd0;
#0 ap_return_25_preg = 10'd0;
#0 ap_return_26_preg = 10'd0;
#0 ap_return_27_preg = 10'd0;
#0 ap_return_28_preg = 10'd0;
#0 ap_return_29_preg = 10'd0;
#0 ap_return_30_preg = 10'd0;
#0 ap_return_31_preg = 10'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_0_preg[4] <= 1'b0;
        ap_return_0_preg[5] <= 1'b0;
        ap_return_0_preg[6] <= 1'b0;
        ap_return_0_preg[7] <= 1'b0;
        ap_return_0_preg[8] <= 1'b0;
        ap_return_0_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_0_preg[9 : 4] <= shl_ln_fu_542_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_10_preg[4] <= 1'b0;
        ap_return_10_preg[5] <= 1'b0;
        ap_return_10_preg[6] <= 1'b0;
        ap_return_10_preg[7] <= 1'b0;
        ap_return_10_preg[8] <= 1'b0;
        ap_return_10_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_10_preg[9 : 4] <= shl_ln838_22_fu_740_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_11_preg[4] <= 1'b0;
        ap_return_11_preg[5] <= 1'b0;
        ap_return_11_preg[6] <= 1'b0;
        ap_return_11_preg[7] <= 1'b0;
        ap_return_11_preg[8] <= 1'b0;
        ap_return_11_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_11_preg[9 : 4] <= shl_ln838_26_fu_828_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_12_preg[4] <= 1'b0;
        ap_return_12_preg[5] <= 1'b0;
        ap_return_12_preg[6] <= 1'b0;
        ap_return_12_preg[7] <= 1'b0;
        ap_return_12_preg[8] <= 1'b0;
        ap_return_12_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_12_preg[9 : 4] <= shl_ln838_30_fu_916_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_13_preg[4] <= 1'b0;
        ap_return_13_preg[5] <= 1'b0;
        ap_return_13_preg[6] <= 1'b0;
        ap_return_13_preg[7] <= 1'b0;
        ap_return_13_preg[8] <= 1'b0;
        ap_return_13_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_13_preg[9 : 4] <= shl_ln838_34_fu_1004_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_14_preg[4] <= 1'b0;
        ap_return_14_preg[5] <= 1'b0;
        ap_return_14_preg[6] <= 1'b0;
        ap_return_14_preg[7] <= 1'b0;
        ap_return_14_preg[8] <= 1'b0;
        ap_return_14_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_14_preg[9 : 4] <= shl_ln838_38_fu_1092_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_15_preg[4] <= 1'b0;
        ap_return_15_preg[5] <= 1'b0;
        ap_return_15_preg[6] <= 1'b0;
        ap_return_15_preg[7] <= 1'b0;
        ap_return_15_preg[8] <= 1'b0;
        ap_return_15_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_15_preg[9 : 4] <= shl_ln838_42_fu_1180_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_16_preg[4] <= 1'b0;
        ap_return_16_preg[5] <= 1'b0;
        ap_return_16_preg[6] <= 1'b0;
        ap_return_16_preg[7] <= 1'b0;
        ap_return_16_preg[8] <= 1'b0;
        ap_return_16_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_16_preg[9 : 4] <= shl_ln838_15_fu_586_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_17_preg[4] <= 1'b0;
        ap_return_17_preg[5] <= 1'b0;
        ap_return_17_preg[6] <= 1'b0;
        ap_return_17_preg[7] <= 1'b0;
        ap_return_17_preg[8] <= 1'b0;
        ap_return_17_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_17_preg[9 : 4] <= shl_ln838_19_fu_674_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_18_preg[4] <= 1'b0;
        ap_return_18_preg[5] <= 1'b0;
        ap_return_18_preg[6] <= 1'b0;
        ap_return_18_preg[7] <= 1'b0;
        ap_return_18_preg[8] <= 1'b0;
        ap_return_18_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_18_preg[9 : 4] <= shl_ln838_23_fu_762_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_19_preg[4] <= 1'b0;
        ap_return_19_preg[5] <= 1'b0;
        ap_return_19_preg[6] <= 1'b0;
        ap_return_19_preg[7] <= 1'b0;
        ap_return_19_preg[8] <= 1'b0;
        ap_return_19_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_19_preg[9 : 4] <= shl_ln838_27_fu_850_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_1_preg[4] <= 1'b0;
        ap_return_1_preg[5] <= 1'b0;
        ap_return_1_preg[6] <= 1'b0;
        ap_return_1_preg[7] <= 1'b0;
        ap_return_1_preg[8] <= 1'b0;
        ap_return_1_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_1_preg[9 : 4] <= shl_ln838_17_fu_630_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_20_preg[4] <= 1'b0;
        ap_return_20_preg[5] <= 1'b0;
        ap_return_20_preg[6] <= 1'b0;
        ap_return_20_preg[7] <= 1'b0;
        ap_return_20_preg[8] <= 1'b0;
        ap_return_20_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_20_preg[9 : 4] <= shl_ln838_31_fu_938_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_21_preg[4] <= 1'b0;
        ap_return_21_preg[5] <= 1'b0;
        ap_return_21_preg[6] <= 1'b0;
        ap_return_21_preg[7] <= 1'b0;
        ap_return_21_preg[8] <= 1'b0;
        ap_return_21_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_21_preg[9 : 4] <= shl_ln838_35_fu_1026_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_22_preg[4] <= 1'b0;
        ap_return_22_preg[5] <= 1'b0;
        ap_return_22_preg[6] <= 1'b0;
        ap_return_22_preg[7] <= 1'b0;
        ap_return_22_preg[8] <= 1'b0;
        ap_return_22_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_22_preg[9 : 4] <= shl_ln838_39_fu_1114_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_23_preg[4] <= 1'b0;
        ap_return_23_preg[5] <= 1'b0;
        ap_return_23_preg[6] <= 1'b0;
        ap_return_23_preg[7] <= 1'b0;
        ap_return_23_preg[8] <= 1'b0;
        ap_return_23_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_23_preg[9 : 4] <= shl_ln838_43_fu_1202_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_24_preg[4] <= 1'b0;
        ap_return_24_preg[5] <= 1'b0;
        ap_return_24_preg[6] <= 1'b0;
        ap_return_24_preg[7] <= 1'b0;
        ap_return_24_preg[8] <= 1'b0;
        ap_return_24_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_24_preg[9 : 4] <= shl_ln838_16_fu_608_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_25_preg[4] <= 1'b0;
        ap_return_25_preg[5] <= 1'b0;
        ap_return_25_preg[6] <= 1'b0;
        ap_return_25_preg[7] <= 1'b0;
        ap_return_25_preg[8] <= 1'b0;
        ap_return_25_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_25_preg[9 : 4] <= shl_ln838_20_fu_696_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_26_preg[4] <= 1'b0;
        ap_return_26_preg[5] <= 1'b0;
        ap_return_26_preg[6] <= 1'b0;
        ap_return_26_preg[7] <= 1'b0;
        ap_return_26_preg[8] <= 1'b0;
        ap_return_26_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_26_preg[9 : 4] <= shl_ln838_24_fu_784_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_27_preg[4] <= 1'b0;
        ap_return_27_preg[5] <= 1'b0;
        ap_return_27_preg[6] <= 1'b0;
        ap_return_27_preg[7] <= 1'b0;
        ap_return_27_preg[8] <= 1'b0;
        ap_return_27_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_27_preg[9 : 4] <= shl_ln838_28_fu_872_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_28_preg[4] <= 1'b0;
        ap_return_28_preg[5] <= 1'b0;
        ap_return_28_preg[6] <= 1'b0;
        ap_return_28_preg[7] <= 1'b0;
        ap_return_28_preg[8] <= 1'b0;
        ap_return_28_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_28_preg[9 : 4] <= shl_ln838_32_fu_960_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_29_preg[4] <= 1'b0;
        ap_return_29_preg[5] <= 1'b0;
        ap_return_29_preg[6] <= 1'b0;
        ap_return_29_preg[7] <= 1'b0;
        ap_return_29_preg[8] <= 1'b0;
        ap_return_29_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_29_preg[9 : 4] <= shl_ln838_36_fu_1048_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_2_preg[4] <= 1'b0;
        ap_return_2_preg[5] <= 1'b0;
        ap_return_2_preg[6] <= 1'b0;
        ap_return_2_preg[7] <= 1'b0;
        ap_return_2_preg[8] <= 1'b0;
        ap_return_2_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_2_preg[9 : 4] <= shl_ln838_21_fu_718_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_30_preg[4] <= 1'b0;
        ap_return_30_preg[5] <= 1'b0;
        ap_return_30_preg[6] <= 1'b0;
        ap_return_30_preg[7] <= 1'b0;
        ap_return_30_preg[8] <= 1'b0;
        ap_return_30_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_30_preg[9 : 4] <= shl_ln838_40_fu_1136_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_31_preg[4] <= 1'b0;
        ap_return_31_preg[5] <= 1'b0;
        ap_return_31_preg[6] <= 1'b0;
        ap_return_31_preg[7] <= 1'b0;
        ap_return_31_preg[8] <= 1'b0;
        ap_return_31_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_31_preg[9 : 4] <= shl_ln838_44_fu_1224_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_3_preg[4] <= 1'b0;
        ap_return_3_preg[5] <= 1'b0;
        ap_return_3_preg[6] <= 1'b0;
        ap_return_3_preg[7] <= 1'b0;
        ap_return_3_preg[8] <= 1'b0;
        ap_return_3_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_3_preg[9 : 4] <= shl_ln838_25_fu_806_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_4_preg[4] <= 1'b0;
        ap_return_4_preg[5] <= 1'b0;
        ap_return_4_preg[6] <= 1'b0;
        ap_return_4_preg[7] <= 1'b0;
        ap_return_4_preg[8] <= 1'b0;
        ap_return_4_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_4_preg[9 : 4] <= shl_ln838_29_fu_894_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_5_preg[4] <= 1'b0;
        ap_return_5_preg[5] <= 1'b0;
        ap_return_5_preg[6] <= 1'b0;
        ap_return_5_preg[7] <= 1'b0;
        ap_return_5_preg[8] <= 1'b0;
        ap_return_5_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_5_preg[9 : 4] <= shl_ln838_33_fu_982_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_6_preg[4] <= 1'b0;
        ap_return_6_preg[5] <= 1'b0;
        ap_return_6_preg[6] <= 1'b0;
        ap_return_6_preg[7] <= 1'b0;
        ap_return_6_preg[8] <= 1'b0;
        ap_return_6_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_6_preg[9 : 4] <= shl_ln838_37_fu_1070_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_7_preg[4] <= 1'b0;
        ap_return_7_preg[5] <= 1'b0;
        ap_return_7_preg[6] <= 1'b0;
        ap_return_7_preg[7] <= 1'b0;
        ap_return_7_preg[8] <= 1'b0;
        ap_return_7_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_7_preg[9 : 4] <= shl_ln838_41_fu_1158_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_8_preg[4] <= 1'b0;
        ap_return_8_preg[5] <= 1'b0;
        ap_return_8_preg[6] <= 1'b0;
        ap_return_8_preg[7] <= 1'b0;
        ap_return_8_preg[8] <= 1'b0;
        ap_return_8_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_8_preg[9 : 4] <= shl_ln838_s_fu_564_p3[9 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_9_preg[4] <= 1'b0;
        ap_return_9_preg[5] <= 1'b0;
        ap_return_9_preg[6] <= 1'b0;
        ap_return_9_preg[7] <= 1'b0;
        ap_return_9_preg[8] <= 1'b0;
        ap_return_9_preg[9] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_9_preg[9 : 4] <= shl_ln838_18_fu_652_p3[9 : 4];
        end
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_0 = shl_ln_fu_542_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_1 = shl_ln838_17_fu_630_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_10 = shl_ln838_22_fu_740_p3;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_11 = shl_ln838_26_fu_828_p3;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_12 = shl_ln838_30_fu_916_p3;
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_13 = shl_ln838_34_fu_1004_p3;
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_14 = shl_ln838_38_fu_1092_p3;
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_15 = shl_ln838_42_fu_1180_p3;
    end else begin
        ap_return_15 = ap_return_15_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_16 = shl_ln838_15_fu_586_p3;
    end else begin
        ap_return_16 = ap_return_16_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_17 = shl_ln838_19_fu_674_p3;
    end else begin
        ap_return_17 = ap_return_17_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_18 = shl_ln838_23_fu_762_p3;
    end else begin
        ap_return_18 = ap_return_18_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_19 = shl_ln838_27_fu_850_p3;
    end else begin
        ap_return_19 = ap_return_19_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_2 = shl_ln838_21_fu_718_p3;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_20 = shl_ln838_31_fu_938_p3;
    end else begin
        ap_return_20 = ap_return_20_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_21 = shl_ln838_35_fu_1026_p3;
    end else begin
        ap_return_21 = ap_return_21_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_22 = shl_ln838_39_fu_1114_p3;
    end else begin
        ap_return_22 = ap_return_22_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_23 = shl_ln838_43_fu_1202_p3;
    end else begin
        ap_return_23 = ap_return_23_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_24 = shl_ln838_16_fu_608_p3;
    end else begin
        ap_return_24 = ap_return_24_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_25 = shl_ln838_20_fu_696_p3;
    end else begin
        ap_return_25 = ap_return_25_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_26 = shl_ln838_24_fu_784_p3;
    end else begin
        ap_return_26 = ap_return_26_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_27 = shl_ln838_28_fu_872_p3;
    end else begin
        ap_return_27 = ap_return_27_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_28 = shl_ln838_32_fu_960_p3;
    end else begin
        ap_return_28 = ap_return_28_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_29 = shl_ln838_36_fu_1048_p3;
    end else begin
        ap_return_29 = ap_return_29_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_3 = shl_ln838_25_fu_806_p3;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_30 = shl_ln838_40_fu_1136_p3;
    end else begin
        ap_return_30 = ap_return_30_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_31 = shl_ln838_44_fu_1224_p3;
    end else begin
        ap_return_31 = ap_return_31_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_4 = shl_ln838_29_fu_894_p3;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_5 = shl_ln838_33_fu_982_p3;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_6 = shl_ln838_37_fu_1070_p3;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_7 = shl_ln838_41_fu_1158_p3;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_8 = shl_ln838_s_fu_564_p3;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_9 = shl_ln838_18_fu_652_p3;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign icmp_ln1649_157_fu_550_p2 = ((p_read24 > p_read16) ? 1'b1 : 1'b0);

assign icmp_ln1649_158_fu_572_p2 = ((p_read40 > p_read32) ? 1'b1 : 1'b0);

assign icmp_ln1649_159_fu_594_p2 = ((p_read56 > p_read48) ? 1'b1 : 1'b0);

assign icmp_ln1649_160_fu_616_p2 = ((p_read9 > p_read1) ? 1'b1 : 1'b0);

assign icmp_ln1649_161_fu_638_p2 = ((p_read25 > p_read17) ? 1'b1 : 1'b0);

assign icmp_ln1649_162_fu_660_p2 = ((p_read41 > p_read33) ? 1'b1 : 1'b0);

assign icmp_ln1649_163_fu_682_p2 = ((p_read57 > p_read49) ? 1'b1 : 1'b0);

assign icmp_ln1649_164_fu_704_p2 = ((p_read10 > p_read2) ? 1'b1 : 1'b0);

assign icmp_ln1649_165_fu_726_p2 = ((p_read26 > p_read18) ? 1'b1 : 1'b0);

assign icmp_ln1649_166_fu_748_p2 = ((p_read42 > p_read34) ? 1'b1 : 1'b0);

assign icmp_ln1649_167_fu_770_p2 = ((p_read58 > p_read50) ? 1'b1 : 1'b0);

assign icmp_ln1649_168_fu_792_p2 = ((p_read11 > p_read3) ? 1'b1 : 1'b0);

assign icmp_ln1649_169_fu_814_p2 = ((p_read27 > p_read19) ? 1'b1 : 1'b0);

assign icmp_ln1649_170_fu_836_p2 = ((p_read43 > p_read35) ? 1'b1 : 1'b0);

assign icmp_ln1649_171_fu_858_p2 = ((p_read59 > p_read51) ? 1'b1 : 1'b0);

assign icmp_ln1649_172_fu_880_p2 = ((p_read12 > p_read4) ? 1'b1 : 1'b0);

assign icmp_ln1649_173_fu_902_p2 = ((p_read28 > p_read20) ? 1'b1 : 1'b0);

assign icmp_ln1649_174_fu_924_p2 = ((p_read44 > p_read36) ? 1'b1 : 1'b0);

assign icmp_ln1649_175_fu_946_p2 = ((p_read60 > p_read52) ? 1'b1 : 1'b0);

assign icmp_ln1649_176_fu_968_p2 = ((p_read13 > p_read5) ? 1'b1 : 1'b0);

assign icmp_ln1649_177_fu_990_p2 = ((p_read29 > p_read21) ? 1'b1 : 1'b0);

assign icmp_ln1649_178_fu_1012_p2 = ((p_read45 > p_read37) ? 1'b1 : 1'b0);

assign icmp_ln1649_179_fu_1034_p2 = ((p_read61 > p_read53) ? 1'b1 : 1'b0);

assign icmp_ln1649_180_fu_1056_p2 = ((p_read14 > p_read6) ? 1'b1 : 1'b0);

assign icmp_ln1649_181_fu_1078_p2 = ((p_read30 > p_read22) ? 1'b1 : 1'b0);

assign icmp_ln1649_182_fu_1100_p2 = ((p_read46 > p_read38) ? 1'b1 : 1'b0);

assign icmp_ln1649_183_fu_1122_p2 = ((p_read62 > p_read54) ? 1'b1 : 1'b0);

assign icmp_ln1649_184_fu_1144_p2 = ((p_read15 > p_read7) ? 1'b1 : 1'b0);

assign icmp_ln1649_185_fu_1166_p2 = ((p_read31 > p_read23) ? 1'b1 : 1'b0);

assign icmp_ln1649_186_fu_1188_p2 = ((p_read47 > p_read39) ? 1'b1 : 1'b0);

assign icmp_ln1649_187_fu_1210_p2 = ((p_read63 > p_read55) ? 1'b1 : 1'b0);

assign icmp_ln1649_fu_528_p2 = ((p_read8 > p_read) ? 1'b1 : 1'b0);

assign select_ln14_16_fu_556_p3 = ((icmp_ln1649_157_fu_550_p2[0:0] == 1'b1) ? p_read24 : p_read16);

assign select_ln14_17_fu_578_p3 = ((icmp_ln1649_158_fu_572_p2[0:0] == 1'b1) ? p_read40 : p_read32);

assign select_ln14_18_fu_600_p3 = ((icmp_ln1649_159_fu_594_p2[0:0] == 1'b1) ? p_read56 : p_read48);

assign select_ln14_19_fu_622_p3 = ((icmp_ln1649_160_fu_616_p2[0:0] == 1'b1) ? p_read9 : p_read1);

assign select_ln14_20_fu_644_p3 = ((icmp_ln1649_161_fu_638_p2[0:0] == 1'b1) ? p_read25 : p_read17);

assign select_ln14_21_fu_666_p3 = ((icmp_ln1649_162_fu_660_p2[0:0] == 1'b1) ? p_read41 : p_read33);

assign select_ln14_22_fu_688_p3 = ((icmp_ln1649_163_fu_682_p2[0:0] == 1'b1) ? p_read57 : p_read49);

assign select_ln14_23_fu_710_p3 = ((icmp_ln1649_164_fu_704_p2[0:0] == 1'b1) ? p_read10 : p_read2);

assign select_ln14_24_fu_732_p3 = ((icmp_ln1649_165_fu_726_p2[0:0] == 1'b1) ? p_read26 : p_read18);

assign select_ln14_25_fu_754_p3 = ((icmp_ln1649_166_fu_748_p2[0:0] == 1'b1) ? p_read42 : p_read34);

assign select_ln14_26_fu_776_p3 = ((icmp_ln1649_167_fu_770_p2[0:0] == 1'b1) ? p_read58 : p_read50);

assign select_ln14_27_fu_798_p3 = ((icmp_ln1649_168_fu_792_p2[0:0] == 1'b1) ? p_read11 : p_read3);

assign select_ln14_28_fu_820_p3 = ((icmp_ln1649_169_fu_814_p2[0:0] == 1'b1) ? p_read27 : p_read19);

assign select_ln14_29_fu_842_p3 = ((icmp_ln1649_170_fu_836_p2[0:0] == 1'b1) ? p_read43 : p_read35);

assign select_ln14_30_fu_864_p3 = ((icmp_ln1649_171_fu_858_p2[0:0] == 1'b1) ? p_read59 : p_read51);

assign select_ln14_31_fu_886_p3 = ((icmp_ln1649_172_fu_880_p2[0:0] == 1'b1) ? p_read12 : p_read4);

assign select_ln14_32_fu_908_p3 = ((icmp_ln1649_173_fu_902_p2[0:0] == 1'b1) ? p_read28 : p_read20);

assign select_ln14_33_fu_930_p3 = ((icmp_ln1649_174_fu_924_p2[0:0] == 1'b1) ? p_read44 : p_read36);

assign select_ln14_34_fu_952_p3 = ((icmp_ln1649_175_fu_946_p2[0:0] == 1'b1) ? p_read60 : p_read52);

assign select_ln14_35_fu_974_p3 = ((icmp_ln1649_176_fu_968_p2[0:0] == 1'b1) ? p_read13 : p_read5);

assign select_ln14_36_fu_996_p3 = ((icmp_ln1649_177_fu_990_p2[0:0] == 1'b1) ? p_read29 : p_read21);

assign select_ln14_37_fu_1018_p3 = ((icmp_ln1649_178_fu_1012_p2[0:0] == 1'b1) ? p_read45 : p_read37);

assign select_ln14_38_fu_1040_p3 = ((icmp_ln1649_179_fu_1034_p2[0:0] == 1'b1) ? p_read61 : p_read53);

assign select_ln14_39_fu_1062_p3 = ((icmp_ln1649_180_fu_1056_p2[0:0] == 1'b1) ? p_read14 : p_read6);

assign select_ln14_40_fu_1084_p3 = ((icmp_ln1649_181_fu_1078_p2[0:0] == 1'b1) ? p_read30 : p_read22);

assign select_ln14_41_fu_1106_p3 = ((icmp_ln1649_182_fu_1100_p2[0:0] == 1'b1) ? p_read46 : p_read38);

assign select_ln14_42_fu_1128_p3 = ((icmp_ln1649_183_fu_1122_p2[0:0] == 1'b1) ? p_read62 : p_read54);

assign select_ln14_43_fu_1150_p3 = ((icmp_ln1649_184_fu_1144_p2[0:0] == 1'b1) ? p_read15 : p_read7);

assign select_ln14_44_fu_1172_p3 = ((icmp_ln1649_185_fu_1166_p2[0:0] == 1'b1) ? p_read31 : p_read23);

assign select_ln14_45_fu_1194_p3 = ((icmp_ln1649_186_fu_1188_p2[0:0] == 1'b1) ? p_read47 : p_read39);

assign select_ln14_46_fu_1216_p3 = ((icmp_ln1649_187_fu_1210_p2[0:0] == 1'b1) ? p_read63 : p_read55);

assign select_ln14_fu_534_p3 = ((icmp_ln1649_fu_528_p2[0:0] == 1'b1) ? p_read8 : p_read);

assign shl_ln838_15_fu_586_p3 = {{select_ln14_17_fu_578_p3}, {4'd0}};

assign shl_ln838_16_fu_608_p3 = {{select_ln14_18_fu_600_p3}, {4'd0}};

assign shl_ln838_17_fu_630_p3 = {{select_ln14_19_fu_622_p3}, {4'd0}};

assign shl_ln838_18_fu_652_p3 = {{select_ln14_20_fu_644_p3}, {4'd0}};

assign shl_ln838_19_fu_674_p3 = {{select_ln14_21_fu_666_p3}, {4'd0}};

assign shl_ln838_20_fu_696_p3 = {{select_ln14_22_fu_688_p3}, {4'd0}};

assign shl_ln838_21_fu_718_p3 = {{select_ln14_23_fu_710_p3}, {4'd0}};

assign shl_ln838_22_fu_740_p3 = {{select_ln14_24_fu_732_p3}, {4'd0}};

assign shl_ln838_23_fu_762_p3 = {{select_ln14_25_fu_754_p3}, {4'd0}};

assign shl_ln838_24_fu_784_p3 = {{select_ln14_26_fu_776_p3}, {4'd0}};

assign shl_ln838_25_fu_806_p3 = {{select_ln14_27_fu_798_p3}, {4'd0}};

assign shl_ln838_26_fu_828_p3 = {{select_ln14_28_fu_820_p3}, {4'd0}};

assign shl_ln838_27_fu_850_p3 = {{select_ln14_29_fu_842_p3}, {4'd0}};

assign shl_ln838_28_fu_872_p3 = {{select_ln14_30_fu_864_p3}, {4'd0}};

assign shl_ln838_29_fu_894_p3 = {{select_ln14_31_fu_886_p3}, {4'd0}};

assign shl_ln838_30_fu_916_p3 = {{select_ln14_32_fu_908_p3}, {4'd0}};

assign shl_ln838_31_fu_938_p3 = {{select_ln14_33_fu_930_p3}, {4'd0}};

assign shl_ln838_32_fu_960_p3 = {{select_ln14_34_fu_952_p3}, {4'd0}};

assign shl_ln838_33_fu_982_p3 = {{select_ln14_35_fu_974_p3}, {4'd0}};

assign shl_ln838_34_fu_1004_p3 = {{select_ln14_36_fu_996_p3}, {4'd0}};

assign shl_ln838_35_fu_1026_p3 = {{select_ln14_37_fu_1018_p3}, {4'd0}};

assign shl_ln838_36_fu_1048_p3 = {{select_ln14_38_fu_1040_p3}, {4'd0}};

assign shl_ln838_37_fu_1070_p3 = {{select_ln14_39_fu_1062_p3}, {4'd0}};

assign shl_ln838_38_fu_1092_p3 = {{select_ln14_40_fu_1084_p3}, {4'd0}};

assign shl_ln838_39_fu_1114_p3 = {{select_ln14_41_fu_1106_p3}, {4'd0}};

assign shl_ln838_40_fu_1136_p3 = {{select_ln14_42_fu_1128_p3}, {4'd0}};

assign shl_ln838_41_fu_1158_p3 = {{select_ln14_43_fu_1150_p3}, {4'd0}};

assign shl_ln838_42_fu_1180_p3 = {{select_ln14_44_fu_1172_p3}, {4'd0}};

assign shl_ln838_43_fu_1202_p3 = {{select_ln14_45_fu_1194_p3}, {4'd0}};

assign shl_ln838_44_fu_1224_p3 = {{select_ln14_46_fu_1216_p3}, {4'd0}};

assign shl_ln838_s_fu_564_p3 = {{select_ln14_16_fu_556_p3}, {4'd0}};

assign shl_ln_fu_542_p3 = {{select_ln14_fu_534_p3}, {4'd0}};

always @ (posedge ap_clk) begin
    ap_return_0_preg[3:0] <= 4'b0000;
    ap_return_1_preg[3:0] <= 4'b0000;
    ap_return_2_preg[3:0] <= 4'b0000;
    ap_return_3_preg[3:0] <= 4'b0000;
    ap_return_4_preg[3:0] <= 4'b0000;
    ap_return_5_preg[3:0] <= 4'b0000;
    ap_return_6_preg[3:0] <= 4'b0000;
    ap_return_7_preg[3:0] <= 4'b0000;
    ap_return_8_preg[3:0] <= 4'b0000;
    ap_return_9_preg[3:0] <= 4'b0000;
    ap_return_10_preg[3:0] <= 4'b0000;
    ap_return_11_preg[3:0] <= 4'b0000;
    ap_return_12_preg[3:0] <= 4'b0000;
    ap_return_13_preg[3:0] <= 4'b0000;
    ap_return_14_preg[3:0] <= 4'b0000;
    ap_return_15_preg[3:0] <= 4'b0000;
    ap_return_16_preg[3:0] <= 4'b0000;
    ap_return_17_preg[3:0] <= 4'b0000;
    ap_return_18_preg[3:0] <= 4'b0000;
    ap_return_19_preg[3:0] <= 4'b0000;
    ap_return_20_preg[3:0] <= 4'b0000;
    ap_return_21_preg[3:0] <= 4'b0000;
    ap_return_22_preg[3:0] <= 4'b0000;
    ap_return_23_preg[3:0] <= 4'b0000;
    ap_return_24_preg[3:0] <= 4'b0000;
    ap_return_25_preg[3:0] <= 4'b0000;
    ap_return_26_preg[3:0] <= 4'b0000;
    ap_return_27_preg[3:0] <= 4'b0000;
    ap_return_28_preg[3:0] <= 4'b0000;
    ap_return_29_preg[3:0] <= 4'b0000;
    ap_return_30_preg[3:0] <= 4'b0000;
    ap_return_31_preg[3:0] <= 4'b0000;
end

endmodule //alveo_hls4ml_pooling1d_cl_ap_ufixed_6_0_4_0_0_ap_fixed_16_6_5_3_0_config5_s
