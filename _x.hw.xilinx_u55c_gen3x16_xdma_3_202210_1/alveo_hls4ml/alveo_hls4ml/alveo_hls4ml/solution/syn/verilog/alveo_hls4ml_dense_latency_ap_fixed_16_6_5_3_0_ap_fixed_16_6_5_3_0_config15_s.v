// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module alveo_hls4ml_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [9:0] p_read;
input  [9:0] p_read1;
input  [9:0] p_read2;
input  [9:0] p_read3;
input  [9:0] p_read4;
input  [9:0] p_read5;
input  [9:0] p_read6;
input  [9:0] p_read7;
input  [9:0] p_read8;
input  [9:0] p_read9;
input  [9:0] p_read10;
input  [9:0] p_read11;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] ap_return_0;
reg[15:0] ap_return_1;
reg[15:0] ap_return_2;
reg[15:0] ap_return_3;
reg[15:0] ap_return_4;
reg[15:0] ap_return_5;
reg[15:0] ap_return_6;
reg[15:0] ap_return_7;
reg[15:0] ap_return_8;
reg[15:0] ap_return_9;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
reg   [9:0] p_read921_reg_666;
reg    ap_block_pp0_stage0_11001;
reg   [9:0] p_read517_reg_671;
reg   [9:0] p_read416_reg_676;
reg   [9:0] p_read12_reg_681;
reg   [10:0] trunc_ln818_s_reg_686;
reg   [10:0] trunc_ln818_31_reg_691;
reg   [10:0] trunc_ln818_32_reg_696;
reg   [10:0] trunc_ln818_35_reg_701;
reg   [10:0] trunc_ln818_36_reg_706;
reg   [10:0] trunc_ln818_37_reg_711;
reg   [10:0] trunc_ln818_39_reg_716;
reg   [10:0] trunc_ln818_40_reg_721;
wire   [13:0] add_ln813_26_fu_538_p2;
reg   [13:0] add_ln813_26_reg_726;
wire   [13:0] add_ln813_31_fu_584_p2;
reg   [13:0] add_ln813_31_reg_731;
wire    ap_block_pp0_stage0;
wire   [14:0] shl_ln1273_s_fu_126_p3;
wire   [15:0] zext_ln1273_10_fu_134_p1;
wire   [15:0] r_V_34_fu_138_p2;
wire   [14:0] shl_ln1273_1_fu_154_p3;
wire   [15:0] zext_ln1273_11_fu_162_p1;
wire   [15:0] r_V_35_fu_166_p2;
wire   [14:0] shl_ln1273_2_fu_182_p3;
wire   [15:0] zext_ln1273_12_fu_190_p1;
wire   [15:0] r_V_36_fu_194_p2;
wire   [14:0] shl_ln1273_5_fu_210_p3;
wire   [15:0] zext_ln1273_15_fu_218_p1;
wire   [15:0] r_V_39_fu_222_p2;
wire   [14:0] shl_ln1273_6_fu_238_p3;
wire   [15:0] zext_ln1273_16_fu_246_p1;
wire   [15:0] r_V_40_fu_250_p2;
wire   [14:0] shl_ln1273_7_fu_266_p3;
wire   [15:0] zext_ln1273_17_fu_274_p1;
wire   [15:0] r_V_41_fu_278_p2;
wire   [14:0] shl_ln1273_9_fu_294_p3;
wire   [15:0] zext_ln1273_19_fu_302_p1;
wire   [15:0] r_V_43_fu_306_p2;
wire   [14:0] shl_ln1273_10_fu_322_p3;
wire   [15:0] zext_ln1273_20_fu_330_p1;
wire   [15:0] r_V_44_fu_334_p2;
wire   [14:0] shl_ln_fu_350_p3;
wire   [15:0] zext_ln1273_fu_357_p1;
wire   [15:0] r_V_fu_361_p2;
wire   [10:0] trunc_ln_fu_367_p4;
wire   [14:0] shl_ln1273_3_fu_390_p3;
wire   [15:0] zext_ln1273_13_fu_397_p1;
wire   [15:0] r_V_37_fu_401_p2;
wire   [10:0] trunc_ln818_33_fu_407_p4;
wire   [14:0] shl_ln1273_4_fu_421_p3;
wire   [15:0] zext_ln1273_14_fu_428_p1;
wire   [15:0] r_V_38_fu_432_p2;
wire   [10:0] trunc_ln818_34_fu_438_p4;
wire   [14:0] shl_ln1273_8_fu_461_p3;
wire   [15:0] zext_ln1273_18_fu_468_p1;
wire   [15:0] r_V_42_fu_472_p2;
wire   [10:0] trunc_ln818_38_fu_478_p4;
wire  signed [11:0] sext_ln70_15_fu_492_p1;
wire  signed [11:0] sext_ln70_13_fu_458_p1;
wire   [11:0] add_ln813_fu_498_p2;
wire  signed [12:0] sext_ln813_8_fu_504_p1;
wire  signed [12:0] sext_ln70_14_fu_488_p1;
wire   [12:0] add_ln813_23_fu_508_p2;
wire  signed [11:0] sext_ln70_12_fu_455_p1;
wire  signed [11:0] sext_ln70_11_fu_452_p1;
wire   [11:0] add_ln813_24_fu_518_p2;
wire  signed [12:0] sext_ln813_10_fu_524_p1;
wire  signed [12:0] sext_ln70_10_fu_448_p1;
wire   [12:0] add_ln813_25_fu_528_p2;
wire  signed [13:0] sext_ln813_11_fu_534_p1;
wire  signed [13:0] sext_ln813_9_fu_514_p1;
wire  signed [11:0] sext_ln70_6_fu_381_p1;
wire  signed [11:0] sext_ln70_7_fu_384_p1;
wire   [11:0] add_ln813_27_fu_544_p2;
wire  signed [12:0] sext_ln813_13_fu_550_p1;
wire  signed [12:0] sext_ln70_fu_377_p1;
wire   [12:0] add_ln813_28_fu_554_p2;
wire  signed [11:0] sext_ln70_8_fu_387_p1;
wire  signed [11:0] sext_ln813_fu_495_p1;
wire   [11:0] add_ln813_29_fu_564_p2;
wire  signed [12:0] sext_ln813_15_fu_570_p1;
wire  signed [12:0] sext_ln70_9_fu_417_p1;
wire   [12:0] add_ln813_30_fu_574_p2;
wire  signed [13:0] sext_ln813_16_fu_580_p1;
wire  signed [13:0] sext_ln813_14_fu_560_p1;
wire  signed [14:0] sext_ln813_17_fu_593_p1;
wire  signed [14:0] sext_ln813_12_fu_590_p1;
wire   [14:0] add_ln813_32_fu_596_p2;
wire  signed [15:0] sext_ln68_fu_602_p1;
reg   [15:0] ap_return_0_preg;
reg   [15:0] ap_return_1_preg;
reg   [15:0] ap_return_2_preg;
reg   [15:0] ap_return_3_preg;
reg   [15:0] ap_return_4_preg;
reg   [15:0] ap_return_5_preg;
reg   [15:0] ap_return_6_preg;
reg   [15:0] ap_return_7_preg;
reg   [15:0] ap_return_8_preg;
reg   [15:0] ap_return_9_preg;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_return_0_preg = 16'd0;
#0 ap_return_1_preg = 16'd0;
#0 ap_return_2_preg = 16'd0;
#0 ap_return_3_preg = 16'd0;
#0 ap_return_4_preg = 16'd0;
#0 ap_return_5_preg = 16'd0;
#0 ap_return_6_preg = 16'd0;
#0 ap_return_7_preg = 16'd0;
#0 ap_return_8_preg = 16'd0;
#0 ap_return_9_preg = 16'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 16'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_return_0_preg <= sext_ln68_fu_602_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 16'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_return_1_preg <= sext_ln68_fu_602_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 16'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_return_2_preg <= sext_ln68_fu_602_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 16'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_return_3_preg <= sext_ln68_fu_602_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 16'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_return_4_preg <= sext_ln68_fu_602_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 16'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_return_5_preg <= sext_ln68_fu_602_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 16'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_return_6_preg <= sext_ln68_fu_602_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 16'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_return_7_preg <= sext_ln68_fu_602_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 16'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_return_8_preg <= sext_ln68_fu_602_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 16'd0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_return_9_preg <= sext_ln68_fu_602_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln813_26_reg_726 <= add_ln813_26_fu_538_p2;
        add_ln813_31_reg_731 <= add_ln813_31_fu_584_p2;
        p_read12_reg_681 <= p_read;
        p_read416_reg_676 <= p_read4;
        p_read517_reg_671 <= p_read5;
        p_read921_reg_666 <= p_read9;
        trunc_ln818_31_reg_691 <= {{r_V_35_fu_166_p2[15:5]}};
        trunc_ln818_32_reg_696 <= {{r_V_36_fu_194_p2[15:5]}};
        trunc_ln818_35_reg_701 <= {{r_V_39_fu_222_p2[15:5]}};
        trunc_ln818_36_reg_706 <= {{r_V_40_fu_250_p2[15:5]}};
        trunc_ln818_37_reg_711 <= {{r_V_41_fu_278_p2[15:5]}};
        trunc_ln818_39_reg_716 <= {{r_V_43_fu_306_p2[15:5]}};
        trunc_ln818_40_reg_721 <= {{r_V_44_fu_334_p2[15:5]}};
        trunc_ln818_s_reg_686 <= {{r_V_34_fu_138_p2[15:5]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_0 = sext_ln68_fu_602_p1;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_1 = sext_ln68_fu_602_p1;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_2 = sext_ln68_fu_602_p1;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_3 = sext_ln68_fu_602_p1;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_4 = sext_ln68_fu_602_p1;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_5 = sext_ln68_fu_602_p1;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_6 = sext_ln68_fu_602_p1;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_7 = sext_ln68_fu_602_p1;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_8 = sext_ln68_fu_602_p1;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_9 = sext_ln68_fu_602_p1;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln813_23_fu_508_p2 = ($signed(sext_ln813_8_fu_504_p1) + $signed(sext_ln70_14_fu_488_p1));

assign add_ln813_24_fu_518_p2 = ($signed(sext_ln70_12_fu_455_p1) + $signed(sext_ln70_11_fu_452_p1));

assign add_ln813_25_fu_528_p2 = ($signed(sext_ln813_10_fu_524_p1) + $signed(sext_ln70_10_fu_448_p1));

assign add_ln813_26_fu_538_p2 = ($signed(sext_ln813_11_fu_534_p1) + $signed(sext_ln813_9_fu_514_p1));

assign add_ln813_27_fu_544_p2 = ($signed(sext_ln70_6_fu_381_p1) + $signed(sext_ln70_7_fu_384_p1));

assign add_ln813_28_fu_554_p2 = ($signed(sext_ln813_13_fu_550_p1) + $signed(sext_ln70_fu_377_p1));

assign add_ln813_29_fu_564_p2 = ($signed(sext_ln70_8_fu_387_p1) + $signed(sext_ln813_fu_495_p1));

assign add_ln813_30_fu_574_p2 = ($signed(sext_ln813_15_fu_570_p1) + $signed(sext_ln70_9_fu_417_p1));

assign add_ln813_31_fu_584_p2 = ($signed(sext_ln813_16_fu_580_p1) + $signed(sext_ln813_14_fu_560_p1));

assign add_ln813_32_fu_596_p2 = ($signed(sext_ln813_17_fu_593_p1) + $signed(sext_ln813_12_fu_590_p1));

assign add_ln813_fu_498_p2 = ($signed(sext_ln70_15_fu_492_p1) + $signed(sext_ln70_13_fu_458_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign r_V_34_fu_138_p2 = (16'd0 - zext_ln1273_10_fu_134_p1);

assign r_V_35_fu_166_p2 = (16'd0 - zext_ln1273_11_fu_162_p1);

assign r_V_36_fu_194_p2 = (16'd0 - zext_ln1273_12_fu_190_p1);

assign r_V_37_fu_401_p2 = (16'd0 - zext_ln1273_13_fu_397_p1);

assign r_V_38_fu_432_p2 = (16'd0 - zext_ln1273_14_fu_428_p1);

assign r_V_39_fu_222_p2 = (16'd0 - zext_ln1273_15_fu_218_p1);

assign r_V_40_fu_250_p2 = (16'd0 - zext_ln1273_16_fu_246_p1);

assign r_V_41_fu_278_p2 = (16'd0 - zext_ln1273_17_fu_274_p1);

assign r_V_42_fu_472_p2 = (16'd0 - zext_ln1273_18_fu_468_p1);

assign r_V_43_fu_306_p2 = (16'd0 - zext_ln1273_19_fu_302_p1);

assign r_V_44_fu_334_p2 = (16'd0 - zext_ln1273_20_fu_330_p1);

assign r_V_fu_361_p2 = (16'd0 - zext_ln1273_fu_357_p1);

assign sext_ln68_fu_602_p1 = $signed(add_ln813_32_fu_596_p2);

assign sext_ln70_10_fu_448_p1 = $signed(trunc_ln818_34_fu_438_p4);

assign sext_ln70_11_fu_452_p1 = $signed(trunc_ln818_35_reg_701);

assign sext_ln70_12_fu_455_p1 = $signed(trunc_ln818_36_reg_706);

assign sext_ln70_13_fu_458_p1 = $signed(trunc_ln818_37_reg_711);

assign sext_ln70_14_fu_488_p1 = $signed(trunc_ln818_38_fu_478_p4);

assign sext_ln70_15_fu_492_p1 = $signed(trunc_ln818_39_reg_716);

assign sext_ln70_6_fu_381_p1 = $signed(trunc_ln818_s_reg_686);

assign sext_ln70_7_fu_384_p1 = $signed(trunc_ln818_31_reg_691);

assign sext_ln70_8_fu_387_p1 = $signed(trunc_ln818_32_reg_696);

assign sext_ln70_9_fu_417_p1 = $signed(trunc_ln818_33_fu_407_p4);

assign sext_ln70_fu_377_p1 = $signed(trunc_ln_fu_367_p4);

assign sext_ln813_10_fu_524_p1 = $signed(add_ln813_24_fu_518_p2);

assign sext_ln813_11_fu_534_p1 = $signed(add_ln813_25_fu_528_p2);

assign sext_ln813_12_fu_590_p1 = $signed(add_ln813_26_reg_726);

assign sext_ln813_13_fu_550_p1 = $signed(add_ln813_27_fu_544_p2);

assign sext_ln813_14_fu_560_p1 = $signed(add_ln813_28_fu_554_p2);

assign sext_ln813_15_fu_570_p1 = $signed(add_ln813_29_fu_564_p2);

assign sext_ln813_16_fu_580_p1 = $signed(add_ln813_30_fu_574_p2);

assign sext_ln813_17_fu_593_p1 = $signed(add_ln813_31_reg_731);

assign sext_ln813_8_fu_504_p1 = $signed(add_ln813_fu_498_p2);

assign sext_ln813_9_fu_514_p1 = $signed(add_ln813_23_fu_508_p2);

assign sext_ln813_fu_495_p1 = $signed(trunc_ln818_40_reg_721);

assign shl_ln1273_10_fu_322_p3 = {{p_read11}, {5'd0}};

assign shl_ln1273_1_fu_154_p3 = {{p_read2}, {5'd0}};

assign shl_ln1273_2_fu_182_p3 = {{p_read3}, {5'd0}};

assign shl_ln1273_3_fu_390_p3 = {{p_read416_reg_676}, {5'd0}};

assign shl_ln1273_4_fu_421_p3 = {{p_read517_reg_671}, {5'd0}};

assign shl_ln1273_5_fu_210_p3 = {{p_read6}, {5'd0}};

assign shl_ln1273_6_fu_238_p3 = {{p_read7}, {5'd0}};

assign shl_ln1273_7_fu_266_p3 = {{p_read8}, {5'd0}};

assign shl_ln1273_8_fu_461_p3 = {{p_read921_reg_666}, {5'd0}};

assign shl_ln1273_9_fu_294_p3 = {{p_read10}, {5'd0}};

assign shl_ln1273_s_fu_126_p3 = {{p_read1}, {5'd0}};

assign shl_ln_fu_350_p3 = {{p_read12_reg_681}, {5'd0}};

assign trunc_ln818_33_fu_407_p4 = {{r_V_37_fu_401_p2[15:5]}};

assign trunc_ln818_34_fu_438_p4 = {{r_V_38_fu_432_p2[15:5]}};

assign trunc_ln818_38_fu_478_p4 = {{r_V_42_fu_472_p2[15:5]}};

assign trunc_ln_fu_367_p4 = {{r_V_fu_361_p2[15:5]}};

assign zext_ln1273_10_fu_134_p1 = shl_ln1273_s_fu_126_p3;

assign zext_ln1273_11_fu_162_p1 = shl_ln1273_1_fu_154_p3;

assign zext_ln1273_12_fu_190_p1 = shl_ln1273_2_fu_182_p3;

assign zext_ln1273_13_fu_397_p1 = shl_ln1273_3_fu_390_p3;

assign zext_ln1273_14_fu_428_p1 = shl_ln1273_4_fu_421_p3;

assign zext_ln1273_15_fu_218_p1 = shl_ln1273_5_fu_210_p3;

assign zext_ln1273_16_fu_246_p1 = shl_ln1273_6_fu_238_p3;

assign zext_ln1273_17_fu_274_p1 = shl_ln1273_7_fu_266_p3;

assign zext_ln1273_18_fu_468_p1 = shl_ln1273_8_fu_461_p3;

assign zext_ln1273_19_fu_302_p1 = shl_ln1273_9_fu_294_p3;

assign zext_ln1273_20_fu_330_p1 = shl_ln1273_10_fu_322_p3;

assign zext_ln1273_fu_357_p1 = shl_ln_fu_350_p3;

endmodule //alveo_hls4ml_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config15_s
