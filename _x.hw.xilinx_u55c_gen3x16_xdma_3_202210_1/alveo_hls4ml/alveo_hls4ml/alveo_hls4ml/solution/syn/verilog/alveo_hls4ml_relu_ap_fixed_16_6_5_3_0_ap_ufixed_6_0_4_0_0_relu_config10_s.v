// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module alveo_hls4ml_relu_ap_fixed_16_6_5_3_0_ap_ufixed_6_0_4_0_0_relu_config10_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] p_read3;
input  [15:0] p_read4;
output  [5:0] ap_return_0;
output  [5:0] ap_return_1;
output  [5:0] ap_return_2;
output  [5:0] ap_return_3;
output  [5:0] ap_return_4;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] ap_return_0;
reg[5:0] ap_return_1;
reg[5:0] ap_return_2;
reg[5:0] ap_return_3;
reg[5:0] ap_return_4;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg   [15:0] p_read_5_reg_743;
reg    ap_block_pp0_stage0_11001;
reg   [15:0] p_read_6_reg_749;
reg   [15:0] p_read_7_reg_755;
reg   [15:0] p_read16_reg_761;
reg   [15:0] p_read_8_reg_767;
wire   [5:0] p_Val2_8_fu_130_p2;
reg   [5:0] p_Val2_8_reg_773;
wire   [0:0] Range1_all_ones_fu_146_p2;
reg   [0:0] Range1_all_ones_reg_779;
wire   [0:0] Range1_all_zeros_fu_152_p2;
reg   [0:0] Range1_all_zeros_reg_784;
wire   [5:0] p_Val2_10_fu_210_p2;
reg   [5:0] p_Val2_10_reg_790;
wire   [0:0] Range1_all_ones_4_fu_226_p2;
reg   [0:0] Range1_all_ones_4_reg_796;
wire   [0:0] Range1_all_zeros_4_fu_232_p2;
reg   [0:0] Range1_all_zeros_4_reg_801;
wire   [5:0] p_Val2_12_fu_290_p2;
reg   [5:0] p_Val2_12_reg_807;
wire   [0:0] Range1_all_ones_5_fu_306_p2;
reg   [0:0] Range1_all_ones_5_reg_813;
wire   [0:0] Range1_all_zeros_5_fu_312_p2;
reg   [0:0] Range1_all_zeros_5_reg_818;
wire   [5:0] p_Val2_14_fu_370_p2;
reg   [5:0] p_Val2_14_reg_824;
wire   [0:0] Range1_all_ones_6_fu_386_p2;
reg   [0:0] Range1_all_ones_6_reg_830;
wire   [0:0] Range1_all_zeros_6_fu_392_p2;
reg   [0:0] Range1_all_zeros_6_reg_835;
wire   [5:0] p_Val2_16_fu_450_p2;
reg   [5:0] p_Val2_16_reg_841;
wire   [0:0] Range1_all_ones_7_fu_466_p2;
reg   [0:0] Range1_all_ones_7_reg_847;
wire   [0:0] Range1_all_zeros_7_fu_472_p2;
reg   [0:0] Range1_all_zeros_7_reg_852;
wire    ap_block_pp0_stage0;
wire   [2:0] trunc_ln828_fu_104_p1;
wire   [0:0] p_Result_s_fu_88_p3;
wire   [0:0] r_fu_108_p2;
wire   [0:0] or_ln374_fu_114_p2;
wire   [0:0] p_Result_30_fu_96_p3;
wire   [0:0] and_ln374_fu_120_p2;
wire   [5:0] p_Val2_s_fu_78_p4;
wire   [5:0] zext_ln377_fu_126_p1;
wire   [5:0] tmp_s_fu_136_p4;
wire   [2:0] trunc_ln828_4_fu_184_p1;
wire   [0:0] p_Result_20_fu_168_p3;
wire   [0:0] r_4_fu_188_p2;
wire   [0:0] or_ln374_4_fu_194_p2;
wire   [0:0] p_Result_32_fu_176_p3;
wire   [0:0] and_ln374_4_fu_200_p2;
wire   [5:0] p_Val2_9_fu_158_p4;
wire   [5:0] zext_ln377_4_fu_206_p1;
wire   [5:0] tmp_4_fu_216_p4;
wire   [2:0] trunc_ln828_5_fu_264_p1;
wire   [0:0] p_Result_23_fu_248_p3;
wire   [0:0] r_5_fu_268_p2;
wire   [0:0] or_ln374_5_fu_274_p2;
wire   [0:0] p_Result_34_fu_256_p3;
wire   [0:0] and_ln374_5_fu_280_p2;
wire   [5:0] p_Val2_11_fu_238_p4;
wire   [5:0] zext_ln377_5_fu_286_p1;
wire   [5:0] tmp_5_fu_296_p4;
wire   [2:0] trunc_ln828_6_fu_344_p1;
wire   [0:0] p_Result_26_fu_328_p3;
wire   [0:0] r_6_fu_348_p2;
wire   [0:0] or_ln374_6_fu_354_p2;
wire   [0:0] p_Result_36_fu_336_p3;
wire   [0:0] and_ln374_6_fu_360_p2;
wire   [5:0] p_Val2_13_fu_318_p4;
wire   [5:0] zext_ln377_6_fu_366_p1;
wire   [5:0] tmp_6_fu_376_p4;
wire   [2:0] trunc_ln828_7_fu_424_p1;
wire   [0:0] p_Result_29_fu_408_p3;
wire   [0:0] r_7_fu_428_p2;
wire   [0:0] or_ln374_7_fu_434_p2;
wire   [0:0] p_Result_38_fu_416_p3;
wire   [0:0] and_ln374_7_fu_440_p2;
wire   [5:0] p_Val2_15_fu_398_p4;
wire   [5:0] zext_ln377_7_fu_446_p1;
wire   [5:0] tmp_7_fu_456_p4;
wire   [0:0] tmp_fu_490_p3;
wire   [0:0] p_Result_31_fu_483_p3;
wire   [0:0] select_ln888_fu_497_p3;
wire   [0:0] deleted_zeros_fu_503_p3;
wire   [0:0] icmp_ln1649_fu_478_p2;
wire   [5:0] select_ln302_fu_510_p3;
wire   [0:0] tmp_20_fu_537_p3;
wire   [0:0] p_Result_33_fu_530_p3;
wire   [0:0] select_ln888_4_fu_544_p3;
wire   [0:0] deleted_zeros_4_fu_550_p3;
wire   [0:0] icmp_ln1649_4_fu_525_p2;
wire   [5:0] select_ln302_4_fu_557_p3;
wire   [0:0] tmp_24_fu_584_p3;
wire   [0:0] p_Result_35_fu_577_p3;
wire   [0:0] select_ln888_5_fu_591_p3;
wire   [0:0] deleted_zeros_5_fu_597_p3;
wire   [0:0] icmp_ln1649_5_fu_572_p2;
wire   [5:0] select_ln302_5_fu_604_p3;
wire   [0:0] tmp_28_fu_631_p3;
wire   [0:0] p_Result_37_fu_624_p3;
wire   [0:0] select_ln888_6_fu_638_p3;
wire   [0:0] deleted_zeros_6_fu_644_p3;
wire   [0:0] icmp_ln1649_6_fu_619_p2;
wire   [5:0] select_ln302_6_fu_651_p3;
wire   [0:0] tmp_32_fu_678_p3;
wire   [0:0] p_Result_39_fu_671_p3;
wire   [0:0] select_ln888_7_fu_685_p3;
wire   [0:0] deleted_zeros_7_fu_691_p3;
wire   [0:0] icmp_ln1649_7_fu_666_p2;
wire   [5:0] select_ln302_7_fu_698_p3;
wire   [5:0] select_ln1649_fu_517_p3;
wire   [5:0] select_ln1649_4_fu_564_p3;
wire   [5:0] select_ln1649_5_fu_611_p3;
wire   [5:0] select_ln1649_6_fu_658_p3;
wire   [5:0] select_ln1649_7_fu_705_p3;
reg   [5:0] ap_return_0_preg;
reg   [5:0] ap_return_1_preg;
reg   [5:0] ap_return_2_preg;
reg   [5:0] ap_return_3_preg;
reg   [5:0] ap_return_4_preg;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_return_0_preg = 6'd0;
#0 ap_return_1_preg = 6'd0;
#0 ap_return_2_preg = 6'd0;
#0 ap_return_3_preg = 6'd0;
#0 ap_return_4_preg = 6'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 6'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_0_preg <= select_ln1649_fu_517_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 6'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_1_preg <= select_ln1649_4_fu_564_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 6'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_2_preg <= select_ln1649_5_fu_611_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 6'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_3_preg <= select_ln1649_6_fu_658_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 6'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_4_preg <= select_ln1649_7_fu_705_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Range1_all_ones_4_reg_796 <= Range1_all_ones_4_fu_226_p2;
        Range1_all_ones_5_reg_813 <= Range1_all_ones_5_fu_306_p2;
        Range1_all_ones_6_reg_830 <= Range1_all_ones_6_fu_386_p2;
        Range1_all_ones_7_reg_847 <= Range1_all_ones_7_fu_466_p2;
        Range1_all_ones_reg_779 <= Range1_all_ones_fu_146_p2;
        Range1_all_zeros_4_reg_801 <= Range1_all_zeros_4_fu_232_p2;
        Range1_all_zeros_5_reg_818 <= Range1_all_zeros_5_fu_312_p2;
        Range1_all_zeros_6_reg_835 <= Range1_all_zeros_6_fu_392_p2;
        Range1_all_zeros_7_reg_852 <= Range1_all_zeros_7_fu_472_p2;
        Range1_all_zeros_reg_784 <= Range1_all_zeros_fu_152_p2;
        p_Val2_10_reg_790 <= p_Val2_10_fu_210_p2;
        p_Val2_12_reg_807 <= p_Val2_12_fu_290_p2;
        p_Val2_14_reg_824 <= p_Val2_14_fu_370_p2;
        p_Val2_16_reg_841 <= p_Val2_16_fu_450_p2;
        p_Val2_8_reg_773 <= p_Val2_8_fu_130_p2;
        p_read16_reg_761 <= p_read1;
        p_read_5_reg_743 <= p_read4;
        p_read_6_reg_749 <= p_read3;
        p_read_7_reg_755 <= p_read2;
        p_read_8_reg_767 <= p_read;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_0 = select_ln1649_fu_517_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_1 = select_ln1649_4_fu_564_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_2 = select_ln1649_5_fu_611_p3;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_3 = select_ln1649_6_fu_658_p3;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_4 = select_ln1649_7_fu_705_p3;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_4_fu_226_p2 = ((tmp_4_fu_216_p4 == 6'd63) ? 1'b1 : 1'b0);

assign Range1_all_ones_5_fu_306_p2 = ((tmp_5_fu_296_p4 == 6'd63) ? 1'b1 : 1'b0);

assign Range1_all_ones_6_fu_386_p2 = ((tmp_6_fu_376_p4 == 6'd63) ? 1'b1 : 1'b0);

assign Range1_all_ones_7_fu_466_p2 = ((tmp_7_fu_456_p4 == 6'd63) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_146_p2 = ((tmp_s_fu_136_p4 == 6'd63) ? 1'b1 : 1'b0);

assign Range1_all_zeros_4_fu_232_p2 = ((tmp_4_fu_216_p4 == 6'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_5_fu_312_p2 = ((tmp_5_fu_296_p4 == 6'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_6_fu_392_p2 = ((tmp_6_fu_376_p4 == 6'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_7_fu_472_p2 = ((tmp_7_fu_456_p4 == 6'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_152_p2 = ((tmp_s_fu_136_p4 == 6'd0) ? 1'b1 : 1'b0);

assign and_ln374_4_fu_200_p2 = (p_Result_32_fu_176_p3 & or_ln374_4_fu_194_p2);

assign and_ln374_5_fu_280_p2 = (p_Result_34_fu_256_p3 & or_ln374_5_fu_274_p2);

assign and_ln374_6_fu_360_p2 = (p_Result_36_fu_336_p3 & or_ln374_6_fu_354_p2);

assign and_ln374_7_fu_440_p2 = (p_Result_38_fu_416_p3 & or_ln374_7_fu_434_p2);

assign and_ln374_fu_120_p2 = (p_Result_30_fu_96_p3 & or_ln374_fu_114_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign deleted_zeros_4_fu_550_p3 = ((p_Result_33_fu_530_p3[0:0] == 1'b1) ? select_ln888_4_fu_544_p3 : Range1_all_zeros_4_reg_801);

assign deleted_zeros_5_fu_597_p3 = ((p_Result_35_fu_577_p3[0:0] == 1'b1) ? select_ln888_5_fu_591_p3 : Range1_all_zeros_5_reg_818);

assign deleted_zeros_6_fu_644_p3 = ((p_Result_37_fu_624_p3[0:0] == 1'b1) ? select_ln888_6_fu_638_p3 : Range1_all_zeros_6_reg_835);

assign deleted_zeros_7_fu_691_p3 = ((p_Result_39_fu_671_p3[0:0] == 1'b1) ? select_ln888_7_fu_685_p3 : Range1_all_zeros_7_reg_852);

assign deleted_zeros_fu_503_p3 = ((p_Result_31_fu_483_p3[0:0] == 1'b1) ? select_ln888_fu_497_p3 : Range1_all_zeros_reg_784);

assign icmp_ln1649_4_fu_525_p2 = (($signed(p_read16_reg_761) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_5_fu_572_p2 = (($signed(p_read_7_reg_755) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_6_fu_619_p2 = (($signed(p_read_6_reg_749) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_7_fu_666_p2 = (($signed(p_read_5_reg_743) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_fu_478_p2 = (($signed(p_read_8_reg_767) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign or_ln374_4_fu_194_p2 = (r_4_fu_188_p2 | p_Result_20_fu_168_p3);

assign or_ln374_5_fu_274_p2 = (r_5_fu_268_p2 | p_Result_23_fu_248_p3);

assign or_ln374_6_fu_354_p2 = (r_6_fu_348_p2 | p_Result_26_fu_328_p3);

assign or_ln374_7_fu_434_p2 = (r_7_fu_428_p2 | p_Result_29_fu_408_p3);

assign or_ln374_fu_114_p2 = (r_fu_108_p2 | p_Result_s_fu_88_p3);

assign p_Result_20_fu_168_p3 = p_read1[32'd4];

assign p_Result_23_fu_248_p3 = p_read2[32'd4];

assign p_Result_26_fu_328_p3 = p_read3[32'd4];

assign p_Result_29_fu_408_p3 = p_read4[32'd4];

assign p_Result_30_fu_96_p3 = p_read[32'd3];

assign p_Result_31_fu_483_p3 = p_read_8_reg_767[32'd9];

assign p_Result_32_fu_176_p3 = p_read1[32'd3];

assign p_Result_33_fu_530_p3 = p_read16_reg_761[32'd9];

assign p_Result_34_fu_256_p3 = p_read2[32'd3];

assign p_Result_35_fu_577_p3 = p_read_7_reg_755[32'd9];

assign p_Result_36_fu_336_p3 = p_read3[32'd3];

assign p_Result_37_fu_624_p3 = p_read_6_reg_749[32'd9];

assign p_Result_38_fu_416_p3 = p_read4[32'd3];

assign p_Result_39_fu_671_p3 = p_read_5_reg_743[32'd9];

assign p_Result_s_fu_88_p3 = p_read[32'd4];

assign p_Val2_10_fu_210_p2 = (p_Val2_9_fu_158_p4 + zext_ln377_4_fu_206_p1);

assign p_Val2_11_fu_238_p4 = {{p_read2[9:4]}};

assign p_Val2_12_fu_290_p2 = (p_Val2_11_fu_238_p4 + zext_ln377_5_fu_286_p1);

assign p_Val2_13_fu_318_p4 = {{p_read3[9:4]}};

assign p_Val2_14_fu_370_p2 = (p_Val2_13_fu_318_p4 + zext_ln377_6_fu_366_p1);

assign p_Val2_15_fu_398_p4 = {{p_read4[9:4]}};

assign p_Val2_16_fu_450_p2 = (p_Val2_15_fu_398_p4 + zext_ln377_7_fu_446_p1);

assign p_Val2_8_fu_130_p2 = (p_Val2_s_fu_78_p4 + zext_ln377_fu_126_p1);

assign p_Val2_9_fu_158_p4 = {{p_read1[9:4]}};

assign p_Val2_s_fu_78_p4 = {{p_read[9:4]}};

assign r_4_fu_188_p2 = ((trunc_ln828_4_fu_184_p1 != 3'd0) ? 1'b1 : 1'b0);

assign r_5_fu_268_p2 = ((trunc_ln828_5_fu_264_p1 != 3'd0) ? 1'b1 : 1'b0);

assign r_6_fu_348_p2 = ((trunc_ln828_6_fu_344_p1 != 3'd0) ? 1'b1 : 1'b0);

assign r_7_fu_428_p2 = ((trunc_ln828_7_fu_424_p1 != 3'd0) ? 1'b1 : 1'b0);

assign r_fu_108_p2 = ((trunc_ln828_fu_104_p1 != 3'd0) ? 1'b1 : 1'b0);

assign select_ln1649_4_fu_564_p3 = ((icmp_ln1649_4_fu_525_p2[0:0] == 1'b1) ? select_ln302_4_fu_557_p3 : 6'd0);

assign select_ln1649_5_fu_611_p3 = ((icmp_ln1649_5_fu_572_p2[0:0] == 1'b1) ? select_ln302_5_fu_604_p3 : 6'd0);

assign select_ln1649_6_fu_658_p3 = ((icmp_ln1649_6_fu_619_p2[0:0] == 1'b1) ? select_ln302_6_fu_651_p3 : 6'd0);

assign select_ln1649_7_fu_705_p3 = ((icmp_ln1649_7_fu_666_p2[0:0] == 1'b1) ? select_ln302_7_fu_698_p3 : 6'd0);

assign select_ln1649_fu_517_p3 = ((icmp_ln1649_fu_478_p2[0:0] == 1'b1) ? select_ln302_fu_510_p3 : 6'd0);

assign select_ln302_4_fu_557_p3 = ((deleted_zeros_4_fu_550_p3[0:0] == 1'b1) ? p_Val2_10_reg_790 : 6'd63);

assign select_ln302_5_fu_604_p3 = ((deleted_zeros_5_fu_597_p3[0:0] == 1'b1) ? p_Val2_12_reg_807 : 6'd63);

assign select_ln302_6_fu_651_p3 = ((deleted_zeros_6_fu_644_p3[0:0] == 1'b1) ? p_Val2_14_reg_824 : 6'd63);

assign select_ln302_7_fu_698_p3 = ((deleted_zeros_7_fu_691_p3[0:0] == 1'b1) ? p_Val2_16_reg_841 : 6'd63);

assign select_ln302_fu_510_p3 = ((deleted_zeros_fu_503_p3[0:0] == 1'b1) ? p_Val2_8_reg_773 : 6'd63);

assign select_ln888_4_fu_544_p3 = ((tmp_20_fu_537_p3[0:0] == 1'b1) ? Range1_all_zeros_4_reg_801 : Range1_all_ones_4_reg_796);

assign select_ln888_5_fu_591_p3 = ((tmp_24_fu_584_p3[0:0] == 1'b1) ? Range1_all_zeros_5_reg_818 : Range1_all_ones_5_reg_813);

assign select_ln888_6_fu_638_p3 = ((tmp_28_fu_631_p3[0:0] == 1'b1) ? Range1_all_zeros_6_reg_835 : Range1_all_ones_6_reg_830);

assign select_ln888_7_fu_685_p3 = ((tmp_32_fu_678_p3[0:0] == 1'b1) ? Range1_all_zeros_7_reg_852 : Range1_all_ones_7_reg_847);

assign select_ln888_fu_497_p3 = ((tmp_fu_490_p3[0:0] == 1'b1) ? Range1_all_zeros_reg_784 : Range1_all_ones_reg_779);

assign tmp_20_fu_537_p3 = p_Val2_10_reg_790[32'd5];

assign tmp_24_fu_584_p3 = p_Val2_12_reg_807[32'd5];

assign tmp_28_fu_631_p3 = p_Val2_14_reg_824[32'd5];

assign tmp_32_fu_678_p3 = p_Val2_16_reg_841[32'd5];

assign tmp_4_fu_216_p4 = {{p_read1[15:10]}};

assign tmp_5_fu_296_p4 = {{p_read2[15:10]}};

assign tmp_6_fu_376_p4 = {{p_read3[15:10]}};

assign tmp_7_fu_456_p4 = {{p_read4[15:10]}};

assign tmp_fu_490_p3 = p_Val2_8_reg_773[32'd5];

assign tmp_s_fu_136_p4 = {{p_read[15:10]}};

assign trunc_ln828_4_fu_184_p1 = p_read1[2:0];

assign trunc_ln828_5_fu_264_p1 = p_read2[2:0];

assign trunc_ln828_6_fu_344_p1 = p_read3[2:0];

assign trunc_ln828_7_fu_424_p1 = p_read4[2:0];

assign trunc_ln828_fu_104_p1 = p_read[2:0];

assign zext_ln377_4_fu_206_p1 = and_ln374_4_fu_200_p2;

assign zext_ln377_5_fu_286_p1 = and_ln374_5_fu_280_p2;

assign zext_ln377_6_fu_366_p1 = and_ln374_6_fu_360_p2;

assign zext_ln377_7_fu_446_p1 = and_ln374_7_fu_440_p2;

assign zext_ln377_fu_126_p1 = and_ln374_fu_120_p2;

endmodule //alveo_hls4ml_relu_ap_fixed_16_6_5_3_0_ap_ufixed_6_0_4_0_0_relu_config10_s
