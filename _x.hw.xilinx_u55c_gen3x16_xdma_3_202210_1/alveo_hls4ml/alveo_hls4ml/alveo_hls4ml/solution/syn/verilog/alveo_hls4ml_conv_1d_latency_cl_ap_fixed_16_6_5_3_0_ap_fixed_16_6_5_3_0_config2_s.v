// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module alveo_hls4ml_conv_1d_latency_cl_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read,
        res_0,
        res_0_ap_vld,
        res_1,
        res_1_ap_vld,
        res_2,
        res_2_ap_vld,
        res_3,
        res_3_ap_vld,
        res_4,
        res_4_ap_vld,
        res_5,
        res_5_ap_vld,
        res_6,
        res_6_ap_vld,
        res_7,
        res_7_ap_vld,
        res_8,
        res_8_ap_vld,
        res_9,
        res_9_ap_vld,
        res_10,
        res_10_ap_vld,
        res_11,
        res_11_ap_vld,
        res_12,
        res_12_ap_vld,
        res_13,
        res_13_ap_vld,
        res_14,
        res_14_ap_vld,
        res_15,
        res_15_ap_vld,
        res_16,
        res_16_ap_vld,
        res_17,
        res_17_ap_vld,
        res_18,
        res_18_ap_vld,
        res_19,
        res_19_ap_vld,
        res_20,
        res_20_ap_vld,
        res_21,
        res_21_ap_vld,
        res_22,
        res_22_ap_vld,
        res_23,
        res_23_ap_vld,
        res_24,
        res_24_ap_vld,
        res_25,
        res_25_ap_vld,
        res_26,
        res_26_ap_vld,
        res_27,
        res_27_ap_vld,
        res_28,
        res_28_ap_vld,
        res_29,
        res_29_ap_vld,
        res_30,
        res_30_ap_vld,
        res_31,
        res_31_ap_vld,
        res_32,
        res_32_ap_vld,
        res_33,
        res_33_ap_vld,
        res_34,
        res_34_ap_vld,
        res_35,
        res_35_ap_vld,
        res_36,
        res_36_ap_vld,
        res_37,
        res_37_ap_vld,
        res_38,
        res_38_ap_vld,
        res_39,
        res_39_ap_vld,
        res_40,
        res_40_ap_vld,
        res_41,
        res_41_ap_vld,
        res_42,
        res_42_ap_vld,
        res_43,
        res_43_ap_vld,
        res_44,
        res_44_ap_vld,
        res_45,
        res_45_ap_vld,
        res_46,
        res_46_ap_vld,
        res_47,
        res_47_ap_vld,
        res_48,
        res_48_ap_vld,
        res_49,
        res_49_ap_vld,
        res_50,
        res_50_ap_vld,
        res_51,
        res_51_ap_vld,
        res_52,
        res_52_ap_vld,
        res_53,
        res_53_ap_vld,
        res_54,
        res_54_ap_vld,
        res_55,
        res_55_ap_vld,
        res_56,
        res_56_ap_vld,
        res_57,
        res_57_ap_vld,
        res_58,
        res_58_ap_vld,
        res_59,
        res_59_ap_vld,
        res_60,
        res_60_ap_vld,
        res_61,
        res_61_ap_vld,
        res_62,
        res_62_ap_vld,
        res_63,
        res_63_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [127:0] p_read;
output  [15:0] res_0;
output   res_0_ap_vld;
output  [15:0] res_1;
output   res_1_ap_vld;
output  [15:0] res_2;
output   res_2_ap_vld;
output  [15:0] res_3;
output   res_3_ap_vld;
output  [15:0] res_4;
output   res_4_ap_vld;
output  [15:0] res_5;
output   res_5_ap_vld;
output  [15:0] res_6;
output   res_6_ap_vld;
output  [15:0] res_7;
output   res_7_ap_vld;
output  [15:0] res_8;
output   res_8_ap_vld;
output  [15:0] res_9;
output   res_9_ap_vld;
output  [15:0] res_10;
output   res_10_ap_vld;
output  [15:0] res_11;
output   res_11_ap_vld;
output  [15:0] res_12;
output   res_12_ap_vld;
output  [15:0] res_13;
output   res_13_ap_vld;
output  [15:0] res_14;
output   res_14_ap_vld;
output  [15:0] res_15;
output   res_15_ap_vld;
output  [15:0] res_16;
output   res_16_ap_vld;
output  [15:0] res_17;
output   res_17_ap_vld;
output  [15:0] res_18;
output   res_18_ap_vld;
output  [15:0] res_19;
output   res_19_ap_vld;
output  [15:0] res_20;
output   res_20_ap_vld;
output  [15:0] res_21;
output   res_21_ap_vld;
output  [15:0] res_22;
output   res_22_ap_vld;
output  [15:0] res_23;
output   res_23_ap_vld;
output  [15:0] res_24;
output   res_24_ap_vld;
output  [15:0] res_25;
output   res_25_ap_vld;
output  [15:0] res_26;
output   res_26_ap_vld;
output  [15:0] res_27;
output   res_27_ap_vld;
output  [15:0] res_28;
output   res_28_ap_vld;
output  [15:0] res_29;
output   res_29_ap_vld;
output  [15:0] res_30;
output   res_30_ap_vld;
output  [15:0] res_31;
output   res_31_ap_vld;
output  [15:0] res_32;
output   res_32_ap_vld;
output  [15:0] res_33;
output   res_33_ap_vld;
output  [15:0] res_34;
output   res_34_ap_vld;
output  [15:0] res_35;
output   res_35_ap_vld;
output  [15:0] res_36;
output   res_36_ap_vld;
output  [15:0] res_37;
output   res_37_ap_vld;
output  [15:0] res_38;
output   res_38_ap_vld;
output  [15:0] res_39;
output   res_39_ap_vld;
output  [15:0] res_40;
output   res_40_ap_vld;
output  [15:0] res_41;
output   res_41_ap_vld;
output  [15:0] res_42;
output   res_42_ap_vld;
output  [15:0] res_43;
output   res_43_ap_vld;
output  [15:0] res_44;
output   res_44_ap_vld;
output  [15:0] res_45;
output   res_45_ap_vld;
output  [15:0] res_46;
output   res_46_ap_vld;
output  [15:0] res_47;
output   res_47_ap_vld;
output  [15:0] res_48;
output   res_48_ap_vld;
output  [15:0] res_49;
output   res_49_ap_vld;
output  [15:0] res_50;
output   res_50_ap_vld;
output  [15:0] res_51;
output   res_51_ap_vld;
output  [15:0] res_52;
output   res_52_ap_vld;
output  [15:0] res_53;
output   res_53_ap_vld;
output  [15:0] res_54;
output   res_54_ap_vld;
output  [15:0] res_55;
output   res_55_ap_vld;
output  [15:0] res_56;
output   res_56_ap_vld;
output  [15:0] res_57;
output   res_57_ap_vld;
output  [15:0] res_58;
output   res_58_ap_vld;
output  [15:0] res_59;
output   res_59_ap_vld;
output  [15:0] res_60;
output   res_60_ap_vld;
output  [15:0] res_61;
output   res_61_ap_vld;
output  [15:0] res_62;
output   res_62_ap_vld;
output  [15:0] res_63;
output   res_63_ap_vld;

reg ap_idle;
reg res_0_ap_vld;
reg res_1_ap_vld;
reg res_2_ap_vld;
reg res_3_ap_vld;
reg res_4_ap_vld;
reg res_5_ap_vld;
reg res_6_ap_vld;
reg res_7_ap_vld;
reg res_8_ap_vld;
reg res_9_ap_vld;
reg res_10_ap_vld;
reg res_11_ap_vld;
reg res_12_ap_vld;
reg res_13_ap_vld;
reg res_14_ap_vld;
reg res_15_ap_vld;
reg res_16_ap_vld;
reg res_17_ap_vld;
reg res_18_ap_vld;
reg res_19_ap_vld;
reg res_20_ap_vld;
reg res_21_ap_vld;
reg res_22_ap_vld;
reg res_23_ap_vld;
reg res_24_ap_vld;
reg res_25_ap_vld;
reg res_26_ap_vld;
reg res_27_ap_vld;
reg res_28_ap_vld;
reg res_29_ap_vld;
reg res_30_ap_vld;
reg res_31_ap_vld;
reg res_32_ap_vld;
reg res_33_ap_vld;
reg res_34_ap_vld;
reg res_35_ap_vld;
reg res_36_ap_vld;
reg res_37_ap_vld;
reg res_38_ap_vld;
reg res_39_ap_vld;
reg res_40_ap_vld;
reg res_41_ap_vld;
reg res_42_ap_vld;
reg res_43_ap_vld;
reg res_44_ap_vld;
reg res_45_ap_vld;
reg res_46_ap_vld;
reg res_47_ap_vld;
reg res_48_ap_vld;
reg res_49_ap_vld;
reg res_50_ap_vld;
reg res_51_ap_vld;
reg res_52_ap_vld;
reg res_53_ap_vld;
reg res_54_ap_vld;
reg res_55_ap_vld;
reg res_56_ap_vld;
reg res_57_ap_vld;
reg res_58_ap_vld;
reg res_59_ap_vld;
reg res_60_ap_vld;
reg res_61_ap_vld;
reg res_62_ap_vld;
reg res_63_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln34_fu_963_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [0:0] do_init_reg_678;
reg   [2:0] partition_reg_706;
reg   [127:0] p_read3_phi_reg_720;
wire    ap_block_pp0_stage0_11001;
reg   [2:0] ap_phi_mux_partition_phi_fu_709_p6;
wire   [2:0] i_part_fu_931_p2;
reg   [2:0] i_part_reg_1155;
wire   [15:0] data_buf_V_72_fu_937_p1;
wire   [15:0] data_buf_V_69_fu_941_p1;
wire   [15:0] data_buf_V_67_fu_945_p1;
wire   [15:0] data_buf_V_fu_959_p1;
reg   [0:0] icmp_ln34_reg_1185;
reg   [0:0] ap_phi_mux_do_init_phi_fu_681_p6;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [127:0] ap_phi_mux_p_read3_phi_phi_fu_724_p4;
wire   [127:0] ap_phi_reg_pp0_iter0_p_read3_phi_reg_720;
wire   [15:0] ap_phi_reg_pp0_iter0_data_buf_V_95_reg_733;
reg   [15:0] ap_phi_reg_pp0_iter1_data_buf_V_95_reg_733;
wire   [15:0] ap_phi_reg_pp0_iter0_data_buf_V_94_reg_754;
reg   [15:0] ap_phi_reg_pp0_iter1_data_buf_V_94_reg_754;
wire   [15:0] ap_phi_reg_pp0_iter0_data_buf_V_93_reg_777;
reg   [15:0] ap_phi_reg_pp0_iter1_data_buf_V_93_reg_777;
wire   [15:0] ap_phi_reg_pp0_iter0_data_buf_V_92_reg_801;
reg   [15:0] ap_phi_reg_pp0_iter1_data_buf_V_92_reg_801;
wire   [15:0] add_ln813_66_fu_1083_p2;
wire    ap_block_pp0_stage0_01001;
wire   [20:0] shl_ln_fu_969_p3;
wire   [20:0] r_V_108_fu_977_p2;
wire   [20:0] shl_ln1273_s_fu_993_p3;
wire   [20:0] r_V_110_fu_1001_p2;
wire   [20:0] shl_ln1273_41_fu_1017_p3;
wire   [20:0] r_V_112_fu_1025_p2;
wire   [20:0] shl_ln1273_42_fu_1041_p3;
wire   [20:0] r_V_114_fu_1049_p2;
wire   [15:0] trunc_ln818_s_fu_1007_p4;
wire   [15:0] trunc_ln818_71_fu_1031_p4;
wire   [15:0] trunc_ln_fu_983_p4;
wire   [15:0] add_ln813_64_fu_1071_p2;
wire   [15:0] trunc_ln818_72_fu_1055_p4;
wire   [15:0] add_ln813_65_fu_1077_p2;
wire   [15:0] add_ln813_fu_1065_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_196;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

alveo_hls4ml_flow_control_loop_pipe_no_ap_cont flow_control_loop_pipe_no_ap_cont_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if (((ap_loop_exit_ready == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_partition_phi_fu_709_p6 == 3'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_partition_phi_fu_709_p6 == 3'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_partition_phi_fu_709_p6 == 3'd2)))) begin
        ap_phi_reg_pp0_iter1_data_buf_V_92_reg_801 <= 16'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_partition_phi_fu_709_p6 == 3'd3))) begin
        ap_phi_reg_pp0_iter1_data_buf_V_92_reg_801 <= data_buf_V_72_fu_937_p1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_partition_phi_fu_709_p6 == 3'd4))) begin
        ap_phi_reg_pp0_iter1_data_buf_V_92_reg_801 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[31:16]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_partition_phi_fu_709_p6 == 3'd5))) begin
        ap_phi_reg_pp0_iter1_data_buf_V_92_reg_801 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[47:32]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_partition_phi_fu_709_p6 == 3'd6))) begin
        ap_phi_reg_pp0_iter1_data_buf_V_92_reg_801 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[63:48]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_partition_phi_fu_709_p6 == 3'd7))) begin
        ap_phi_reg_pp0_iter1_data_buf_V_92_reg_801 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[79:64]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_data_buf_V_92_reg_801 <= ap_phi_reg_pp0_iter0_data_buf_V_92_reg_801;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_partition_phi_fu_709_p6 == 3'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_partition_phi_fu_709_p6 == 3'd1)))) begin
        ap_phi_reg_pp0_iter1_data_buf_V_93_reg_777 <= 16'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_partition_phi_fu_709_p6 == 3'd2))) begin
        ap_phi_reg_pp0_iter1_data_buf_V_93_reg_777 <= data_buf_V_69_fu_941_p1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_partition_phi_fu_709_p6 == 3'd3))) begin
        ap_phi_reg_pp0_iter1_data_buf_V_93_reg_777 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[31:16]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_partition_phi_fu_709_p6 == 3'd4))) begin
        ap_phi_reg_pp0_iter1_data_buf_V_93_reg_777 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[47:32]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_partition_phi_fu_709_p6 == 3'd5))) begin
        ap_phi_reg_pp0_iter1_data_buf_V_93_reg_777 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[63:48]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_partition_phi_fu_709_p6 == 3'd6))) begin
        ap_phi_reg_pp0_iter1_data_buf_V_93_reg_777 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[79:64]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_partition_phi_fu_709_p6 == 3'd7))) begin
        ap_phi_reg_pp0_iter1_data_buf_V_93_reg_777 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[95:80]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_data_buf_V_93_reg_777 <= ap_phi_reg_pp0_iter0_data_buf_V_93_reg_777;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_196)) begin
        if ((ap_phi_mux_partition_phi_fu_709_p6 == 3'd0)) begin
            ap_phi_reg_pp0_iter1_data_buf_V_94_reg_754 <= 16'd0;
        end else if ((ap_phi_mux_partition_phi_fu_709_p6 == 3'd1)) begin
            ap_phi_reg_pp0_iter1_data_buf_V_94_reg_754 <= data_buf_V_67_fu_945_p1;
        end else if ((ap_phi_mux_partition_phi_fu_709_p6 == 3'd2)) begin
            ap_phi_reg_pp0_iter1_data_buf_V_94_reg_754 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[31:16]}};
        end else if ((ap_phi_mux_partition_phi_fu_709_p6 == 3'd3)) begin
            ap_phi_reg_pp0_iter1_data_buf_V_94_reg_754 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[47:32]}};
        end else if ((ap_phi_mux_partition_phi_fu_709_p6 == 3'd4)) begin
            ap_phi_reg_pp0_iter1_data_buf_V_94_reg_754 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[63:48]}};
        end else if ((ap_phi_mux_partition_phi_fu_709_p6 == 3'd5)) begin
            ap_phi_reg_pp0_iter1_data_buf_V_94_reg_754 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[79:64]}};
        end else if ((ap_phi_mux_partition_phi_fu_709_p6 == 3'd6)) begin
            ap_phi_reg_pp0_iter1_data_buf_V_94_reg_754 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[95:80]}};
        end else if ((ap_phi_mux_partition_phi_fu_709_p6 == 3'd7)) begin
            ap_phi_reg_pp0_iter1_data_buf_V_94_reg_754 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[111:96]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_buf_V_94_reg_754 <= ap_phi_reg_pp0_iter0_data_buf_V_94_reg_754;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_196)) begin
        if ((ap_phi_mux_partition_phi_fu_709_p6 == 3'd0)) begin
            ap_phi_reg_pp0_iter1_data_buf_V_95_reg_733 <= data_buf_V_fu_959_p1;
        end else if ((ap_phi_mux_partition_phi_fu_709_p6 == 3'd1)) begin
            ap_phi_reg_pp0_iter1_data_buf_V_95_reg_733 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[31:16]}};
        end else if ((ap_phi_mux_partition_phi_fu_709_p6 == 3'd2)) begin
            ap_phi_reg_pp0_iter1_data_buf_V_95_reg_733 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[47:32]}};
        end else if ((ap_phi_mux_partition_phi_fu_709_p6 == 3'd3)) begin
            ap_phi_reg_pp0_iter1_data_buf_V_95_reg_733 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[63:48]}};
        end else if ((ap_phi_mux_partition_phi_fu_709_p6 == 3'd4)) begin
            ap_phi_reg_pp0_iter1_data_buf_V_95_reg_733 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[79:64]}};
        end else if ((ap_phi_mux_partition_phi_fu_709_p6 == 3'd5)) begin
            ap_phi_reg_pp0_iter1_data_buf_V_95_reg_733 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[95:80]}};
        end else if ((ap_phi_mux_partition_phi_fu_709_p6 == 3'd6)) begin
            ap_phi_reg_pp0_iter1_data_buf_V_95_reg_733 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[111:96]}};
        end else if ((ap_phi_mux_partition_phi_fu_709_p6 == 3'd7)) begin
            ap_phi_reg_pp0_iter1_data_buf_V_95_reg_733 <= {{ap_phi_mux_p_read3_phi_phi_fu_724_p4[127:112]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_buf_V_95_reg_733 <= ap_phi_reg_pp0_iter0_data_buf_V_95_reg_733;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln34_reg_1185 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        do_init_reg_678 <= 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln34_reg_1185 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        do_init_reg_678 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_196)) begin
        if ((ap_phi_mux_do_init_phi_fu_681_p6 == 1'd0)) begin
            p_read3_phi_reg_720 <= p_read3_phi_reg_720;
        end else if ((ap_phi_mux_do_init_phi_fu_681_p6 == 1'd1)) begin
            p_read3_phi_reg_720 <= p_read;
        end else if (~(icmp_ln34_fu_963_p2 == 1'd1)) begin
            p_read3_phi_reg_720 <= ap_phi_reg_pp0_iter0_p_read3_phi_reg_720;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln34_reg_1185 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        partition_reg_706 <= i_part_reg_1155;
    end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln34_reg_1185 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        partition_reg_706 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_part_reg_1155 <= i_part_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln34_reg_1185 <= icmp_ln34_fu_963_p2;
    end
end

always @ (*) begin
    if (((icmp_ln34_fu_963_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln34_reg_1185 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_do_init_phi_fu_681_p6 = 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (icmp_ln34_reg_1185 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_phi_mux_do_init_phi_fu_681_p6 = 1'd1;
    end else begin
        ap_phi_mux_do_init_phi_fu_681_p6 = do_init_reg_678;
    end
end

always @ (*) begin
    if ((ap_phi_mux_do_init_phi_fu_681_p6 == 1'd0)) begin
        ap_phi_mux_p_read3_phi_phi_fu_724_p4 = p_read3_phi_reg_720;
    end else if ((ap_phi_mux_do_init_phi_fu_681_p6 == 1'd1)) begin
        ap_phi_mux_p_read3_phi_phi_fu_724_p4 = p_read;
    end else begin
        ap_phi_mux_p_read3_phi_phi_fu_724_p4 = ap_phi_reg_pp0_iter0_p_read3_phi_reg_720;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln34_reg_1185 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_partition_phi_fu_709_p6 = i_part_reg_1155;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (icmp_ln34_reg_1185 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_phi_mux_partition_phi_fu_709_p6 = 3'd0;
    end else begin
        ap_phi_mux_partition_phi_fu_709_p6 = partition_reg_706;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd0))) begin
        res_0_ap_vld = 1'b1;
    end else begin
        res_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd1))) begin
        res_10_ap_vld = 1'b1;
    end else begin
        res_10_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd1))) begin
        res_11_ap_vld = 1'b1;
    end else begin
        res_11_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd1))) begin
        res_12_ap_vld = 1'b1;
    end else begin
        res_12_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd1))) begin
        res_13_ap_vld = 1'b1;
    end else begin
        res_13_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd1))) begin
        res_14_ap_vld = 1'b1;
    end else begin
        res_14_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd1))) begin
        res_15_ap_vld = 1'b1;
    end else begin
        res_15_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd2))) begin
        res_16_ap_vld = 1'b1;
    end else begin
        res_16_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd2))) begin
        res_17_ap_vld = 1'b1;
    end else begin
        res_17_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd2))) begin
        res_18_ap_vld = 1'b1;
    end else begin
        res_18_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd2))) begin
        res_19_ap_vld = 1'b1;
    end else begin
        res_19_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd0))) begin
        res_1_ap_vld = 1'b1;
    end else begin
        res_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd2))) begin
        res_20_ap_vld = 1'b1;
    end else begin
        res_20_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd2))) begin
        res_21_ap_vld = 1'b1;
    end else begin
        res_21_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd2))) begin
        res_22_ap_vld = 1'b1;
    end else begin
        res_22_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd2))) begin
        res_23_ap_vld = 1'b1;
    end else begin
        res_23_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd3))) begin
        res_24_ap_vld = 1'b1;
    end else begin
        res_24_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd3))) begin
        res_25_ap_vld = 1'b1;
    end else begin
        res_25_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd3))) begin
        res_26_ap_vld = 1'b1;
    end else begin
        res_26_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd3))) begin
        res_27_ap_vld = 1'b1;
    end else begin
        res_27_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd3))) begin
        res_28_ap_vld = 1'b1;
    end else begin
        res_28_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd3))) begin
        res_29_ap_vld = 1'b1;
    end else begin
        res_29_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd0))) begin
        res_2_ap_vld = 1'b1;
    end else begin
        res_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd3))) begin
        res_30_ap_vld = 1'b1;
    end else begin
        res_30_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd3))) begin
        res_31_ap_vld = 1'b1;
    end else begin
        res_31_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd4))) begin
        res_32_ap_vld = 1'b1;
    end else begin
        res_32_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd4))) begin
        res_33_ap_vld = 1'b1;
    end else begin
        res_33_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd4))) begin
        res_34_ap_vld = 1'b1;
    end else begin
        res_34_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd4))) begin
        res_35_ap_vld = 1'b1;
    end else begin
        res_35_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd4))) begin
        res_36_ap_vld = 1'b1;
    end else begin
        res_36_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd4))) begin
        res_37_ap_vld = 1'b1;
    end else begin
        res_37_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd4))) begin
        res_38_ap_vld = 1'b1;
    end else begin
        res_38_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd4))) begin
        res_39_ap_vld = 1'b1;
    end else begin
        res_39_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd0))) begin
        res_3_ap_vld = 1'b1;
    end else begin
        res_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd5))) begin
        res_40_ap_vld = 1'b1;
    end else begin
        res_40_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd5))) begin
        res_41_ap_vld = 1'b1;
    end else begin
        res_41_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd5))) begin
        res_42_ap_vld = 1'b1;
    end else begin
        res_42_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd5))) begin
        res_43_ap_vld = 1'b1;
    end else begin
        res_43_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd5))) begin
        res_44_ap_vld = 1'b1;
    end else begin
        res_44_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd5))) begin
        res_45_ap_vld = 1'b1;
    end else begin
        res_45_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd5))) begin
        res_46_ap_vld = 1'b1;
    end else begin
        res_46_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd5))) begin
        res_47_ap_vld = 1'b1;
    end else begin
        res_47_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd6))) begin
        res_48_ap_vld = 1'b1;
    end else begin
        res_48_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd6))) begin
        res_49_ap_vld = 1'b1;
    end else begin
        res_49_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd0))) begin
        res_4_ap_vld = 1'b1;
    end else begin
        res_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd6))) begin
        res_50_ap_vld = 1'b1;
    end else begin
        res_50_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd6))) begin
        res_51_ap_vld = 1'b1;
    end else begin
        res_51_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd6))) begin
        res_52_ap_vld = 1'b1;
    end else begin
        res_52_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd6))) begin
        res_53_ap_vld = 1'b1;
    end else begin
        res_53_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd6))) begin
        res_54_ap_vld = 1'b1;
    end else begin
        res_54_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd6))) begin
        res_55_ap_vld = 1'b1;
    end else begin
        res_55_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd7))) begin
        res_56_ap_vld = 1'b1;
    end else begin
        res_56_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd7))) begin
        res_57_ap_vld = 1'b1;
    end else begin
        res_57_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd7))) begin
        res_58_ap_vld = 1'b1;
    end else begin
        res_58_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd7))) begin
        res_59_ap_vld = 1'b1;
    end else begin
        res_59_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd0))) begin
        res_5_ap_vld = 1'b1;
    end else begin
        res_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd7))) begin
        res_60_ap_vld = 1'b1;
    end else begin
        res_60_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd7))) begin
        res_61_ap_vld = 1'b1;
    end else begin
        res_61_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd7))) begin
        res_62_ap_vld = 1'b1;
    end else begin
        res_62_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd7))) begin
        res_63_ap_vld = 1'b1;
    end else begin
        res_63_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd0))) begin
        res_6_ap_vld = 1'b1;
    end else begin
        res_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd0))) begin
        res_7_ap_vld = 1'b1;
    end else begin
        res_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd1))) begin
        res_8_ap_vld = 1'b1;
    end else begin
        res_8_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (partition_reg_706 == 3'd1))) begin
        res_9_ap_vld = 1'b1;
    end else begin
        res_9_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln813_64_fu_1071_p2 = ($signed(trunc_ln_fu_983_p4) + $signed(16'd64512));

assign add_ln813_65_fu_1077_p2 = (add_ln813_64_fu_1071_p2 + trunc_ln818_72_fu_1055_p4);

assign add_ln813_66_fu_1083_p2 = (add_ln813_65_fu_1077_p2 + add_ln813_fu_1065_p2);

assign add_ln813_fu_1065_p2 = (trunc_ln818_s_fu_1007_p4 + trunc_ln818_71_fu_1031_p4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_196 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_data_buf_V_92_reg_801 = 'bx;

assign ap_phi_reg_pp0_iter0_data_buf_V_93_reg_777 = 'bx;

assign ap_phi_reg_pp0_iter0_data_buf_V_94_reg_754 = 'bx;

assign ap_phi_reg_pp0_iter0_data_buf_V_95_reg_733 = 'bx;

assign ap_phi_reg_pp0_iter0_p_read3_phi_reg_720 = 'bx;

assign data_buf_V_67_fu_945_p1 = ap_phi_mux_p_read3_phi_phi_fu_724_p4[15:0];

assign data_buf_V_69_fu_941_p1 = ap_phi_mux_p_read3_phi_phi_fu_724_p4[15:0];

assign data_buf_V_72_fu_937_p1 = ap_phi_mux_p_read3_phi_phi_fu_724_p4[15:0];

assign data_buf_V_fu_959_p1 = ap_phi_mux_p_read3_phi_phi_fu_724_p4[15:0];

assign i_part_fu_931_p2 = (ap_phi_mux_partition_phi_fu_709_p6 + 3'd1);

assign icmp_ln34_fu_963_p2 = ((ap_phi_mux_partition_phi_fu_709_p6 == 3'd7) ? 1'b1 : 1'b0);

assign r_V_108_fu_977_p2 = (21'd0 - shl_ln_fu_969_p3);

assign r_V_110_fu_1001_p2 = (21'd0 - shl_ln1273_s_fu_993_p3);

assign r_V_112_fu_1025_p2 = (21'd0 - shl_ln1273_41_fu_1017_p3);

assign r_V_114_fu_1049_p2 = (21'd0 - shl_ln1273_42_fu_1041_p3);

assign res_0 = add_ln813_66_fu_1083_p2;

assign res_1 = add_ln813_66_fu_1083_p2;

assign res_10 = add_ln813_66_fu_1083_p2;

assign res_11 = add_ln813_66_fu_1083_p2;

assign res_12 = add_ln813_66_fu_1083_p2;

assign res_13 = add_ln813_66_fu_1083_p2;

assign res_14 = add_ln813_66_fu_1083_p2;

assign res_15 = add_ln813_66_fu_1083_p2;

assign res_16 = add_ln813_66_fu_1083_p2;

assign res_17 = add_ln813_66_fu_1083_p2;

assign res_18 = add_ln813_66_fu_1083_p2;

assign res_19 = add_ln813_66_fu_1083_p2;

assign res_2 = add_ln813_66_fu_1083_p2;

assign res_20 = add_ln813_66_fu_1083_p2;

assign res_21 = add_ln813_66_fu_1083_p2;

assign res_22 = add_ln813_66_fu_1083_p2;

assign res_23 = add_ln813_66_fu_1083_p2;

assign res_24 = add_ln813_66_fu_1083_p2;

assign res_25 = add_ln813_66_fu_1083_p2;

assign res_26 = add_ln813_66_fu_1083_p2;

assign res_27 = add_ln813_66_fu_1083_p2;

assign res_28 = add_ln813_66_fu_1083_p2;

assign res_29 = add_ln813_66_fu_1083_p2;

assign res_3 = add_ln813_66_fu_1083_p2;

assign res_30 = add_ln813_66_fu_1083_p2;

assign res_31 = add_ln813_66_fu_1083_p2;

assign res_32 = add_ln813_66_fu_1083_p2;

assign res_33 = add_ln813_66_fu_1083_p2;

assign res_34 = add_ln813_66_fu_1083_p2;

assign res_35 = add_ln813_66_fu_1083_p2;

assign res_36 = add_ln813_66_fu_1083_p2;

assign res_37 = add_ln813_66_fu_1083_p2;

assign res_38 = add_ln813_66_fu_1083_p2;

assign res_39 = add_ln813_66_fu_1083_p2;

assign res_4 = add_ln813_66_fu_1083_p2;

assign res_40 = add_ln813_66_fu_1083_p2;

assign res_41 = add_ln813_66_fu_1083_p2;

assign res_42 = add_ln813_66_fu_1083_p2;

assign res_43 = add_ln813_66_fu_1083_p2;

assign res_44 = add_ln813_66_fu_1083_p2;

assign res_45 = add_ln813_66_fu_1083_p2;

assign res_46 = add_ln813_66_fu_1083_p2;

assign res_47 = add_ln813_66_fu_1083_p2;

assign res_48 = add_ln813_66_fu_1083_p2;

assign res_49 = add_ln813_66_fu_1083_p2;

assign res_5 = add_ln813_66_fu_1083_p2;

assign res_50 = add_ln813_66_fu_1083_p2;

assign res_51 = add_ln813_66_fu_1083_p2;

assign res_52 = add_ln813_66_fu_1083_p2;

assign res_53 = add_ln813_66_fu_1083_p2;

assign res_54 = add_ln813_66_fu_1083_p2;

assign res_55 = add_ln813_66_fu_1083_p2;

assign res_56 = add_ln813_66_fu_1083_p2;

assign res_57 = add_ln813_66_fu_1083_p2;

assign res_58 = add_ln813_66_fu_1083_p2;

assign res_59 = add_ln813_66_fu_1083_p2;

assign res_6 = add_ln813_66_fu_1083_p2;

assign res_60 = add_ln813_66_fu_1083_p2;

assign res_61 = add_ln813_66_fu_1083_p2;

assign res_62 = add_ln813_66_fu_1083_p2;

assign res_63 = add_ln813_66_fu_1083_p2;

assign res_7 = add_ln813_66_fu_1083_p2;

assign res_8 = add_ln813_66_fu_1083_p2;

assign res_9 = add_ln813_66_fu_1083_p2;

assign shl_ln1273_41_fu_1017_p3 = {{ap_phi_reg_pp0_iter1_data_buf_V_94_reg_754}, {5'd0}};

assign shl_ln1273_42_fu_1041_p3 = {{ap_phi_reg_pp0_iter1_data_buf_V_95_reg_733}, {5'd0}};

assign shl_ln1273_s_fu_993_p3 = {{ap_phi_reg_pp0_iter1_data_buf_V_93_reg_777}, {5'd0}};

assign shl_ln_fu_969_p3 = {{ap_phi_reg_pp0_iter1_data_buf_V_92_reg_801}, {5'd0}};

assign trunc_ln818_71_fu_1031_p4 = {{r_V_112_fu_1025_p2[20:5]}};

assign trunc_ln818_72_fu_1055_p4 = {{r_V_114_fu_1049_p2[20:5]}};

assign trunc_ln818_s_fu_1007_p4 = {{r_V_110_fu_1001_p2[20:5]}};

assign trunc_ln_fu_983_p4 = {{r_V_108_fu_977_p2[20:5]}};

endmodule //alveo_hls4ml_conv_1d_latency_cl_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s
