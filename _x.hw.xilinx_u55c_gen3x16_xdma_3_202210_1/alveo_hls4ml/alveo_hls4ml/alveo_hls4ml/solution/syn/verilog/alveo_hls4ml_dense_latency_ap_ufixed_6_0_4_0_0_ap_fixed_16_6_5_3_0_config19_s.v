// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module alveo_hls4ml_dense_latency_ap_ufixed_6_0_4_0_0_ap_fixed_16_6_5_3_0_config19_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [5:0] p_read;
input  [5:0] p_read1;
input  [5:0] p_read2;
input  [5:0] p_read3;
input  [5:0] p_read4;
input  [5:0] p_read5;
input  [5:0] p_read6;
input  [5:0] p_read7;
input  [5:0] p_read8;
input  [5:0] p_read9;
output  [14:0] ap_return_0;
output  [14:0] ap_return_1;
output  [14:0] ap_return_2;
output  [14:0] ap_return_3;
output  [14:0] ap_return_4;
output  [14:0] ap_return_5;
output  [14:0] ap_return_6;
output  [14:0] ap_return_7;
output  [14:0] ap_return_8;
output  [14:0] ap_return_9;
output  [14:0] ap_return_10;
output  [14:0] ap_return_11;
output  [14:0] ap_return_12;
output  [14:0] ap_return_13;
output  [14:0] ap_return_14;
output  [14:0] ap_return_15;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[14:0] ap_return_0;
reg[14:0] ap_return_1;
reg[14:0] ap_return_2;
reg[14:0] ap_return_3;
reg[14:0] ap_return_4;
reg[14:0] ap_return_5;
reg[14:0] ap_return_6;
reg[14:0] ap_return_7;
reg[14:0] ap_return_8;
reg[14:0] ap_return_9;
reg[14:0] ap_return_10;
reg[14:0] ap_return_11;
reg[14:0] ap_return_12;
reg[14:0] ap_return_13;
reg[14:0] ap_return_14;
reg[14:0] ap_return_15;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
reg   [5:0] p_read919_reg_594;
reg    ap_block_pp0_stage0_11001;
reg   [5:0] p_read919_reg_594_pp0_iter1_reg;
reg   [5:0] p_read818_reg_599;
reg   [5:0] p_read818_reg_599_pp0_iter1_reg;
reg   [5:0] p_read717_reg_604;
reg   [5:0] p_read616_reg_609;
reg   [5:0] p_read515_reg_614;
reg   [5:0] p_read414_reg_619;
reg   [5:0] p_read414_reg_619_pp0_iter1_reg;
reg   [5:0] p_read313_reg_624;
reg   [5:0] p_read212_reg_629;
reg   [5:0] p_read111_reg_634;
reg   [5:0] p_read_189_reg_639;
wire   [12:0] add_ln813_16_fu_345_p2;
reg   [12:0] add_ln813_16_reg_644;
wire   [12:0] add_ln813_19_fu_361_p2;
reg   [12:0] add_ln813_19_reg_649;
wire    ap_block_pp0_stage0;
wire   [10:0] shl_ln_fu_108_p3;
wire   [11:0] zext_ln1273_fu_115_p1;
wire   [11:0] r_V_fu_119_p2;
wire   [10:0] trunc_ln818_s_fu_125_p4;
wire   [10:0] shl_ln1273_1_fu_139_p3;
wire   [11:0] zext_ln1273_1_fu_146_p1;
wire   [11:0] r_V_25_fu_150_p2;
wire   [10:0] trunc_ln_fu_156_p4;
wire   [10:0] shl_ln1273_2_fu_170_p3;
wire   [11:0] zext_ln1273_2_fu_177_p1;
wire   [11:0] r_V_26_fu_181_p2;
wire   [10:0] trunc_ln818_23_fu_187_p4;
wire   [10:0] shl_ln1273_3_fu_201_p3;
wire   [11:0] zext_ln1273_3_fu_208_p1;
wire   [11:0] r_V_27_fu_212_p2;
wire   [10:0] trunc_ln818_24_fu_218_p4;
wire   [10:0] shl_ln1273_5_fu_232_p3;
wire   [11:0] zext_ln1273_5_fu_239_p1;
wire   [11:0] r_V_29_fu_243_p2;
wire   [10:0] trunc_ln818_26_fu_249_p4;
wire   [10:0] shl_ln1273_6_fu_263_p3;
wire   [11:0] zext_ln1273_6_fu_270_p1;
wire   [11:0] r_V_30_fu_274_p2;
wire   [10:0] trunc_ln818_27_fu_280_p4;
wire   [10:0] shl_ln1273_7_fu_294_p3;
wire   [11:0] zext_ln1273_7_fu_301_p1;
wire   [11:0] r_V_31_fu_305_p2;
wire   [10:0] trunc_ln818_28_fu_311_p4;
wire  signed [11:0] trunc_ln818_cast_fu_166_p1;
wire  signed [11:0] trunc_ln818_34_cast_fu_135_p1;
wire   [11:0] add_ln813_fu_325_p2;
wire  signed [11:0] sext_ln70_fu_197_p1;
wire  signed [11:0] sext_ln70_1_fu_228_p1;
wire   [11:0] add_ln813_15_fu_335_p2;
wire  signed [12:0] sext_ln813_4_fu_341_p1;
wire  signed [12:0] sext_ln813_1_fu_331_p1;
wire  signed [11:0] sext_ln70_3_fu_290_p1;
wire  signed [11:0] sext_ln70_4_fu_321_p1;
wire   [11:0] add_ln813_18_fu_351_p2;
wire  signed [12:0] sext_ln813_5_fu_357_p1;
wire  signed [12:0] sext_ln70_2_fu_259_p1;
wire   [10:0] shl_ln1273_4_fu_367_p3;
wire   [11:0] zext_ln1273_4_fu_374_p1;
wire   [11:0] r_V_28_fu_378_p2;
wire   [10:0] trunc_ln818_25_fu_384_p4;
wire   [10:0] shl_ln1273_8_fu_398_p3;
wire   [11:0] zext_ln1273_8_fu_405_p1;
wire   [11:0] r_V_32_fu_409_p2;
wire   [10:0] trunc_ln818_29_fu_415_p4;
wire   [10:0] shl_ln1273_9_fu_429_p3;
wire   [11:0] zext_ln1273_9_fu_436_p1;
wire   [11:0] r_V_33_fu_440_p2;
wire   [10:0] trunc_ln818_30_fu_446_p4;
wire  signed [13:0] sext_ln813_2_fu_460_p1;
wire  signed [13:0] trunc_ln818_37_cast_fu_394_p1;
wire  signed [13:0] sext_ln813_6_fu_469_p1;
wire   [13:0] add_ln813_17_fu_463_p2;
wire   [13:0] add_ln813_20_fu_472_p2;
wire  signed [11:0] sext_ln70_5_fu_425_p1;
wire  signed [11:0] sext_ln813_fu_456_p1;
wire   [11:0] add_ln813_21_fu_482_p2;
wire  signed [14:0] sext_ln813_7_fu_488_p1;
wire  signed [14:0] sext_ln813_3_fu_478_p1;
wire   [14:0] add_ln813_22_fu_492_p2;
reg   [14:0] ap_return_0_preg;
reg   [14:0] ap_return_1_preg;
reg   [14:0] ap_return_2_preg;
reg   [14:0] ap_return_3_preg;
reg   [14:0] ap_return_4_preg;
reg   [14:0] ap_return_5_preg;
reg   [14:0] ap_return_6_preg;
reg   [14:0] ap_return_7_preg;
reg   [14:0] ap_return_8_preg;
reg   [14:0] ap_return_9_preg;
reg   [14:0] ap_return_10_preg;
reg   [14:0] ap_return_11_preg;
reg   [14:0] ap_return_12_preg;
reg   [14:0] ap_return_13_preg;
reg   [14:0] ap_return_14_preg;
reg   [14:0] ap_return_15_preg;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_return_0_preg = 15'd0;
#0 ap_return_1_preg = 15'd0;
#0 ap_return_2_preg = 15'd0;
#0 ap_return_3_preg = 15'd0;
#0 ap_return_4_preg = 15'd0;
#0 ap_return_5_preg = 15'd0;
#0 ap_return_6_preg = 15'd0;
#0 ap_return_7_preg = 15'd0;
#0 ap_return_8_preg = 15'd0;
#0 ap_return_9_preg = 15'd0;
#0 ap_return_10_preg = 15'd0;
#0 ap_return_11_preg = 15'd0;
#0 ap_return_12_preg = 15'd0;
#0 ap_return_13_preg = 15'd0;
#0 ap_return_14_preg = 15'd0;
#0 ap_return_15_preg = 15'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_0_preg[4] <= 1'b0;
        ap_return_0_preg[5] <= 1'b0;
        ap_return_0_preg[6] <= 1'b0;
        ap_return_0_preg[7] <= 1'b0;
        ap_return_0_preg[8] <= 1'b0;
        ap_return_0_preg[9] <= 1'b0;
        ap_return_0_preg[10] <= 1'b0;
        ap_return_0_preg[11] <= 1'b0;
        ap_return_0_preg[12] <= 1'b0;
        ap_return_0_preg[13] <= 1'b0;
        ap_return_0_preg[14] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        ap_return_0_preg[14 : 4] <= add_ln813_22_fu_492_p2[14 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_10_preg[4] <= 1'b0;
        ap_return_10_preg[5] <= 1'b0;
        ap_return_10_preg[6] <= 1'b0;
        ap_return_10_preg[7] <= 1'b0;
        ap_return_10_preg[8] <= 1'b0;
        ap_return_10_preg[9] <= 1'b0;
        ap_return_10_preg[10] <= 1'b0;
        ap_return_10_preg[11] <= 1'b0;
        ap_return_10_preg[12] <= 1'b0;
        ap_return_10_preg[13] <= 1'b0;
        ap_return_10_preg[14] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        ap_return_10_preg[14 : 4] <= add_ln813_22_fu_492_p2[14 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_11_preg[4] <= 1'b0;
        ap_return_11_preg[5] <= 1'b0;
        ap_return_11_preg[6] <= 1'b0;
        ap_return_11_preg[7] <= 1'b0;
        ap_return_11_preg[8] <= 1'b0;
        ap_return_11_preg[9] <= 1'b0;
        ap_return_11_preg[10] <= 1'b0;
        ap_return_11_preg[11] <= 1'b0;
        ap_return_11_preg[12] <= 1'b0;
        ap_return_11_preg[13] <= 1'b0;
        ap_return_11_preg[14] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        ap_return_11_preg[14 : 4] <= add_ln813_22_fu_492_p2[14 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_12_preg[4] <= 1'b0;
        ap_return_12_preg[5] <= 1'b0;
        ap_return_12_preg[6] <= 1'b0;
        ap_return_12_preg[7] <= 1'b0;
        ap_return_12_preg[8] <= 1'b0;
        ap_return_12_preg[9] <= 1'b0;
        ap_return_12_preg[10] <= 1'b0;
        ap_return_12_preg[11] <= 1'b0;
        ap_return_12_preg[12] <= 1'b0;
        ap_return_12_preg[13] <= 1'b0;
        ap_return_12_preg[14] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        ap_return_12_preg[14 : 4] <= add_ln813_22_fu_492_p2[14 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_13_preg[4] <= 1'b0;
        ap_return_13_preg[5] <= 1'b0;
        ap_return_13_preg[6] <= 1'b0;
        ap_return_13_preg[7] <= 1'b0;
        ap_return_13_preg[8] <= 1'b0;
        ap_return_13_preg[9] <= 1'b0;
        ap_return_13_preg[10] <= 1'b0;
        ap_return_13_preg[11] <= 1'b0;
        ap_return_13_preg[12] <= 1'b0;
        ap_return_13_preg[13] <= 1'b0;
        ap_return_13_preg[14] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        ap_return_13_preg[14 : 4] <= add_ln813_22_fu_492_p2[14 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_14_preg[4] <= 1'b0;
        ap_return_14_preg[5] <= 1'b0;
        ap_return_14_preg[6] <= 1'b0;
        ap_return_14_preg[7] <= 1'b0;
        ap_return_14_preg[8] <= 1'b0;
        ap_return_14_preg[9] <= 1'b0;
        ap_return_14_preg[10] <= 1'b0;
        ap_return_14_preg[11] <= 1'b0;
        ap_return_14_preg[12] <= 1'b0;
        ap_return_14_preg[13] <= 1'b0;
        ap_return_14_preg[14] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        ap_return_14_preg[14 : 4] <= add_ln813_22_fu_492_p2[14 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_15_preg[4] <= 1'b0;
        ap_return_15_preg[5] <= 1'b0;
        ap_return_15_preg[6] <= 1'b0;
        ap_return_15_preg[7] <= 1'b0;
        ap_return_15_preg[8] <= 1'b0;
        ap_return_15_preg[9] <= 1'b0;
        ap_return_15_preg[10] <= 1'b0;
        ap_return_15_preg[11] <= 1'b0;
        ap_return_15_preg[12] <= 1'b0;
        ap_return_15_preg[13] <= 1'b0;
        ap_return_15_preg[14] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        ap_return_15_preg[14 : 4] <= add_ln813_22_fu_492_p2[14 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_1_preg[4] <= 1'b0;
        ap_return_1_preg[5] <= 1'b0;
        ap_return_1_preg[6] <= 1'b0;
        ap_return_1_preg[7] <= 1'b0;
        ap_return_1_preg[8] <= 1'b0;
        ap_return_1_preg[9] <= 1'b0;
        ap_return_1_preg[10] <= 1'b0;
        ap_return_1_preg[11] <= 1'b0;
        ap_return_1_preg[12] <= 1'b0;
        ap_return_1_preg[13] <= 1'b0;
        ap_return_1_preg[14] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        ap_return_1_preg[14 : 4] <= add_ln813_22_fu_492_p2[14 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_2_preg[4] <= 1'b0;
        ap_return_2_preg[5] <= 1'b0;
        ap_return_2_preg[6] <= 1'b0;
        ap_return_2_preg[7] <= 1'b0;
        ap_return_2_preg[8] <= 1'b0;
        ap_return_2_preg[9] <= 1'b0;
        ap_return_2_preg[10] <= 1'b0;
        ap_return_2_preg[11] <= 1'b0;
        ap_return_2_preg[12] <= 1'b0;
        ap_return_2_preg[13] <= 1'b0;
        ap_return_2_preg[14] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        ap_return_2_preg[14 : 4] <= add_ln813_22_fu_492_p2[14 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_3_preg[4] <= 1'b0;
        ap_return_3_preg[5] <= 1'b0;
        ap_return_3_preg[6] <= 1'b0;
        ap_return_3_preg[7] <= 1'b0;
        ap_return_3_preg[8] <= 1'b0;
        ap_return_3_preg[9] <= 1'b0;
        ap_return_3_preg[10] <= 1'b0;
        ap_return_3_preg[11] <= 1'b0;
        ap_return_3_preg[12] <= 1'b0;
        ap_return_3_preg[13] <= 1'b0;
        ap_return_3_preg[14] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        ap_return_3_preg[14 : 4] <= add_ln813_22_fu_492_p2[14 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_4_preg[4] <= 1'b0;
        ap_return_4_preg[5] <= 1'b0;
        ap_return_4_preg[6] <= 1'b0;
        ap_return_4_preg[7] <= 1'b0;
        ap_return_4_preg[8] <= 1'b0;
        ap_return_4_preg[9] <= 1'b0;
        ap_return_4_preg[10] <= 1'b0;
        ap_return_4_preg[11] <= 1'b0;
        ap_return_4_preg[12] <= 1'b0;
        ap_return_4_preg[13] <= 1'b0;
        ap_return_4_preg[14] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        ap_return_4_preg[14 : 4] <= add_ln813_22_fu_492_p2[14 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_5_preg[4] <= 1'b0;
        ap_return_5_preg[5] <= 1'b0;
        ap_return_5_preg[6] <= 1'b0;
        ap_return_5_preg[7] <= 1'b0;
        ap_return_5_preg[8] <= 1'b0;
        ap_return_5_preg[9] <= 1'b0;
        ap_return_5_preg[10] <= 1'b0;
        ap_return_5_preg[11] <= 1'b0;
        ap_return_5_preg[12] <= 1'b0;
        ap_return_5_preg[13] <= 1'b0;
        ap_return_5_preg[14] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        ap_return_5_preg[14 : 4] <= add_ln813_22_fu_492_p2[14 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_6_preg[4] <= 1'b0;
        ap_return_6_preg[5] <= 1'b0;
        ap_return_6_preg[6] <= 1'b0;
        ap_return_6_preg[7] <= 1'b0;
        ap_return_6_preg[8] <= 1'b0;
        ap_return_6_preg[9] <= 1'b0;
        ap_return_6_preg[10] <= 1'b0;
        ap_return_6_preg[11] <= 1'b0;
        ap_return_6_preg[12] <= 1'b0;
        ap_return_6_preg[13] <= 1'b0;
        ap_return_6_preg[14] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        ap_return_6_preg[14 : 4] <= add_ln813_22_fu_492_p2[14 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_7_preg[4] <= 1'b0;
        ap_return_7_preg[5] <= 1'b0;
        ap_return_7_preg[6] <= 1'b0;
        ap_return_7_preg[7] <= 1'b0;
        ap_return_7_preg[8] <= 1'b0;
        ap_return_7_preg[9] <= 1'b0;
        ap_return_7_preg[10] <= 1'b0;
        ap_return_7_preg[11] <= 1'b0;
        ap_return_7_preg[12] <= 1'b0;
        ap_return_7_preg[13] <= 1'b0;
        ap_return_7_preg[14] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        ap_return_7_preg[14 : 4] <= add_ln813_22_fu_492_p2[14 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_8_preg[4] <= 1'b0;
        ap_return_8_preg[5] <= 1'b0;
        ap_return_8_preg[6] <= 1'b0;
        ap_return_8_preg[7] <= 1'b0;
        ap_return_8_preg[8] <= 1'b0;
        ap_return_8_preg[9] <= 1'b0;
        ap_return_8_preg[10] <= 1'b0;
        ap_return_8_preg[11] <= 1'b0;
        ap_return_8_preg[12] <= 1'b0;
        ap_return_8_preg[13] <= 1'b0;
        ap_return_8_preg[14] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        ap_return_8_preg[14 : 4] <= add_ln813_22_fu_492_p2[14 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_9_preg[4] <= 1'b0;
        ap_return_9_preg[5] <= 1'b0;
        ap_return_9_preg[6] <= 1'b0;
        ap_return_9_preg[7] <= 1'b0;
        ap_return_9_preg[8] <= 1'b0;
        ap_return_9_preg[9] <= 1'b0;
        ap_return_9_preg[10] <= 1'b0;
        ap_return_9_preg[11] <= 1'b0;
        ap_return_9_preg[12] <= 1'b0;
        ap_return_9_preg[13] <= 1'b0;
        ap_return_9_preg[14] <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                        ap_return_9_preg[14 : 4] <= add_ln813_22_fu_492_p2[14 : 4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln813_16_reg_644[12 : 4] <= add_ln813_16_fu_345_p2[12 : 4];
        add_ln813_19_reg_649[12 : 4] <= add_ln813_19_fu_361_p2[12 : 4];
        p_read111_reg_634 <= p_read1;
        p_read212_reg_629 <= p_read2;
        p_read313_reg_624 <= p_read3;
        p_read414_reg_619 <= p_read4;
        p_read414_reg_619_pp0_iter1_reg <= p_read414_reg_619;
        p_read515_reg_614 <= p_read5;
        p_read616_reg_609 <= p_read6;
        p_read717_reg_604 <= p_read7;
        p_read818_reg_599 <= p_read8;
        p_read818_reg_599_pp0_iter1_reg <= p_read818_reg_599;
        p_read919_reg_594 <= p_read9;
        p_read919_reg_594_pp0_iter1_reg <= p_read919_reg_594;
        p_read_189_reg_639 <= p_read;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_0 = add_ln813_22_fu_492_p2;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_1 = add_ln813_22_fu_492_p2;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_10 = add_ln813_22_fu_492_p2;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_11 = add_ln813_22_fu_492_p2;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_12 = add_ln813_22_fu_492_p2;
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_13 = add_ln813_22_fu_492_p2;
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_14 = add_ln813_22_fu_492_p2;
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_15 = add_ln813_22_fu_492_p2;
    end else begin
        ap_return_15 = ap_return_15_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_2 = add_ln813_22_fu_492_p2;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_3 = add_ln813_22_fu_492_p2;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_4 = add_ln813_22_fu_492_p2;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_5 = add_ln813_22_fu_492_p2;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_6 = add_ln813_22_fu_492_p2;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_7 = add_ln813_22_fu_492_p2;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_8 = add_ln813_22_fu_492_p2;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_return_9 = add_ln813_22_fu_492_p2;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln813_15_fu_335_p2 = ($signed(sext_ln70_fu_197_p1) + $signed(sext_ln70_1_fu_228_p1));

assign add_ln813_16_fu_345_p2 = ($signed(sext_ln813_4_fu_341_p1) + $signed(sext_ln813_1_fu_331_p1));

assign add_ln813_17_fu_463_p2 = ($signed(sext_ln813_2_fu_460_p1) + $signed(trunc_ln818_37_cast_fu_394_p1));

assign add_ln813_18_fu_351_p2 = ($signed(sext_ln70_3_fu_290_p1) + $signed(sext_ln70_4_fu_321_p1));

assign add_ln813_19_fu_361_p2 = ($signed(sext_ln813_5_fu_357_p1) + $signed(sext_ln70_2_fu_259_p1));

assign add_ln813_20_fu_472_p2 = ($signed(sext_ln813_6_fu_469_p1) + $signed(add_ln813_17_fu_463_p2));

assign add_ln813_21_fu_482_p2 = ($signed(sext_ln70_5_fu_425_p1) + $signed(sext_ln813_fu_456_p1));

assign add_ln813_22_fu_492_p2 = ($signed(sext_ln813_7_fu_488_p1) + $signed(sext_ln813_3_fu_478_p1));

assign add_ln813_fu_325_p2 = ($signed(trunc_ln818_cast_fu_166_p1) + $signed(trunc_ln818_34_cast_fu_135_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign r_V_25_fu_150_p2 = (12'd0 - zext_ln1273_1_fu_146_p1);

assign r_V_26_fu_181_p2 = (12'd0 - zext_ln1273_2_fu_177_p1);

assign r_V_27_fu_212_p2 = (12'd0 - zext_ln1273_3_fu_208_p1);

assign r_V_28_fu_378_p2 = (12'd0 - zext_ln1273_4_fu_374_p1);

assign r_V_29_fu_243_p2 = (12'd0 - zext_ln1273_5_fu_239_p1);

assign r_V_30_fu_274_p2 = (12'd0 - zext_ln1273_6_fu_270_p1);

assign r_V_31_fu_305_p2 = (12'd0 - zext_ln1273_7_fu_301_p1);

assign r_V_32_fu_409_p2 = (12'd0 - zext_ln1273_8_fu_405_p1);

assign r_V_33_fu_440_p2 = (12'd0 - zext_ln1273_9_fu_436_p1);

assign r_V_fu_119_p2 = (12'd0 - zext_ln1273_fu_115_p1);

assign sext_ln70_1_fu_228_p1 = $signed(trunc_ln818_24_fu_218_p4);

assign sext_ln70_2_fu_259_p1 = $signed(trunc_ln818_26_fu_249_p4);

assign sext_ln70_3_fu_290_p1 = $signed(trunc_ln818_27_fu_280_p4);

assign sext_ln70_4_fu_321_p1 = $signed(trunc_ln818_28_fu_311_p4);

assign sext_ln70_5_fu_425_p1 = $signed(trunc_ln818_29_fu_415_p4);

assign sext_ln70_fu_197_p1 = $signed(trunc_ln818_23_fu_187_p4);

assign sext_ln813_1_fu_331_p1 = $signed(add_ln813_fu_325_p2);

assign sext_ln813_2_fu_460_p1 = $signed(add_ln813_16_reg_644);

assign sext_ln813_3_fu_478_p1 = $signed(add_ln813_20_fu_472_p2);

assign sext_ln813_4_fu_341_p1 = $signed(add_ln813_15_fu_335_p2);

assign sext_ln813_5_fu_357_p1 = $signed(add_ln813_18_fu_351_p2);

assign sext_ln813_6_fu_469_p1 = $signed(add_ln813_19_reg_649);

assign sext_ln813_7_fu_488_p1 = $signed(add_ln813_21_fu_482_p2);

assign sext_ln813_fu_456_p1 = $signed(trunc_ln818_30_fu_446_p4);

assign shl_ln1273_1_fu_139_p3 = {{p_read111_reg_634}, {5'd0}};

assign shl_ln1273_2_fu_170_p3 = {{p_read212_reg_629}, {5'd0}};

assign shl_ln1273_3_fu_201_p3 = {{p_read313_reg_624}, {5'd0}};

assign shl_ln1273_4_fu_367_p3 = {{p_read414_reg_619_pp0_iter1_reg}, {5'd0}};

assign shl_ln1273_5_fu_232_p3 = {{p_read515_reg_614}, {5'd0}};

assign shl_ln1273_6_fu_263_p3 = {{p_read616_reg_609}, {5'd0}};

assign shl_ln1273_7_fu_294_p3 = {{p_read717_reg_604}, {5'd0}};

assign shl_ln1273_8_fu_398_p3 = {{p_read818_reg_599_pp0_iter1_reg}, {5'd0}};

assign shl_ln1273_9_fu_429_p3 = {{p_read919_reg_594_pp0_iter1_reg}, {5'd0}};

assign shl_ln_fu_108_p3 = {{p_read_189_reg_639}, {5'd0}};

assign trunc_ln818_23_fu_187_p4 = {{r_V_26_fu_181_p2[11:1]}};

assign trunc_ln818_24_fu_218_p4 = {{r_V_27_fu_212_p2[11:1]}};

assign trunc_ln818_25_fu_384_p4 = {{r_V_28_fu_378_p2[11:1]}};

assign trunc_ln818_26_fu_249_p4 = {{r_V_29_fu_243_p2[11:1]}};

assign trunc_ln818_27_fu_280_p4 = {{r_V_30_fu_274_p2[11:1]}};

assign trunc_ln818_28_fu_311_p4 = {{r_V_31_fu_305_p2[11:1]}};

assign trunc_ln818_29_fu_415_p4 = {{r_V_32_fu_409_p2[11:1]}};

assign trunc_ln818_30_fu_446_p4 = {{r_V_33_fu_440_p2[11:1]}};

assign trunc_ln818_34_cast_fu_135_p1 = $signed(trunc_ln818_s_fu_125_p4);

assign trunc_ln818_37_cast_fu_394_p1 = $signed(trunc_ln818_25_fu_384_p4);

assign trunc_ln818_cast_fu_166_p1 = $signed(trunc_ln_fu_156_p4);

assign trunc_ln818_s_fu_125_p4 = {{r_V_fu_119_p2[11:1]}};

assign trunc_ln_fu_156_p4 = {{r_V_25_fu_150_p2[11:1]}};

assign zext_ln1273_1_fu_146_p1 = shl_ln1273_1_fu_139_p3;

assign zext_ln1273_2_fu_177_p1 = shl_ln1273_2_fu_170_p3;

assign zext_ln1273_3_fu_208_p1 = shl_ln1273_3_fu_201_p3;

assign zext_ln1273_4_fu_374_p1 = shl_ln1273_4_fu_367_p3;

assign zext_ln1273_5_fu_239_p1 = shl_ln1273_5_fu_232_p3;

assign zext_ln1273_6_fu_270_p1 = shl_ln1273_6_fu_263_p3;

assign zext_ln1273_7_fu_301_p1 = shl_ln1273_7_fu_294_p3;

assign zext_ln1273_8_fu_405_p1 = shl_ln1273_8_fu_398_p3;

assign zext_ln1273_9_fu_436_p1 = shl_ln1273_9_fu_429_p3;

assign zext_ln1273_fu_115_p1 = shl_ln_fu_108_p3;

always @ (posedge ap_clk) begin
    add_ln813_16_reg_644[3:0] <= 4'b0000;
    add_ln813_19_reg_649[3:0] <= 4'b0000;
    ap_return_0_preg[3:0] <= 4'b0000;
    ap_return_1_preg[3:0] <= 4'b0000;
    ap_return_2_preg[3:0] <= 4'b0000;
    ap_return_3_preg[3:0] <= 4'b0000;
    ap_return_4_preg[3:0] <= 4'b0000;
    ap_return_5_preg[3:0] <= 4'b0000;
    ap_return_6_preg[3:0] <= 4'b0000;
    ap_return_7_preg[3:0] <= 4'b0000;
    ap_return_8_preg[3:0] <= 4'b0000;
    ap_return_9_preg[3:0] <= 4'b0000;
    ap_return_10_preg[3:0] <= 4'b0000;
    ap_return_11_preg[3:0] <= 4'b0000;
    ap_return_12_preg[3:0] <= 4'b0000;
    ap_return_13_preg[3:0] <= 4'b0000;
    ap_return_14_preg[3:0] <= 4'b0000;
    ap_return_15_preg[3:0] <= 4'b0000;
end

endmodule //alveo_hls4ml_dense_latency_ap_ufixed_6_0_4_0_0_ap_fixed_16_6_5_3_0_config19_s
