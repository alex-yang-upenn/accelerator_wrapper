// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module alveo_hls4ml_pooling1d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config9_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer8_out_dout,
        layer8_out_num_data_valid,
        layer8_out_fifo_cap,
        layer8_out_empty_n,
        layer8_out_read,
        layer9_out_din,
        layer9_out_num_data_valid,
        layer9_out_fifo_cap,
        layer9_out_full_n,
        layer9_out_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state5 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [95:0] layer8_out_dout;
input  [2:0] layer8_out_num_data_valid;
input  [2:0] layer8_out_fifo_cap;
input   layer8_out_empty_n;
output   layer8_out_read;
output  [255:0] layer9_out_din;
input  [1:0] layer9_out_num_data_valid;
input  [1:0] layer9_out_fifo_cap;
input   layer9_out_full_n;
output   layer9_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer8_out_read;
reg layer9_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_39;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_38;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_37;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_36;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_35;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_34;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_33;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_32;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_31;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_30;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_29;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_28;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_27;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_26;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_25;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_24;
reg   [31:0] sX_1;
reg   [31:0] pX_1;
reg    layer8_out_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln185_reg_1741;
reg    layer9_out_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] and_ln145_reg_1850;
wire   [0:0] icmp_ln185_fu_438_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln145_2_fu_454_p2;
reg   [0:0] icmp_ln145_2_reg_1745;
wire   [0:0] icmp_ln165_fu_466_p2;
reg   [0:0] icmp_ln165_reg_1750;
wire   [5:0] trunc_ln187_fu_489_p1;
reg   [5:0] trunc_ln187_reg_1754;
reg   [5:0] trunc_ln187_s_reg_1760;
reg   [5:0] trunc_ln187_23_reg_1766;
reg   [5:0] trunc_ln187_24_reg_1772;
reg   [5:0] trunc_ln187_25_reg_1778;
reg   [5:0] trunc_ln187_26_reg_1784;
reg   [5:0] trunc_ln187_27_reg_1790;
reg   [5:0] trunc_ln187_28_reg_1796;
reg   [5:0] trunc_ln187_29_reg_1802;
reg   [5:0] trunc_ln187_30_reg_1808;
reg   [5:0] trunc_ln187_31_reg_1814;
reg   [5:0] trunc_ln187_32_reg_1820;
reg   [5:0] trunc_ln187_33_reg_1826;
reg   [5:0] trunc_ln187_34_reg_1832;
reg   [5:0] trunc_ln187_35_reg_1838;
reg   [5:0] trunc_ln187_36_reg_1844;
wire   [0:0] and_ln145_fu_653_p2;
reg    ap_enable_reg_pp0_iter0;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg   [31:0] ap_phi_mux_storemerge_phi_fu_231_p4;
wire   [31:0] add_ln172_fu_666_p2;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_reg_227;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_reg_227;
wire    ap_CS_fsm_state5;
wire   [31:0] add_ln165_fu_460_p2;
reg   [2:0] i_iw_fu_146;
wire   [2:0] i_iw_4_fu_444_p2;
reg   [5:0] p_0_0_0_0_0151_fu_150;
reg   [5:0] p_0_1_0_0_0154_fu_154;
reg   [5:0] p_0_2_0_0_0157_fu_158;
reg   [5:0] p_0_3_0_0_0160_fu_162;
reg   [5:0] p_0_4_0_0_0163_fu_166;
reg   [5:0] p_0_5_0_0_0166_fu_170;
reg   [5:0] p_0_6_0_0_0169_fu_174;
reg   [5:0] p_0_7_0_0_0172_fu_178;
reg   [5:0] p_0_8_0_0_0175_fu_182;
reg   [5:0] p_0_9_0_0_0178_fu_186;
reg   [5:0] p_0_10_0_0_0181_fu_190;
reg   [5:0] p_0_11_0_0_0184_fu_194;
reg   [5:0] p_0_12_0_0_0187_fu_198;
reg   [5:0] p_0_13_0_0_0190_fu_202;
reg   [5:0] p_0_14_0_0_0193_fu_206;
reg   [5:0] p_0_15_0_0_0196_fu_210;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln145_fu_647_p2;
wire   [31:0] select_ln172_fu_658_p3;
wire   [8:0] pool_window_V_fu_679_p3;
wire   [8:0] pool_window_V_48_fu_687_p3;
wire   [0:0] icmp_ln1651_fu_694_p2;
wire   [0:0] xor_ln1651_fu_700_p2;
wire   [8:0] select_ln65_fu_706_p3;
wire   [9:0] res_pack_data_fu_714_p3;
wire   [8:0] pool_window_V_49_fu_726_p3;
wire   [8:0] pool_window_V_50_fu_734_p3;
wire   [0:0] icmp_ln1651_24_fu_741_p2;
wire   [0:0] xor_ln1651_24_fu_747_p2;
wire   [8:0] select_ln65_24_fu_753_p3;
wire   [9:0] res_pack_data_4_fu_761_p3;
wire   [8:0] pool_window_V_51_fu_773_p3;
wire   [8:0] pool_window_V_52_fu_781_p3;
wire   [0:0] icmp_ln1651_25_fu_788_p2;
wire   [0:0] xor_ln1651_25_fu_794_p2;
wire   [8:0] select_ln65_25_fu_800_p3;
wire   [9:0] res_pack_data_5_fu_808_p3;
wire   [8:0] pool_window_V_53_fu_820_p3;
wire   [8:0] pool_window_V_54_fu_828_p3;
wire   [0:0] icmp_ln1651_26_fu_835_p2;
wire   [0:0] xor_ln1651_26_fu_841_p2;
wire   [8:0] select_ln65_26_fu_847_p3;
wire   [9:0] res_pack_data_6_fu_855_p3;
wire   [8:0] pool_window_V_55_fu_867_p3;
wire   [8:0] pool_window_V_56_fu_875_p3;
wire   [0:0] icmp_ln1651_27_fu_882_p2;
wire   [0:0] xor_ln1651_27_fu_888_p2;
wire   [8:0] select_ln65_27_fu_894_p3;
wire   [9:0] shl_ln_fu_902_p3;
wire   [8:0] pool_window_V_57_fu_914_p3;
wire   [8:0] pool_window_V_58_fu_922_p3;
wire   [0:0] icmp_ln1651_28_fu_929_p2;
wire   [0:0] xor_ln1651_28_fu_935_p2;
wire   [8:0] select_ln65_28_fu_941_p3;
wire   [9:0] shl_ln841_s_fu_949_p3;
wire   [8:0] pool_window_V_59_fu_961_p3;
wire   [8:0] pool_window_V_60_fu_969_p3;
wire   [0:0] icmp_ln1651_29_fu_976_p2;
wire   [0:0] xor_ln1651_29_fu_982_p2;
wire   [8:0] select_ln65_29_fu_988_p3;
wire   [9:0] shl_ln841_18_fu_996_p3;
wire   [8:0] pool_window_V_61_fu_1008_p3;
wire   [8:0] pool_window_V_62_fu_1016_p3;
wire   [0:0] icmp_ln1651_30_fu_1023_p2;
wire   [0:0] xor_ln1651_30_fu_1029_p2;
wire   [8:0] select_ln65_30_fu_1035_p3;
wire   [9:0] shl_ln841_19_fu_1043_p3;
wire   [8:0] pool_window_V_63_fu_1055_p3;
wire   [8:0] pool_window_V_64_fu_1063_p3;
wire   [0:0] icmp_ln1651_31_fu_1070_p2;
wire   [0:0] xor_ln1651_31_fu_1076_p2;
wire   [8:0] select_ln65_31_fu_1082_p3;
wire   [9:0] shl_ln841_20_fu_1090_p3;
wire   [8:0] pool_window_V_65_fu_1102_p3;
wire   [8:0] pool_window_V_66_fu_1110_p3;
wire   [0:0] icmp_ln1651_32_fu_1117_p2;
wire   [0:0] xor_ln1651_32_fu_1123_p2;
wire   [8:0] select_ln65_32_fu_1129_p3;
wire   [9:0] shl_ln841_21_fu_1137_p3;
wire   [8:0] pool_window_V_67_fu_1149_p3;
wire   [8:0] pool_window_V_68_fu_1157_p3;
wire   [0:0] icmp_ln1651_33_fu_1164_p2;
wire   [0:0] xor_ln1651_33_fu_1170_p2;
wire   [8:0] select_ln65_33_fu_1176_p3;
wire   [9:0] shl_ln841_22_fu_1184_p3;
wire   [8:0] pool_window_V_69_fu_1196_p3;
wire   [8:0] pool_window_V_70_fu_1204_p3;
wire   [0:0] icmp_ln1651_34_fu_1211_p2;
wire   [0:0] xor_ln1651_34_fu_1217_p2;
wire   [8:0] select_ln65_34_fu_1223_p3;
wire   [9:0] shl_ln841_23_fu_1231_p3;
wire   [8:0] pool_window_V_71_fu_1243_p3;
wire   [8:0] pool_window_V_72_fu_1251_p3;
wire   [0:0] icmp_ln1651_35_fu_1258_p2;
wire   [0:0] xor_ln1651_35_fu_1264_p2;
wire   [8:0] select_ln65_35_fu_1270_p3;
wire   [9:0] shl_ln841_24_fu_1278_p3;
wire   [8:0] pool_window_V_73_fu_1290_p3;
wire   [8:0] pool_window_V_74_fu_1298_p3;
wire   [0:0] icmp_ln1651_36_fu_1305_p2;
wire   [0:0] xor_ln1651_36_fu_1311_p2;
wire   [8:0] select_ln65_36_fu_1317_p3;
wire   [9:0] shl_ln841_25_fu_1325_p3;
wire   [8:0] pool_window_V_75_fu_1337_p3;
wire   [8:0] pool_window_V_76_fu_1345_p3;
wire   [0:0] icmp_ln1651_37_fu_1352_p2;
wire   [0:0] xor_ln1651_37_fu_1358_p2;
wire   [8:0] select_ln65_37_fu_1364_p3;
wire   [9:0] shl_ln841_26_fu_1372_p3;
wire   [8:0] pool_window_V_77_fu_1384_p3;
wire   [8:0] pool_window_V_78_fu_1392_p3;
wire   [0:0] icmp_ln1651_38_fu_1399_p2;
wire   [0:0] xor_ln1651_38_fu_1405_p2;
wire   [8:0] select_ln65_38_fu_1411_p3;
wire   [15:0] zext_ln837_28_fu_1380_p1;
wire   [15:0] zext_ln837_27_fu_1333_p1;
wire   [15:0] zext_ln837_26_fu_1286_p1;
wire   [15:0] zext_ln837_25_fu_1239_p1;
wire   [15:0] zext_ln837_24_fu_1192_p1;
wire   [15:0] zext_ln837_23_fu_1145_p1;
wire   [15:0] zext_ln837_22_fu_1098_p1;
wire   [15:0] zext_ln837_21_fu_1051_p1;
wire   [15:0] zext_ln837_20_fu_1004_p1;
wire   [15:0] zext_ln837_19_fu_957_p1;
wire   [15:0] zext_ln837_fu_910_p1;
wire   [15:0] zext_ln137_6_fu_863_p1;
wire   [15:0] zext_ln137_5_fu_816_p1;
wire   [15:0] zext_ln137_4_fu_769_p1;
wire   [15:0] zext_ln137_fu_722_p1;
wire   [249:0] or_ln161_s_fu_1419_p18;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_187;
reg    ap_condition_257;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_39 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_38 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_37 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_36 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_35 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_34 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_33 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_32 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_31 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_30 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_29 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_28 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_27 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_26 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_25 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_24 = 6'd0;
#0 sX_1 = 32'd0;
#0 pX_1 = 32'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_187)) begin
        if (((icmp_ln185_fu_438_p2 == 1'd0) & (icmp_ln165_fu_466_p2 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_227 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_227 <= ap_phi_reg_pp0_iter0_storemerge_reg_227;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_iw_fu_146 <= 3'd0;
    end else if (((icmp_ln185_fu_438_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_iw_fu_146 <= i_iw_4_fu_444_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_257)) begin
        if ((icmp_ln165_fu_466_p2 == 1'd1)) begin
            pX_1 <= 32'd0;
        end else if ((icmp_ln165_fu_466_p2 == 1'd0)) begin
            pX_1 <= add_ln165_fu_460_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_0_0_0_0151_fu_150 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_39;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_0_0_0_0151_fu_150 <= trunc_ln187_reg_1754;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_10_0_0_0181_fu_190 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_29;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_10_0_0_0181_fu_190 <= trunc_ln187_33_reg_1826;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_11_0_0_0184_fu_194 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_28;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_11_0_0_0184_fu_194 <= trunc_ln187_34_reg_1832;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_12_0_0_0187_fu_198 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_27;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_12_0_0_0187_fu_198 <= trunc_ln187_35_reg_1838;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_13_0_0_0190_fu_202 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_26;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_13_0_0_0190_fu_202 <= trunc_ln187_36_reg_1844;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_14_0_0_0193_fu_206 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_25;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_14_0_0_0193_fu_206 <= trunc_ln187_s_reg_1760;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_15_0_0_0196_fu_210 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_24;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_15_0_0_0196_fu_210 <= trunc_ln187_23_reg_1766;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_1_0_0_0154_fu_154 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_38;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_1_0_0_0154_fu_154 <= trunc_ln187_24_reg_1772;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_2_0_0_0157_fu_158 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_37;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_2_0_0_0157_fu_158 <= trunc_ln187_25_reg_1778;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_3_0_0_0160_fu_162 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_36;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_3_0_0_0160_fu_162 <= trunc_ln187_26_reg_1784;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_4_0_0_0163_fu_166 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_35;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_4_0_0_0163_fu_166 <= trunc_ln187_27_reg_1790;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_5_0_0_0166_fu_170 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_34;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_5_0_0_0166_fu_170 <= trunc_ln187_28_reg_1796;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_6_0_0_0169_fu_174 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_33;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_6_0_0_0169_fu_174 <= trunc_ln187_29_reg_1802;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_7_0_0_0172_fu_178 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_32;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_7_0_0_0172_fu_178 <= trunc_ln187_30_reg_1808;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_8_0_0_0175_fu_182 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_31;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_8_0_0_0175_fu_182 <= trunc_ln187_31_reg_1814;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_9_0_0_0178_fu_186 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_30;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_9_0_0_0178_fu_186 <= trunc_ln187_32_reg_1820;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln185_reg_1741 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln145_reg_1850 <= and_ln145_fu_653_p2;
        trunc_ln187_23_reg_1766 <= {{layer8_out_dout[95:90]}};
        trunc_ln187_24_reg_1772 <= {{layer8_out_dout[11:6]}};
        trunc_ln187_25_reg_1778 <= {{layer8_out_dout[17:12]}};
        trunc_ln187_26_reg_1784 <= {{layer8_out_dout[23:18]}};
        trunc_ln187_27_reg_1790 <= {{layer8_out_dout[29:24]}};
        trunc_ln187_28_reg_1796 <= {{layer8_out_dout[35:30]}};
        trunc_ln187_29_reg_1802 <= {{layer8_out_dout[41:36]}};
        trunc_ln187_30_reg_1808 <= {{layer8_out_dout[47:42]}};
        trunc_ln187_31_reg_1814 <= {{layer8_out_dout[53:48]}};
        trunc_ln187_32_reg_1820 <= {{layer8_out_dout[59:54]}};
        trunc_ln187_33_reg_1826 <= {{layer8_out_dout[65:60]}};
        trunc_ln187_34_reg_1832 <= {{layer8_out_dout[71:66]}};
        trunc_ln187_35_reg_1838 <= {{layer8_out_dout[77:72]}};
        trunc_ln187_36_reg_1844 <= {{layer8_out_dout[83:78]}};
        trunc_ln187_reg_1754 <= trunc_ln187_fu_489_p1;
        trunc_ln187_s_reg_1760 <= {{layer8_out_dout[89:84]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln185_fu_438_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln145_2_reg_1745 <= icmp_ln145_2_fu_454_p2;
        icmp_ln165_reg_1750 <= icmp_ln165_fu_466_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln185_reg_1741 <= icmp_ln185_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_24 <= p_0_15_0_0_0196_fu_210;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_25 <= p_0_14_0_0_0193_fu_206;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_26 <= p_0_13_0_0_0190_fu_202;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_27 <= p_0_12_0_0_0187_fu_198;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_28 <= p_0_11_0_0_0184_fu_194;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_29 <= p_0_10_0_0_0181_fu_190;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_30 <= p_0_9_0_0_0178_fu_186;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_31 <= p_0_8_0_0_0175_fu_182;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_32 <= p_0_7_0_0_0172_fu_178;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_33 <= p_0_6_0_0_0169_fu_174;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_34 <= p_0_5_0_0_0166_fu_170;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_35 <= p_0_4_0_0_0163_fu_166;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_36 <= p_0_3_0_0_0160_fu_162;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_37 <= p_0_2_0_0_0157_fu_158;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_38 <= p_0_1_0_0_0154_fu_154;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_39 <= p_0_0_0_0_0151_fu_150;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sX_1 <= ap_phi_mux_storemerge_phi_fu_231_p4;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((icmp_ln185_fu_438_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln185_reg_1741 == 1'd0) & (icmp_ln165_reg_1750 == 1'd0))) begin
        ap_phi_mux_storemerge_phi_fu_231_p4 = add_ln172_fu_666_p2;
    end else begin
        ap_phi_mux_storemerge_phi_fu_231_p4 = ap_phi_reg_pp0_iter1_storemerge_reg_227;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln185_reg_1741 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer8_out_blk_n = layer8_out_empty_n;
    end else begin
        layer8_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln185_reg_1741 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer8_out_read = 1'b1;
    end else begin
        layer8_out_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln145_reg_1850) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        layer9_out_blk_n = layer9_out_full_n;
    end else begin
        layer9_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln145_reg_1850) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer9_out_write = 1'b1;
    end else begin
        layer9_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln185_fu_438_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((icmp_ln185_fu_438_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln165_fu_460_p2 = (pX_1 + 32'd1);

assign add_ln172_fu_666_p2 = (sX_1 + select_ln172_fu_658_p3);

assign and_ln145_fu_653_p2 = (icmp_ln145_fu_647_p2 & icmp_ln145_2_reg_1745);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'd1 == and_ln145_reg_1850) & (ap_enable_reg_pp0_iter2 == 1'b1) & (layer9_out_full_n == 1'b0)) | ((icmp_ln185_reg_1741 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (layer8_out_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'd1 == and_ln145_reg_1850) & (ap_enable_reg_pp0_iter2 == 1'b1) & (layer9_out_full_n == 1'b0)) | ((icmp_ln185_reg_1741 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (layer8_out_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'd1 == and_ln145_reg_1850) & (ap_enable_reg_pp0_iter2 == 1'b1) & (layer9_out_full_n == 1'b0)) | ((icmp_ln185_reg_1741 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (layer8_out_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln185_reg_1741 == 1'd0) & (layer8_out_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((1'd1 == and_ln145_reg_1850) & (layer9_out_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_187 = ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_257 = ((icmp_ln185_fu_438_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_storemerge_reg_227 = 'bx;

assign ap_ready = internal_ap_ready;

assign i_iw_4_fu_444_p2 = (i_iw_fu_146 + 3'd1);

assign icmp_ln145_2_fu_454_p2 = (($signed(pX_1) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln145_fu_647_p2 = ((sX_1 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln1651_24_fu_741_p2 = ((pool_window_V_49_fu_726_p3 < pool_window_V_50_fu_734_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_25_fu_788_p2 = ((pool_window_V_51_fu_773_p3 < pool_window_V_52_fu_781_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_26_fu_835_p2 = ((pool_window_V_53_fu_820_p3 < pool_window_V_54_fu_828_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_27_fu_882_p2 = ((pool_window_V_55_fu_867_p3 < pool_window_V_56_fu_875_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_28_fu_929_p2 = ((pool_window_V_57_fu_914_p3 < pool_window_V_58_fu_922_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_29_fu_976_p2 = ((pool_window_V_59_fu_961_p3 < pool_window_V_60_fu_969_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_30_fu_1023_p2 = ((pool_window_V_61_fu_1008_p3 < pool_window_V_62_fu_1016_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_31_fu_1070_p2 = ((pool_window_V_63_fu_1055_p3 < pool_window_V_64_fu_1063_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_32_fu_1117_p2 = ((pool_window_V_65_fu_1102_p3 < pool_window_V_66_fu_1110_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_33_fu_1164_p2 = ((pool_window_V_67_fu_1149_p3 < pool_window_V_68_fu_1157_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_34_fu_1211_p2 = ((pool_window_V_69_fu_1196_p3 < pool_window_V_70_fu_1204_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_35_fu_1258_p2 = ((pool_window_V_71_fu_1243_p3 < pool_window_V_72_fu_1251_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_36_fu_1305_p2 = ((pool_window_V_73_fu_1290_p3 < pool_window_V_74_fu_1298_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_37_fu_1352_p2 = ((pool_window_V_75_fu_1337_p3 < pool_window_V_76_fu_1345_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_38_fu_1399_p2 = ((pool_window_V_77_fu_1384_p3 < pool_window_V_78_fu_1392_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_fu_694_p2 = ((pool_window_V_fu_679_p3 < pool_window_V_48_fu_687_p3) ? 1'b1 : 1'b0);

assign icmp_ln165_fu_466_p2 = ((add_ln165_fu_460_p2 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_438_p2 = ((i_iw_fu_146 == 3'd4) ? 1'b1 : 1'b0);

assign layer9_out_din = or_ln161_s_fu_1419_p18;

assign or_ln161_s_fu_1419_p18 = {{{{{{{{{{{{{{{{{select_ln65_38_fu_1411_p3}, {1'd0}}, {zext_ln837_28_fu_1380_p1}}, {zext_ln837_27_fu_1333_p1}}, {zext_ln837_26_fu_1286_p1}}, {zext_ln837_25_fu_1239_p1}}, {zext_ln837_24_fu_1192_p1}}, {zext_ln837_23_fu_1145_p1}}, {zext_ln837_22_fu_1098_p1}}, {zext_ln837_21_fu_1051_p1}}, {zext_ln837_20_fu_1004_p1}}, {zext_ln837_19_fu_957_p1}}, {zext_ln837_fu_910_p1}}, {zext_ln137_6_fu_863_p1}}, {zext_ln137_5_fu_816_p1}}, {zext_ln137_4_fu_769_p1}}, {zext_ln137_fu_722_p1}};

assign pool_window_V_48_fu_687_p3 = {{trunc_ln187_reg_1754}, {3'd0}};

assign pool_window_V_49_fu_726_p3 = {{p_0_1_0_0_0154_fu_154}, {3'd0}};

assign pool_window_V_50_fu_734_p3 = {{trunc_ln187_24_reg_1772}, {3'd0}};

assign pool_window_V_51_fu_773_p3 = {{p_0_2_0_0_0157_fu_158}, {3'd0}};

assign pool_window_V_52_fu_781_p3 = {{trunc_ln187_25_reg_1778}, {3'd0}};

assign pool_window_V_53_fu_820_p3 = {{p_0_3_0_0_0160_fu_162}, {3'd0}};

assign pool_window_V_54_fu_828_p3 = {{trunc_ln187_26_reg_1784}, {3'd0}};

assign pool_window_V_55_fu_867_p3 = {{p_0_4_0_0_0163_fu_166}, {3'd0}};

assign pool_window_V_56_fu_875_p3 = {{trunc_ln187_27_reg_1790}, {3'd0}};

assign pool_window_V_57_fu_914_p3 = {{p_0_5_0_0_0166_fu_170}, {3'd0}};

assign pool_window_V_58_fu_922_p3 = {{trunc_ln187_28_reg_1796}, {3'd0}};

assign pool_window_V_59_fu_961_p3 = {{p_0_6_0_0_0169_fu_174}, {3'd0}};

assign pool_window_V_60_fu_969_p3 = {{trunc_ln187_29_reg_1802}, {3'd0}};

assign pool_window_V_61_fu_1008_p3 = {{p_0_7_0_0_0172_fu_178}, {3'd0}};

assign pool_window_V_62_fu_1016_p3 = {{trunc_ln187_30_reg_1808}, {3'd0}};

assign pool_window_V_63_fu_1055_p3 = {{p_0_8_0_0_0175_fu_182}, {3'd0}};

assign pool_window_V_64_fu_1063_p3 = {{trunc_ln187_31_reg_1814}, {3'd0}};

assign pool_window_V_65_fu_1102_p3 = {{p_0_9_0_0_0178_fu_186}, {3'd0}};

assign pool_window_V_66_fu_1110_p3 = {{trunc_ln187_32_reg_1820}, {3'd0}};

assign pool_window_V_67_fu_1149_p3 = {{p_0_10_0_0_0181_fu_190}, {3'd0}};

assign pool_window_V_68_fu_1157_p3 = {{trunc_ln187_33_reg_1826}, {3'd0}};

assign pool_window_V_69_fu_1196_p3 = {{p_0_11_0_0_0184_fu_194}, {3'd0}};

assign pool_window_V_70_fu_1204_p3 = {{trunc_ln187_34_reg_1832}, {3'd0}};

assign pool_window_V_71_fu_1243_p3 = {{p_0_12_0_0_0187_fu_198}, {3'd0}};

assign pool_window_V_72_fu_1251_p3 = {{trunc_ln187_35_reg_1838}, {3'd0}};

assign pool_window_V_73_fu_1290_p3 = {{p_0_13_0_0_0190_fu_202}, {3'd0}};

assign pool_window_V_74_fu_1298_p3 = {{trunc_ln187_36_reg_1844}, {3'd0}};

assign pool_window_V_75_fu_1337_p3 = {{p_0_14_0_0_0193_fu_206}, {3'd0}};

assign pool_window_V_76_fu_1345_p3 = {{trunc_ln187_s_reg_1760}, {3'd0}};

assign pool_window_V_77_fu_1384_p3 = {{p_0_15_0_0_0196_fu_210}, {3'd0}};

assign pool_window_V_78_fu_1392_p3 = {{trunc_ln187_23_reg_1766}, {3'd0}};

assign pool_window_V_fu_679_p3 = {{p_0_0_0_0_0151_fu_150}, {3'd0}};

assign res_pack_data_4_fu_761_p3 = {{select_ln65_24_fu_753_p3}, {1'd0}};

assign res_pack_data_5_fu_808_p3 = {{select_ln65_25_fu_800_p3}, {1'd0}};

assign res_pack_data_6_fu_855_p3 = {{select_ln65_26_fu_847_p3}, {1'd0}};

assign res_pack_data_fu_714_p3 = {{select_ln65_fu_706_p3}, {1'd0}};

assign select_ln172_fu_658_p3 = ((icmp_ln145_fu_647_p2[0:0] == 1'b1) ? 32'd4294967295 : 32'd1);

assign select_ln65_24_fu_753_p3 = ((xor_ln1651_24_fu_747_p2[0:0] == 1'b1) ? pool_window_V_49_fu_726_p3 : pool_window_V_50_fu_734_p3);

assign select_ln65_25_fu_800_p3 = ((xor_ln1651_25_fu_794_p2[0:0] == 1'b1) ? pool_window_V_51_fu_773_p3 : pool_window_V_52_fu_781_p3);

assign select_ln65_26_fu_847_p3 = ((xor_ln1651_26_fu_841_p2[0:0] == 1'b1) ? pool_window_V_53_fu_820_p3 : pool_window_V_54_fu_828_p3);

assign select_ln65_27_fu_894_p3 = ((xor_ln1651_27_fu_888_p2[0:0] == 1'b1) ? pool_window_V_55_fu_867_p3 : pool_window_V_56_fu_875_p3);

assign select_ln65_28_fu_941_p3 = ((xor_ln1651_28_fu_935_p2[0:0] == 1'b1) ? pool_window_V_57_fu_914_p3 : pool_window_V_58_fu_922_p3);

assign select_ln65_29_fu_988_p3 = ((xor_ln1651_29_fu_982_p2[0:0] == 1'b1) ? pool_window_V_59_fu_961_p3 : pool_window_V_60_fu_969_p3);

assign select_ln65_30_fu_1035_p3 = ((xor_ln1651_30_fu_1029_p2[0:0] == 1'b1) ? pool_window_V_61_fu_1008_p3 : pool_window_V_62_fu_1016_p3);

assign select_ln65_31_fu_1082_p3 = ((xor_ln1651_31_fu_1076_p2[0:0] == 1'b1) ? pool_window_V_63_fu_1055_p3 : pool_window_V_64_fu_1063_p3);

assign select_ln65_32_fu_1129_p3 = ((xor_ln1651_32_fu_1123_p2[0:0] == 1'b1) ? pool_window_V_65_fu_1102_p3 : pool_window_V_66_fu_1110_p3);

assign select_ln65_33_fu_1176_p3 = ((xor_ln1651_33_fu_1170_p2[0:0] == 1'b1) ? pool_window_V_67_fu_1149_p3 : pool_window_V_68_fu_1157_p3);

assign select_ln65_34_fu_1223_p3 = ((xor_ln1651_34_fu_1217_p2[0:0] == 1'b1) ? pool_window_V_69_fu_1196_p3 : pool_window_V_70_fu_1204_p3);

assign select_ln65_35_fu_1270_p3 = ((xor_ln1651_35_fu_1264_p2[0:0] == 1'b1) ? pool_window_V_71_fu_1243_p3 : pool_window_V_72_fu_1251_p3);

assign select_ln65_36_fu_1317_p3 = ((xor_ln1651_36_fu_1311_p2[0:0] == 1'b1) ? pool_window_V_73_fu_1290_p3 : pool_window_V_74_fu_1298_p3);

assign select_ln65_37_fu_1364_p3 = ((xor_ln1651_37_fu_1358_p2[0:0] == 1'b1) ? pool_window_V_75_fu_1337_p3 : pool_window_V_76_fu_1345_p3);

assign select_ln65_38_fu_1411_p3 = ((xor_ln1651_38_fu_1405_p2[0:0] == 1'b1) ? pool_window_V_77_fu_1384_p3 : pool_window_V_78_fu_1392_p3);

assign select_ln65_fu_706_p3 = ((xor_ln1651_fu_700_p2[0:0] == 1'b1) ? pool_window_V_fu_679_p3 : pool_window_V_48_fu_687_p3);

assign shl_ln841_18_fu_996_p3 = {{select_ln65_29_fu_988_p3}, {1'd0}};

assign shl_ln841_19_fu_1043_p3 = {{select_ln65_30_fu_1035_p3}, {1'd0}};

assign shl_ln841_20_fu_1090_p3 = {{select_ln65_31_fu_1082_p3}, {1'd0}};

assign shl_ln841_21_fu_1137_p3 = {{select_ln65_32_fu_1129_p3}, {1'd0}};

assign shl_ln841_22_fu_1184_p3 = {{select_ln65_33_fu_1176_p3}, {1'd0}};

assign shl_ln841_23_fu_1231_p3 = {{select_ln65_34_fu_1223_p3}, {1'd0}};

assign shl_ln841_24_fu_1278_p3 = {{select_ln65_35_fu_1270_p3}, {1'd0}};

assign shl_ln841_25_fu_1325_p3 = {{select_ln65_36_fu_1317_p3}, {1'd0}};

assign shl_ln841_26_fu_1372_p3 = {{select_ln65_37_fu_1364_p3}, {1'd0}};

assign shl_ln841_s_fu_949_p3 = {{select_ln65_28_fu_941_p3}, {1'd0}};

assign shl_ln_fu_902_p3 = {{select_ln65_27_fu_894_p3}, {1'd0}};

assign start_out = real_start;

assign trunc_ln187_fu_489_p1 = layer8_out_dout[5:0];

assign xor_ln1651_24_fu_747_p2 = (icmp_ln1651_24_fu_741_p2 ^ 1'd1);

assign xor_ln1651_25_fu_794_p2 = (icmp_ln1651_25_fu_788_p2 ^ 1'd1);

assign xor_ln1651_26_fu_841_p2 = (icmp_ln1651_26_fu_835_p2 ^ 1'd1);

assign xor_ln1651_27_fu_888_p2 = (icmp_ln1651_27_fu_882_p2 ^ 1'd1);

assign xor_ln1651_28_fu_935_p2 = (icmp_ln1651_28_fu_929_p2 ^ 1'd1);

assign xor_ln1651_29_fu_982_p2 = (icmp_ln1651_29_fu_976_p2 ^ 1'd1);

assign xor_ln1651_30_fu_1029_p2 = (icmp_ln1651_30_fu_1023_p2 ^ 1'd1);

assign xor_ln1651_31_fu_1076_p2 = (icmp_ln1651_31_fu_1070_p2 ^ 1'd1);

assign xor_ln1651_32_fu_1123_p2 = (icmp_ln1651_32_fu_1117_p2 ^ 1'd1);

assign xor_ln1651_33_fu_1170_p2 = (icmp_ln1651_33_fu_1164_p2 ^ 1'd1);

assign xor_ln1651_34_fu_1217_p2 = (icmp_ln1651_34_fu_1211_p2 ^ 1'd1);

assign xor_ln1651_35_fu_1264_p2 = (icmp_ln1651_35_fu_1258_p2 ^ 1'd1);

assign xor_ln1651_36_fu_1311_p2 = (icmp_ln1651_36_fu_1305_p2 ^ 1'd1);

assign xor_ln1651_37_fu_1358_p2 = (icmp_ln1651_37_fu_1352_p2 ^ 1'd1);

assign xor_ln1651_38_fu_1405_p2 = (icmp_ln1651_38_fu_1399_p2 ^ 1'd1);

assign xor_ln1651_fu_700_p2 = (icmp_ln1651_fu_694_p2 ^ 1'd1);

assign zext_ln137_4_fu_769_p1 = res_pack_data_4_fu_761_p3;

assign zext_ln137_5_fu_816_p1 = res_pack_data_5_fu_808_p3;

assign zext_ln137_6_fu_863_p1 = res_pack_data_6_fu_855_p3;

assign zext_ln137_fu_722_p1 = res_pack_data_fu_714_p3;

assign zext_ln837_19_fu_957_p1 = shl_ln841_s_fu_949_p3;

assign zext_ln837_20_fu_1004_p1 = shl_ln841_18_fu_996_p3;

assign zext_ln837_21_fu_1051_p1 = shl_ln841_19_fu_1043_p3;

assign zext_ln837_22_fu_1098_p1 = shl_ln841_20_fu_1090_p3;

assign zext_ln837_23_fu_1145_p1 = shl_ln841_21_fu_1137_p3;

assign zext_ln837_24_fu_1192_p1 = shl_ln841_22_fu_1184_p3;

assign zext_ln837_25_fu_1239_p1 = shl_ln841_23_fu_1231_p3;

assign zext_ln837_26_fu_1286_p1 = shl_ln841_24_fu_1278_p3;

assign zext_ln837_27_fu_1333_p1 = shl_ln841_25_fu_1325_p3;

assign zext_ln837_28_fu_1380_p1 = shl_ln841_26_fu_1372_p3;

assign zext_ln837_fu_910_p1 = shl_ln_fu_902_p3;

endmodule //alveo_hls4ml_pooling1d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config9_s
