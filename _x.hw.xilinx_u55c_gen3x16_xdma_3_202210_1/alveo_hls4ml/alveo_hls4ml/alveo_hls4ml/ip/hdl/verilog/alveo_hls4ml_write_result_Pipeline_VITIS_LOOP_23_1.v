// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module alveo_hls4ml_write_result_Pipeline_VITIS_LOOP_23_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RFIFONUM,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        sext_ln23,
        out_buf_address0,
        out_buf_ce0,
        out_buf_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [63:0] m_axi_gmem1_AWADDR;
output  [0:0] m_axi_gmem1_AWID;
output  [31:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [0:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [511:0] m_axi_gmem1_WDATA;
output  [63:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [0:0] m_axi_gmem1_WID;
output  [0:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [63:0] m_axi_gmem1_ARADDR;
output  [0:0] m_axi_gmem1_ARID;
output  [31:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [0:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [511:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [0:0] m_axi_gmem1_RID;
input  [8:0] m_axi_gmem1_RFIFONUM;
input  [0:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [0:0] m_axi_gmem1_BID;
input  [0:0] m_axi_gmem1_BUSER;
input  [57:0] sext_ln23;
output  [12:0] out_buf_address0;
output   out_buf_ce0;
input  [14:0] out_buf_q0;

reg ap_idle;
reg m_axi_gmem1_WVALID;
reg out_buf_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] icmp_ln27_reg_233;
reg   [0:0] icmp_ln27_reg_233_pp0_iter1_reg;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln23_fu_116_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem1_blk_n_W;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln23_reg_224;
wire   [0:0] icmp_ln27_fu_137_p2;
reg   [14:0] out_buf_load_reg_243;
reg    ap_condition_exit_pp0_iter1_stage0;
wire   [63:0] zext_ln23_fu_128_p1;
wire    ap_block_pp0_stage0_01001;
reg   [494:0] phi_ln27_fu_64;
wire   [494:0] select_ln27_fu_192_p3;
wire    ap_loop_init;
reg   [13:0] i_fu_68;
wire   [13:0] add_ln23_fu_122_p2;
reg   [13:0] ap_sig_allocacmp_i_1;
wire   [4:0] trunc_ln23_fu_133_p1;
wire   [510:0] or_ln_fu_156_p4;
wire   [478:0] tmp_fu_173_p4;
wire   [494:0] tmp_1_fu_183_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

alveo_hls4ml_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln23_fu_116_p2 == 1'd0))) begin
            i_fu_68 <= add_ln23_fu_122_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_68 <= 14'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
                        phi_ln27_fu_64[0] <= 1'b0;
            phi_ln27_fu_64[1] <= 1'b0;
            phi_ln27_fu_64[2] <= 1'b0;
            phi_ln27_fu_64[3] <= 1'b0;
            phi_ln27_fu_64[4] <= 1'b0;
            phi_ln27_fu_64[5] <= 1'b0;
            phi_ln27_fu_64[6] <= 1'b0;
            phi_ln27_fu_64[7] <= 1'b0;
            phi_ln27_fu_64[8] <= 1'b0;
            phi_ln27_fu_64[9] <= 1'b0;
            phi_ln27_fu_64[10] <= 1'b0;
            phi_ln27_fu_64[11] <= 1'b0;
            phi_ln27_fu_64[12] <= 1'b0;
            phi_ln27_fu_64[13] <= 1'b0;
            phi_ln27_fu_64[14] <= 1'b0;
            phi_ln27_fu_64[16] <= 1'b0;
            phi_ln27_fu_64[17] <= 1'b0;
            phi_ln27_fu_64[18] <= 1'b0;
            phi_ln27_fu_64[19] <= 1'b0;
            phi_ln27_fu_64[20] <= 1'b0;
            phi_ln27_fu_64[21] <= 1'b0;
            phi_ln27_fu_64[22] <= 1'b0;
            phi_ln27_fu_64[23] <= 1'b0;
            phi_ln27_fu_64[24] <= 1'b0;
            phi_ln27_fu_64[25] <= 1'b0;
            phi_ln27_fu_64[26] <= 1'b0;
            phi_ln27_fu_64[27] <= 1'b0;
            phi_ln27_fu_64[28] <= 1'b0;
            phi_ln27_fu_64[29] <= 1'b0;
            phi_ln27_fu_64[30] <= 1'b0;
            phi_ln27_fu_64[32] <= 1'b0;
            phi_ln27_fu_64[33] <= 1'b0;
            phi_ln27_fu_64[34] <= 1'b0;
            phi_ln27_fu_64[35] <= 1'b0;
            phi_ln27_fu_64[36] <= 1'b0;
            phi_ln27_fu_64[37] <= 1'b0;
            phi_ln27_fu_64[38] <= 1'b0;
            phi_ln27_fu_64[39] <= 1'b0;
            phi_ln27_fu_64[40] <= 1'b0;
            phi_ln27_fu_64[41] <= 1'b0;
            phi_ln27_fu_64[42] <= 1'b0;
            phi_ln27_fu_64[43] <= 1'b0;
            phi_ln27_fu_64[44] <= 1'b0;
            phi_ln27_fu_64[45] <= 1'b0;
            phi_ln27_fu_64[46] <= 1'b0;
            phi_ln27_fu_64[48] <= 1'b0;
            phi_ln27_fu_64[49] <= 1'b0;
            phi_ln27_fu_64[50] <= 1'b0;
            phi_ln27_fu_64[51] <= 1'b0;
            phi_ln27_fu_64[52] <= 1'b0;
            phi_ln27_fu_64[53] <= 1'b0;
            phi_ln27_fu_64[54] <= 1'b0;
            phi_ln27_fu_64[55] <= 1'b0;
            phi_ln27_fu_64[56] <= 1'b0;
            phi_ln27_fu_64[57] <= 1'b0;
            phi_ln27_fu_64[58] <= 1'b0;
            phi_ln27_fu_64[59] <= 1'b0;
            phi_ln27_fu_64[60] <= 1'b0;
            phi_ln27_fu_64[61] <= 1'b0;
            phi_ln27_fu_64[62] <= 1'b0;
            phi_ln27_fu_64[64] <= 1'b0;
            phi_ln27_fu_64[65] <= 1'b0;
            phi_ln27_fu_64[66] <= 1'b0;
            phi_ln27_fu_64[67] <= 1'b0;
            phi_ln27_fu_64[68] <= 1'b0;
            phi_ln27_fu_64[69] <= 1'b0;
            phi_ln27_fu_64[70] <= 1'b0;
            phi_ln27_fu_64[71] <= 1'b0;
            phi_ln27_fu_64[72] <= 1'b0;
            phi_ln27_fu_64[73] <= 1'b0;
            phi_ln27_fu_64[74] <= 1'b0;
            phi_ln27_fu_64[75] <= 1'b0;
            phi_ln27_fu_64[76] <= 1'b0;
            phi_ln27_fu_64[77] <= 1'b0;
            phi_ln27_fu_64[78] <= 1'b0;
            phi_ln27_fu_64[80] <= 1'b0;
            phi_ln27_fu_64[81] <= 1'b0;
            phi_ln27_fu_64[82] <= 1'b0;
            phi_ln27_fu_64[83] <= 1'b0;
            phi_ln27_fu_64[84] <= 1'b0;
            phi_ln27_fu_64[85] <= 1'b0;
            phi_ln27_fu_64[86] <= 1'b0;
            phi_ln27_fu_64[87] <= 1'b0;
            phi_ln27_fu_64[88] <= 1'b0;
            phi_ln27_fu_64[89] <= 1'b0;
            phi_ln27_fu_64[90] <= 1'b0;
            phi_ln27_fu_64[91] <= 1'b0;
            phi_ln27_fu_64[92] <= 1'b0;
            phi_ln27_fu_64[93] <= 1'b0;
            phi_ln27_fu_64[94] <= 1'b0;
            phi_ln27_fu_64[96] <= 1'b0;
            phi_ln27_fu_64[97] <= 1'b0;
            phi_ln27_fu_64[98] <= 1'b0;
            phi_ln27_fu_64[99] <= 1'b0;
            phi_ln27_fu_64[100] <= 1'b0;
            phi_ln27_fu_64[101] <= 1'b0;
            phi_ln27_fu_64[102] <= 1'b0;
            phi_ln27_fu_64[103] <= 1'b0;
            phi_ln27_fu_64[104] <= 1'b0;
            phi_ln27_fu_64[105] <= 1'b0;
            phi_ln27_fu_64[106] <= 1'b0;
            phi_ln27_fu_64[107] <= 1'b0;
            phi_ln27_fu_64[108] <= 1'b0;
            phi_ln27_fu_64[109] <= 1'b0;
            phi_ln27_fu_64[110] <= 1'b0;
            phi_ln27_fu_64[112] <= 1'b0;
            phi_ln27_fu_64[113] <= 1'b0;
            phi_ln27_fu_64[114] <= 1'b0;
            phi_ln27_fu_64[115] <= 1'b0;
            phi_ln27_fu_64[116] <= 1'b0;
            phi_ln27_fu_64[117] <= 1'b0;
            phi_ln27_fu_64[118] <= 1'b0;
            phi_ln27_fu_64[119] <= 1'b0;
            phi_ln27_fu_64[120] <= 1'b0;
            phi_ln27_fu_64[121] <= 1'b0;
            phi_ln27_fu_64[122] <= 1'b0;
            phi_ln27_fu_64[123] <= 1'b0;
            phi_ln27_fu_64[124] <= 1'b0;
            phi_ln27_fu_64[125] <= 1'b0;
            phi_ln27_fu_64[126] <= 1'b0;
            phi_ln27_fu_64[128] <= 1'b0;
            phi_ln27_fu_64[129] <= 1'b0;
            phi_ln27_fu_64[130] <= 1'b0;
            phi_ln27_fu_64[131] <= 1'b0;
            phi_ln27_fu_64[132] <= 1'b0;
            phi_ln27_fu_64[133] <= 1'b0;
            phi_ln27_fu_64[134] <= 1'b0;
            phi_ln27_fu_64[135] <= 1'b0;
            phi_ln27_fu_64[136] <= 1'b0;
            phi_ln27_fu_64[137] <= 1'b0;
            phi_ln27_fu_64[138] <= 1'b0;
            phi_ln27_fu_64[139] <= 1'b0;
            phi_ln27_fu_64[140] <= 1'b0;
            phi_ln27_fu_64[141] <= 1'b0;
            phi_ln27_fu_64[142] <= 1'b0;
            phi_ln27_fu_64[144] <= 1'b0;
            phi_ln27_fu_64[145] <= 1'b0;
            phi_ln27_fu_64[146] <= 1'b0;
            phi_ln27_fu_64[147] <= 1'b0;
            phi_ln27_fu_64[148] <= 1'b0;
            phi_ln27_fu_64[149] <= 1'b0;
            phi_ln27_fu_64[150] <= 1'b0;
            phi_ln27_fu_64[151] <= 1'b0;
            phi_ln27_fu_64[152] <= 1'b0;
            phi_ln27_fu_64[153] <= 1'b0;
            phi_ln27_fu_64[154] <= 1'b0;
            phi_ln27_fu_64[155] <= 1'b0;
            phi_ln27_fu_64[156] <= 1'b0;
            phi_ln27_fu_64[157] <= 1'b0;
            phi_ln27_fu_64[158] <= 1'b0;
            phi_ln27_fu_64[160] <= 1'b0;
            phi_ln27_fu_64[161] <= 1'b0;
            phi_ln27_fu_64[162] <= 1'b0;
            phi_ln27_fu_64[163] <= 1'b0;
            phi_ln27_fu_64[164] <= 1'b0;
            phi_ln27_fu_64[165] <= 1'b0;
            phi_ln27_fu_64[166] <= 1'b0;
            phi_ln27_fu_64[167] <= 1'b0;
            phi_ln27_fu_64[168] <= 1'b0;
            phi_ln27_fu_64[169] <= 1'b0;
            phi_ln27_fu_64[170] <= 1'b0;
            phi_ln27_fu_64[171] <= 1'b0;
            phi_ln27_fu_64[172] <= 1'b0;
            phi_ln27_fu_64[173] <= 1'b0;
            phi_ln27_fu_64[174] <= 1'b0;
            phi_ln27_fu_64[176] <= 1'b0;
            phi_ln27_fu_64[177] <= 1'b0;
            phi_ln27_fu_64[178] <= 1'b0;
            phi_ln27_fu_64[179] <= 1'b0;
            phi_ln27_fu_64[180] <= 1'b0;
            phi_ln27_fu_64[181] <= 1'b0;
            phi_ln27_fu_64[182] <= 1'b0;
            phi_ln27_fu_64[183] <= 1'b0;
            phi_ln27_fu_64[184] <= 1'b0;
            phi_ln27_fu_64[185] <= 1'b0;
            phi_ln27_fu_64[186] <= 1'b0;
            phi_ln27_fu_64[187] <= 1'b0;
            phi_ln27_fu_64[188] <= 1'b0;
            phi_ln27_fu_64[189] <= 1'b0;
            phi_ln27_fu_64[190] <= 1'b0;
            phi_ln27_fu_64[192] <= 1'b0;
            phi_ln27_fu_64[193] <= 1'b0;
            phi_ln27_fu_64[194] <= 1'b0;
            phi_ln27_fu_64[195] <= 1'b0;
            phi_ln27_fu_64[196] <= 1'b0;
            phi_ln27_fu_64[197] <= 1'b0;
            phi_ln27_fu_64[198] <= 1'b0;
            phi_ln27_fu_64[199] <= 1'b0;
            phi_ln27_fu_64[200] <= 1'b0;
            phi_ln27_fu_64[201] <= 1'b0;
            phi_ln27_fu_64[202] <= 1'b0;
            phi_ln27_fu_64[203] <= 1'b0;
            phi_ln27_fu_64[204] <= 1'b0;
            phi_ln27_fu_64[205] <= 1'b0;
            phi_ln27_fu_64[206] <= 1'b0;
            phi_ln27_fu_64[208] <= 1'b0;
            phi_ln27_fu_64[209] <= 1'b0;
            phi_ln27_fu_64[210] <= 1'b0;
            phi_ln27_fu_64[211] <= 1'b0;
            phi_ln27_fu_64[212] <= 1'b0;
            phi_ln27_fu_64[213] <= 1'b0;
            phi_ln27_fu_64[214] <= 1'b0;
            phi_ln27_fu_64[215] <= 1'b0;
            phi_ln27_fu_64[216] <= 1'b0;
            phi_ln27_fu_64[217] <= 1'b0;
            phi_ln27_fu_64[218] <= 1'b0;
            phi_ln27_fu_64[219] <= 1'b0;
            phi_ln27_fu_64[220] <= 1'b0;
            phi_ln27_fu_64[221] <= 1'b0;
            phi_ln27_fu_64[222] <= 1'b0;
            phi_ln27_fu_64[224] <= 1'b0;
            phi_ln27_fu_64[225] <= 1'b0;
            phi_ln27_fu_64[226] <= 1'b0;
            phi_ln27_fu_64[227] <= 1'b0;
            phi_ln27_fu_64[228] <= 1'b0;
            phi_ln27_fu_64[229] <= 1'b0;
            phi_ln27_fu_64[230] <= 1'b0;
            phi_ln27_fu_64[231] <= 1'b0;
            phi_ln27_fu_64[232] <= 1'b0;
            phi_ln27_fu_64[233] <= 1'b0;
            phi_ln27_fu_64[234] <= 1'b0;
            phi_ln27_fu_64[235] <= 1'b0;
            phi_ln27_fu_64[236] <= 1'b0;
            phi_ln27_fu_64[237] <= 1'b0;
            phi_ln27_fu_64[238] <= 1'b0;
            phi_ln27_fu_64[240] <= 1'b0;
            phi_ln27_fu_64[241] <= 1'b0;
            phi_ln27_fu_64[242] <= 1'b0;
            phi_ln27_fu_64[243] <= 1'b0;
            phi_ln27_fu_64[244] <= 1'b0;
            phi_ln27_fu_64[245] <= 1'b0;
            phi_ln27_fu_64[246] <= 1'b0;
            phi_ln27_fu_64[247] <= 1'b0;
            phi_ln27_fu_64[248] <= 1'b0;
            phi_ln27_fu_64[249] <= 1'b0;
            phi_ln27_fu_64[250] <= 1'b0;
            phi_ln27_fu_64[251] <= 1'b0;
            phi_ln27_fu_64[252] <= 1'b0;
            phi_ln27_fu_64[253] <= 1'b0;
            phi_ln27_fu_64[254] <= 1'b0;
            phi_ln27_fu_64[256] <= 1'b0;
            phi_ln27_fu_64[257] <= 1'b0;
            phi_ln27_fu_64[258] <= 1'b0;
            phi_ln27_fu_64[259] <= 1'b0;
            phi_ln27_fu_64[260] <= 1'b0;
            phi_ln27_fu_64[261] <= 1'b0;
            phi_ln27_fu_64[262] <= 1'b0;
            phi_ln27_fu_64[263] <= 1'b0;
            phi_ln27_fu_64[264] <= 1'b0;
            phi_ln27_fu_64[265] <= 1'b0;
            phi_ln27_fu_64[266] <= 1'b0;
            phi_ln27_fu_64[267] <= 1'b0;
            phi_ln27_fu_64[268] <= 1'b0;
            phi_ln27_fu_64[269] <= 1'b0;
            phi_ln27_fu_64[270] <= 1'b0;
            phi_ln27_fu_64[272] <= 1'b0;
            phi_ln27_fu_64[273] <= 1'b0;
            phi_ln27_fu_64[274] <= 1'b0;
            phi_ln27_fu_64[275] <= 1'b0;
            phi_ln27_fu_64[276] <= 1'b0;
            phi_ln27_fu_64[277] <= 1'b0;
            phi_ln27_fu_64[278] <= 1'b0;
            phi_ln27_fu_64[279] <= 1'b0;
            phi_ln27_fu_64[280] <= 1'b0;
            phi_ln27_fu_64[281] <= 1'b0;
            phi_ln27_fu_64[282] <= 1'b0;
            phi_ln27_fu_64[283] <= 1'b0;
            phi_ln27_fu_64[284] <= 1'b0;
            phi_ln27_fu_64[285] <= 1'b0;
            phi_ln27_fu_64[286] <= 1'b0;
            phi_ln27_fu_64[288] <= 1'b0;
            phi_ln27_fu_64[289] <= 1'b0;
            phi_ln27_fu_64[290] <= 1'b0;
            phi_ln27_fu_64[291] <= 1'b0;
            phi_ln27_fu_64[292] <= 1'b0;
            phi_ln27_fu_64[293] <= 1'b0;
            phi_ln27_fu_64[294] <= 1'b0;
            phi_ln27_fu_64[295] <= 1'b0;
            phi_ln27_fu_64[296] <= 1'b0;
            phi_ln27_fu_64[297] <= 1'b0;
            phi_ln27_fu_64[298] <= 1'b0;
            phi_ln27_fu_64[299] <= 1'b0;
            phi_ln27_fu_64[300] <= 1'b0;
            phi_ln27_fu_64[301] <= 1'b0;
            phi_ln27_fu_64[302] <= 1'b0;
            phi_ln27_fu_64[304] <= 1'b0;
            phi_ln27_fu_64[305] <= 1'b0;
            phi_ln27_fu_64[306] <= 1'b0;
            phi_ln27_fu_64[307] <= 1'b0;
            phi_ln27_fu_64[308] <= 1'b0;
            phi_ln27_fu_64[309] <= 1'b0;
            phi_ln27_fu_64[310] <= 1'b0;
            phi_ln27_fu_64[311] <= 1'b0;
            phi_ln27_fu_64[312] <= 1'b0;
            phi_ln27_fu_64[313] <= 1'b0;
            phi_ln27_fu_64[314] <= 1'b0;
            phi_ln27_fu_64[315] <= 1'b0;
            phi_ln27_fu_64[316] <= 1'b0;
            phi_ln27_fu_64[317] <= 1'b0;
            phi_ln27_fu_64[318] <= 1'b0;
            phi_ln27_fu_64[320] <= 1'b0;
            phi_ln27_fu_64[321] <= 1'b0;
            phi_ln27_fu_64[322] <= 1'b0;
            phi_ln27_fu_64[323] <= 1'b0;
            phi_ln27_fu_64[324] <= 1'b0;
            phi_ln27_fu_64[325] <= 1'b0;
            phi_ln27_fu_64[326] <= 1'b0;
            phi_ln27_fu_64[327] <= 1'b0;
            phi_ln27_fu_64[328] <= 1'b0;
            phi_ln27_fu_64[329] <= 1'b0;
            phi_ln27_fu_64[330] <= 1'b0;
            phi_ln27_fu_64[331] <= 1'b0;
            phi_ln27_fu_64[332] <= 1'b0;
            phi_ln27_fu_64[333] <= 1'b0;
            phi_ln27_fu_64[334] <= 1'b0;
            phi_ln27_fu_64[336] <= 1'b0;
            phi_ln27_fu_64[337] <= 1'b0;
            phi_ln27_fu_64[338] <= 1'b0;
            phi_ln27_fu_64[339] <= 1'b0;
            phi_ln27_fu_64[340] <= 1'b0;
            phi_ln27_fu_64[341] <= 1'b0;
            phi_ln27_fu_64[342] <= 1'b0;
            phi_ln27_fu_64[343] <= 1'b0;
            phi_ln27_fu_64[344] <= 1'b0;
            phi_ln27_fu_64[345] <= 1'b0;
            phi_ln27_fu_64[346] <= 1'b0;
            phi_ln27_fu_64[347] <= 1'b0;
            phi_ln27_fu_64[348] <= 1'b0;
            phi_ln27_fu_64[349] <= 1'b0;
            phi_ln27_fu_64[350] <= 1'b0;
            phi_ln27_fu_64[352] <= 1'b0;
            phi_ln27_fu_64[353] <= 1'b0;
            phi_ln27_fu_64[354] <= 1'b0;
            phi_ln27_fu_64[355] <= 1'b0;
            phi_ln27_fu_64[356] <= 1'b0;
            phi_ln27_fu_64[357] <= 1'b0;
            phi_ln27_fu_64[358] <= 1'b0;
            phi_ln27_fu_64[359] <= 1'b0;
            phi_ln27_fu_64[360] <= 1'b0;
            phi_ln27_fu_64[361] <= 1'b0;
            phi_ln27_fu_64[362] <= 1'b0;
            phi_ln27_fu_64[363] <= 1'b0;
            phi_ln27_fu_64[364] <= 1'b0;
            phi_ln27_fu_64[365] <= 1'b0;
            phi_ln27_fu_64[366] <= 1'b0;
            phi_ln27_fu_64[368] <= 1'b0;
            phi_ln27_fu_64[369] <= 1'b0;
            phi_ln27_fu_64[370] <= 1'b0;
            phi_ln27_fu_64[371] <= 1'b0;
            phi_ln27_fu_64[372] <= 1'b0;
            phi_ln27_fu_64[373] <= 1'b0;
            phi_ln27_fu_64[374] <= 1'b0;
            phi_ln27_fu_64[375] <= 1'b0;
            phi_ln27_fu_64[376] <= 1'b0;
            phi_ln27_fu_64[377] <= 1'b0;
            phi_ln27_fu_64[378] <= 1'b0;
            phi_ln27_fu_64[379] <= 1'b0;
            phi_ln27_fu_64[380] <= 1'b0;
            phi_ln27_fu_64[381] <= 1'b0;
            phi_ln27_fu_64[382] <= 1'b0;
            phi_ln27_fu_64[384] <= 1'b0;
            phi_ln27_fu_64[385] <= 1'b0;
            phi_ln27_fu_64[386] <= 1'b0;
            phi_ln27_fu_64[387] <= 1'b0;
            phi_ln27_fu_64[388] <= 1'b0;
            phi_ln27_fu_64[389] <= 1'b0;
            phi_ln27_fu_64[390] <= 1'b0;
            phi_ln27_fu_64[391] <= 1'b0;
            phi_ln27_fu_64[392] <= 1'b0;
            phi_ln27_fu_64[393] <= 1'b0;
            phi_ln27_fu_64[394] <= 1'b0;
            phi_ln27_fu_64[395] <= 1'b0;
            phi_ln27_fu_64[396] <= 1'b0;
            phi_ln27_fu_64[397] <= 1'b0;
            phi_ln27_fu_64[398] <= 1'b0;
            phi_ln27_fu_64[400] <= 1'b0;
            phi_ln27_fu_64[401] <= 1'b0;
            phi_ln27_fu_64[402] <= 1'b0;
            phi_ln27_fu_64[403] <= 1'b0;
            phi_ln27_fu_64[404] <= 1'b0;
            phi_ln27_fu_64[405] <= 1'b0;
            phi_ln27_fu_64[406] <= 1'b0;
            phi_ln27_fu_64[407] <= 1'b0;
            phi_ln27_fu_64[408] <= 1'b0;
            phi_ln27_fu_64[409] <= 1'b0;
            phi_ln27_fu_64[410] <= 1'b0;
            phi_ln27_fu_64[411] <= 1'b0;
            phi_ln27_fu_64[412] <= 1'b0;
            phi_ln27_fu_64[413] <= 1'b0;
            phi_ln27_fu_64[414] <= 1'b0;
            phi_ln27_fu_64[416] <= 1'b0;
            phi_ln27_fu_64[417] <= 1'b0;
            phi_ln27_fu_64[418] <= 1'b0;
            phi_ln27_fu_64[419] <= 1'b0;
            phi_ln27_fu_64[420] <= 1'b0;
            phi_ln27_fu_64[421] <= 1'b0;
            phi_ln27_fu_64[422] <= 1'b0;
            phi_ln27_fu_64[423] <= 1'b0;
            phi_ln27_fu_64[424] <= 1'b0;
            phi_ln27_fu_64[425] <= 1'b0;
            phi_ln27_fu_64[426] <= 1'b0;
            phi_ln27_fu_64[427] <= 1'b0;
            phi_ln27_fu_64[428] <= 1'b0;
            phi_ln27_fu_64[429] <= 1'b0;
            phi_ln27_fu_64[430] <= 1'b0;
            phi_ln27_fu_64[432] <= 1'b0;
            phi_ln27_fu_64[433] <= 1'b0;
            phi_ln27_fu_64[434] <= 1'b0;
            phi_ln27_fu_64[435] <= 1'b0;
            phi_ln27_fu_64[436] <= 1'b0;
            phi_ln27_fu_64[437] <= 1'b0;
            phi_ln27_fu_64[438] <= 1'b0;
            phi_ln27_fu_64[439] <= 1'b0;
            phi_ln27_fu_64[440] <= 1'b0;
            phi_ln27_fu_64[441] <= 1'b0;
            phi_ln27_fu_64[442] <= 1'b0;
            phi_ln27_fu_64[443] <= 1'b0;
            phi_ln27_fu_64[444] <= 1'b0;
            phi_ln27_fu_64[445] <= 1'b0;
            phi_ln27_fu_64[446] <= 1'b0;
            phi_ln27_fu_64[448] <= 1'b0;
            phi_ln27_fu_64[449] <= 1'b0;
            phi_ln27_fu_64[450] <= 1'b0;
            phi_ln27_fu_64[451] <= 1'b0;
            phi_ln27_fu_64[452] <= 1'b0;
            phi_ln27_fu_64[453] <= 1'b0;
            phi_ln27_fu_64[454] <= 1'b0;
            phi_ln27_fu_64[455] <= 1'b0;
            phi_ln27_fu_64[456] <= 1'b0;
            phi_ln27_fu_64[457] <= 1'b0;
            phi_ln27_fu_64[458] <= 1'b0;
            phi_ln27_fu_64[459] <= 1'b0;
            phi_ln27_fu_64[460] <= 1'b0;
            phi_ln27_fu_64[461] <= 1'b0;
            phi_ln27_fu_64[462] <= 1'b0;
            phi_ln27_fu_64[464] <= 1'b0;
            phi_ln27_fu_64[465] <= 1'b0;
            phi_ln27_fu_64[466] <= 1'b0;
            phi_ln27_fu_64[467] <= 1'b0;
            phi_ln27_fu_64[468] <= 1'b0;
            phi_ln27_fu_64[469] <= 1'b0;
            phi_ln27_fu_64[470] <= 1'b0;
            phi_ln27_fu_64[471] <= 1'b0;
            phi_ln27_fu_64[472] <= 1'b0;
            phi_ln27_fu_64[473] <= 1'b0;
            phi_ln27_fu_64[474] <= 1'b0;
            phi_ln27_fu_64[475] <= 1'b0;
            phi_ln27_fu_64[476] <= 1'b0;
            phi_ln27_fu_64[477] <= 1'b0;
            phi_ln27_fu_64[478] <= 1'b0;
            phi_ln27_fu_64[480] <= 1'b0;
            phi_ln27_fu_64[481] <= 1'b0;
            phi_ln27_fu_64[482] <= 1'b0;
            phi_ln27_fu_64[483] <= 1'b0;
            phi_ln27_fu_64[484] <= 1'b0;
            phi_ln27_fu_64[485] <= 1'b0;
            phi_ln27_fu_64[486] <= 1'b0;
            phi_ln27_fu_64[487] <= 1'b0;
            phi_ln27_fu_64[488] <= 1'b0;
            phi_ln27_fu_64[489] <= 1'b0;
            phi_ln27_fu_64[490] <= 1'b0;
            phi_ln27_fu_64[491] <= 1'b0;
            phi_ln27_fu_64[492] <= 1'b0;
            phi_ln27_fu_64[493] <= 1'b0;
            phi_ln27_fu_64[494] <= 1'b0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
                        phi_ln27_fu_64[14 : 0] <= select_ln27_fu_192_p3[14 : 0];
            phi_ln27_fu_64[30 : 16] <= select_ln27_fu_192_p3[30 : 16];
            phi_ln27_fu_64[46 : 32] <= select_ln27_fu_192_p3[46 : 32];
            phi_ln27_fu_64[62 : 48] <= select_ln27_fu_192_p3[62 : 48];
            phi_ln27_fu_64[78 : 64] <= select_ln27_fu_192_p3[78 : 64];
            phi_ln27_fu_64[94 : 80] <= select_ln27_fu_192_p3[94 : 80];
            phi_ln27_fu_64[110 : 96] <= select_ln27_fu_192_p3[110 : 96];
            phi_ln27_fu_64[126 : 112] <= select_ln27_fu_192_p3[126 : 112];
            phi_ln27_fu_64[142 : 128] <= select_ln27_fu_192_p3[142 : 128];
            phi_ln27_fu_64[158 : 144] <= select_ln27_fu_192_p3[158 : 144];
            phi_ln27_fu_64[174 : 160] <= select_ln27_fu_192_p3[174 : 160];
            phi_ln27_fu_64[190 : 176] <= select_ln27_fu_192_p3[190 : 176];
            phi_ln27_fu_64[206 : 192] <= select_ln27_fu_192_p3[206 : 192];
            phi_ln27_fu_64[222 : 208] <= select_ln27_fu_192_p3[222 : 208];
            phi_ln27_fu_64[238 : 224] <= select_ln27_fu_192_p3[238 : 224];
            phi_ln27_fu_64[254 : 240] <= select_ln27_fu_192_p3[254 : 240];
            phi_ln27_fu_64[270 : 256] <= select_ln27_fu_192_p3[270 : 256];
            phi_ln27_fu_64[286 : 272] <= select_ln27_fu_192_p3[286 : 272];
            phi_ln27_fu_64[302 : 288] <= select_ln27_fu_192_p3[302 : 288];
            phi_ln27_fu_64[318 : 304] <= select_ln27_fu_192_p3[318 : 304];
            phi_ln27_fu_64[334 : 320] <= select_ln27_fu_192_p3[334 : 320];
            phi_ln27_fu_64[350 : 336] <= select_ln27_fu_192_p3[350 : 336];
            phi_ln27_fu_64[366 : 352] <= select_ln27_fu_192_p3[366 : 352];
            phi_ln27_fu_64[382 : 368] <= select_ln27_fu_192_p3[382 : 368];
            phi_ln27_fu_64[398 : 384] <= select_ln27_fu_192_p3[398 : 384];
            phi_ln27_fu_64[414 : 400] <= select_ln27_fu_192_p3[414 : 400];
            phi_ln27_fu_64[430 : 416] <= select_ln27_fu_192_p3[430 : 416];
            phi_ln27_fu_64[446 : 432] <= select_ln27_fu_192_p3[446 : 432];
            phi_ln27_fu_64[462 : 448] <= select_ln27_fu_192_p3[462 : 448];
            phi_ln27_fu_64[478 : 464] <= select_ln27_fu_192_p3[478 : 464];
            phi_ln27_fu_64[494 : 480] <= select_ln27_fu_192_p3[494 : 480];
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln23_reg_224 <= icmp_ln23_fu_116_p2;
        icmp_ln27_reg_233_pp0_iter1_reg <= icmp_ln27_reg_233;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_fu_116_p2 == 1'd0))) begin
        icmp_ln27_reg_233 <= icmp_ln27_fu_137_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_reg_224 == 1'd0))) begin
        out_buf_load_reg_243 <= out_buf_q0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_fu_116_p2 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln23_reg_224 == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 14'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_68;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln27_reg_233_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        gmem1_blk_n_W = m_axi_gmem1_WREADY;
    end else begin
        gmem1_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln27_reg_233_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        m_axi_gmem1_WVALID = 1'b1;
    end else begin
        m_axi_gmem1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_buf_ce0 = 1'b1;
    end else begin
        out_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln23_fu_122_p2 = (ap_sig_allocacmp_i_1 + 14'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_io));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_io));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((icmp_ln27_reg_233_pp0_iter1_reg == 1'd1) & (m_axi_gmem1_WREADY == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln23_fu_116_p2 = ((ap_sig_allocacmp_i_1 == 14'd8192) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_137_p2 = ((trunc_ln23_fu_133_p1 == 5'd31) ? 1'b1 : 1'b0);

assign m_axi_gmem1_ARADDR = 64'd0;

assign m_axi_gmem1_ARBURST = 2'd0;

assign m_axi_gmem1_ARCACHE = 4'd0;

assign m_axi_gmem1_ARID = 1'd0;

assign m_axi_gmem1_ARLEN = 32'd0;

assign m_axi_gmem1_ARLOCK = 2'd0;

assign m_axi_gmem1_ARPROT = 3'd0;

assign m_axi_gmem1_ARQOS = 4'd0;

assign m_axi_gmem1_ARREGION = 4'd0;

assign m_axi_gmem1_ARSIZE = 3'd0;

assign m_axi_gmem1_ARUSER = 1'd0;

assign m_axi_gmem1_ARVALID = 1'b0;

assign m_axi_gmem1_AWADDR = 64'd0;

assign m_axi_gmem1_AWBURST = 2'd0;

assign m_axi_gmem1_AWCACHE = 4'd0;

assign m_axi_gmem1_AWID = 1'd0;

assign m_axi_gmem1_AWLEN = 32'd0;

assign m_axi_gmem1_AWLOCK = 2'd0;

assign m_axi_gmem1_AWPROT = 3'd0;

assign m_axi_gmem1_AWQOS = 4'd0;

assign m_axi_gmem1_AWREGION = 4'd0;

assign m_axi_gmem1_AWSIZE = 3'd0;

assign m_axi_gmem1_AWUSER = 1'd0;

assign m_axi_gmem1_AWVALID = 1'b0;

assign m_axi_gmem1_BREADY = 1'b0;

assign m_axi_gmem1_RREADY = 1'b0;

assign m_axi_gmem1_WDATA = or_ln_fu_156_p4;

assign m_axi_gmem1_WID = 1'd0;

assign m_axi_gmem1_WLAST = 1'b0;

assign m_axi_gmem1_WSTRB = 64'd18446744073709551615;

assign m_axi_gmem1_WUSER = 1'd0;

assign or_ln_fu_156_p4 = {{{out_buf_load_reg_243}, {1'd0}}, {phi_ln27_fu_64}};

assign out_buf_address0 = zext_ln23_fu_128_p1;

assign select_ln27_fu_192_p3 = ((icmp_ln27_reg_233_pp0_iter1_reg[0:0] == 1'b1) ? 495'd0 : tmp_1_fu_183_p4);

assign tmp_1_fu_183_p4 = {{{out_buf_load_reg_243}, {1'd0}}, {tmp_fu_173_p4}};

assign tmp_fu_173_p4 = {{phi_ln27_fu_64[494:16]}};

assign trunc_ln23_fu_133_p1 = ap_sig_allocacmp_i_1[4:0];

assign zext_ln23_fu_128_p1 = ap_sig_allocacmp_i_1;

always @ (posedge ap_clk) begin
    phi_ln27_fu_64[15] <= 1'b0;
    phi_ln27_fu_64[31:31] <= 1'b0;
    phi_ln27_fu_64[47:47] <= 1'b0;
    phi_ln27_fu_64[63:63] <= 1'b0;
    phi_ln27_fu_64[79:79] <= 1'b0;
    phi_ln27_fu_64[95:95] <= 1'b0;
    phi_ln27_fu_64[111:111] <= 1'b0;
    phi_ln27_fu_64[127:127] <= 1'b0;
    phi_ln27_fu_64[143:143] <= 1'b0;
    phi_ln27_fu_64[159:159] <= 1'b0;
    phi_ln27_fu_64[175:175] <= 1'b0;
    phi_ln27_fu_64[191:191] <= 1'b0;
    phi_ln27_fu_64[207:207] <= 1'b0;
    phi_ln27_fu_64[223:223] <= 1'b0;
    phi_ln27_fu_64[239:239] <= 1'b0;
    phi_ln27_fu_64[255:255] <= 1'b0;
    phi_ln27_fu_64[271:271] <= 1'b0;
    phi_ln27_fu_64[287:287] <= 1'b0;
    phi_ln27_fu_64[303:303] <= 1'b0;
    phi_ln27_fu_64[319:319] <= 1'b0;
    phi_ln27_fu_64[335:335] <= 1'b0;
    phi_ln27_fu_64[351:351] <= 1'b0;
    phi_ln27_fu_64[367:367] <= 1'b0;
    phi_ln27_fu_64[383:383] <= 1'b0;
    phi_ln27_fu_64[399:399] <= 1'b0;
    phi_ln27_fu_64[415:415] <= 1'b0;
    phi_ln27_fu_64[431:431] <= 1'b0;
    phi_ln27_fu_64[447:447] <= 1'b0;
    phi_ln27_fu_64[463:463] <= 1'b0;
    phi_ln27_fu_64[479] <= 1'b0;
end

endmodule //alveo_hls4ml_write_result_Pipeline_VITIS_LOOP_23_1
