// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module alveo_hls4ml_normalize_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_config21_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer19_out_dout,
        layer19_out_num_data_valid,
        layer19_out_fifo_cap,
        layer19_out_empty_n,
        layer19_out_read,
        layer21_out_din,
        layer21_out_num_data_valid,
        layer21_out_fifo_cap,
        layer21_out_full_n,
        layer21_out_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [1023:0] layer19_out_dout;
input  [1:0] layer19_out_num_data_valid;
input  [1:0] layer19_out_fifo_cap;
input   layer19_out_empty_n;
output   layer19_out_read;
output  [1023:0] layer21_out_din;
input  [1:0] layer21_out_num_data_valid;
input  [1:0] layer21_out_fifo_cap;
input   layer21_out_full_n;
output   layer21_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer19_out_read;
reg layer21_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    layer19_out_blk_n;
reg    layer21_out_blk_n;
wire    ap_CS_fsm_state2;
wire   [15:0] trunc_ln1273_fu_305_p1;
reg   [15:0] trunc_ln1273_reg_2544;
reg   [15:0] tmp_54_reg_2549;
reg   [15:0] tmp_55_reg_2554;
reg   [15:0] tmp_56_reg_2559;
reg   [15:0] tmp_57_reg_2564;
reg   [15:0] tmp_58_reg_2569;
reg   [15:0] tmp_59_reg_2574;
reg   [15:0] tmp_60_reg_2579;
reg   [15:0] tmp_61_reg_2584;
reg   [15:0] tmp_62_reg_2589;
reg   [15:0] tmp_63_reg_2594;
reg   [15:0] tmp_64_reg_2599;
reg   [15:0] tmp_65_reg_2604;
reg   [15:0] tmp_66_reg_2609;
reg   [15:0] tmp_67_reg_2614;
reg   [15:0] tmp_68_reg_2619;
reg   [15:0] tmp_69_reg_2624;
reg   [15:0] tmp_70_reg_2629;
reg   [15:0] tmp_71_reg_2634;
reg   [15:0] tmp_72_reg_2639;
reg   [15:0] tmp_73_reg_2644;
reg   [15:0] tmp_74_reg_2649;
reg   [15:0] tmp_75_reg_2654;
reg   [15:0] tmp_76_reg_2659;
reg   [15:0] tmp_77_reg_2664;
reg   [15:0] tmp_78_reg_2669;
reg   [15:0] tmp_79_reg_2674;
reg   [15:0] tmp_80_reg_2679;
reg   [15:0] tmp_81_reg_2684;
reg   [15:0] tmp_82_reg_2689;
reg   [15:0] tmp_83_reg_2694;
reg   [15:0] tmp_84_reg_2699;
reg   [15:0] tmp_85_reg_2704;
reg   [15:0] tmp_86_reg_2709;
reg   [15:0] tmp_87_reg_2714;
reg   [15:0] tmp_88_reg_2719;
reg   [15:0] tmp_89_reg_2724;
reg   [15:0] tmp_90_reg_2729;
reg   [15:0] tmp_91_reg_2734;
reg   [15:0] tmp_92_reg_2739;
reg   [15:0] tmp_93_reg_2744;
reg   [15:0] tmp_94_reg_2749;
reg   [15:0] tmp_95_reg_2754;
reg   [15:0] tmp_96_reg_2759;
reg   [15:0] tmp_97_reg_2764;
reg   [15:0] tmp_98_reg_2769;
reg   [15:0] tmp_99_reg_2774;
reg   [15:0] tmp_100_reg_2779;
reg   [15:0] tmp_101_reg_2784;
reg   [15:0] tmp_102_reg_2789;
reg   [15:0] tmp_103_reg_2794;
reg   [15:0] tmp_104_reg_2799;
reg   [15:0] tmp_105_reg_2804;
reg   [15:0] tmp_106_reg_2809;
reg   [15:0] tmp_107_reg_2814;
reg   [15:0] tmp_108_reg_2819;
reg   [15:0] tmp_109_reg_2824;
reg   [15:0] tmp_110_reg_2829;
reg   [15:0] tmp_111_reg_2834;
reg   [15:0] tmp_112_reg_2839;
reg   [15:0] tmp_113_reg_2844;
reg   [15:0] tmp_114_reg_2849;
reg   [15:0] tmp_115_reg_2854;
reg   [15:0] tmp_116_reg_2859;
reg    ap_block_state1;
wire   [25:0] r_V_fu_939_p3;
wire   [25:0] add_ln1347_fu_946_p2;
wire   [25:0] r_V_1_fu_962_p3;
wire   [25:0] add_ln1347_1_fu_969_p2;
wire   [25:0] r_V_2_fu_985_p3;
wire   [25:0] add_ln1347_2_fu_992_p2;
wire   [25:0] r_V_3_fu_1008_p3;
wire   [25:0] add_ln1347_3_fu_1015_p2;
wire   [25:0] r_V_4_fu_1031_p3;
wire   [25:0] add_ln1347_4_fu_1038_p2;
wire   [25:0] r_V_5_fu_1054_p3;
wire   [25:0] add_ln1347_5_fu_1061_p2;
wire   [25:0] r_V_6_fu_1077_p3;
wire   [25:0] add_ln1347_6_fu_1084_p2;
wire   [25:0] r_V_7_fu_1100_p3;
wire   [25:0] add_ln1347_7_fu_1107_p2;
wire   [25:0] r_V_8_fu_1123_p3;
wire   [25:0] add_ln1347_8_fu_1130_p2;
wire   [25:0] r_V_9_fu_1146_p3;
wire   [25:0] add_ln1347_9_fu_1153_p2;
wire   [25:0] r_V_10_fu_1169_p3;
wire   [25:0] add_ln1347_10_fu_1176_p2;
wire   [25:0] r_V_11_fu_1192_p3;
wire   [25:0] add_ln1347_11_fu_1199_p2;
wire   [25:0] r_V_12_fu_1215_p3;
wire   [25:0] add_ln1347_12_fu_1222_p2;
wire   [25:0] r_V_13_fu_1238_p3;
wire   [25:0] add_ln1347_13_fu_1245_p2;
wire   [25:0] r_V_14_fu_1261_p3;
wire   [25:0] add_ln1347_14_fu_1268_p2;
wire   [25:0] r_V_15_fu_1284_p3;
wire   [25:0] add_ln1347_15_fu_1291_p2;
wire   [25:0] r_V_16_fu_1307_p3;
wire   [25:0] add_ln1347_16_fu_1314_p2;
wire   [25:0] r_V_17_fu_1330_p3;
wire   [25:0] add_ln1347_17_fu_1337_p2;
wire   [25:0] r_V_18_fu_1353_p3;
wire   [25:0] add_ln1347_18_fu_1360_p2;
wire   [25:0] r_V_19_fu_1376_p3;
wire   [25:0] add_ln1347_19_fu_1383_p2;
wire   [25:0] r_V_20_fu_1399_p3;
wire   [25:0] add_ln1347_20_fu_1406_p2;
wire   [25:0] r_V_21_fu_1422_p3;
wire   [25:0] add_ln1347_21_fu_1429_p2;
wire   [25:0] r_V_22_fu_1445_p3;
wire   [25:0] add_ln1347_22_fu_1452_p2;
wire   [25:0] r_V_23_fu_1468_p3;
wire   [25:0] add_ln1347_23_fu_1475_p2;
wire   [25:0] r_V_24_fu_1491_p3;
wire   [25:0] add_ln1347_24_fu_1498_p2;
wire   [25:0] r_V_25_fu_1514_p3;
wire   [25:0] add_ln1347_25_fu_1521_p2;
wire   [25:0] r_V_26_fu_1537_p3;
wire   [25:0] add_ln1347_26_fu_1544_p2;
wire   [25:0] r_V_27_fu_1560_p3;
wire   [25:0] add_ln1347_27_fu_1567_p2;
wire   [25:0] r_V_28_fu_1583_p3;
wire   [25:0] add_ln1347_28_fu_1590_p2;
wire   [25:0] r_V_29_fu_1606_p3;
wire   [25:0] add_ln1347_29_fu_1613_p2;
wire   [25:0] r_V_30_fu_1629_p3;
wire   [25:0] add_ln1347_30_fu_1636_p2;
wire   [25:0] r_V_31_fu_1652_p3;
wire   [25:0] add_ln1347_31_fu_1659_p2;
wire   [25:0] r_V_32_fu_1675_p3;
wire   [25:0] add_ln1347_32_fu_1682_p2;
wire   [25:0] r_V_33_fu_1698_p3;
wire   [25:0] add_ln1347_33_fu_1705_p2;
wire   [25:0] r_V_34_fu_1721_p3;
wire   [25:0] add_ln1347_34_fu_1728_p2;
wire   [25:0] r_V_35_fu_1744_p3;
wire   [25:0] add_ln1347_35_fu_1751_p2;
wire   [25:0] r_V_36_fu_1767_p3;
wire   [25:0] add_ln1347_36_fu_1774_p2;
wire   [25:0] r_V_37_fu_1790_p3;
wire   [25:0] add_ln1347_37_fu_1797_p2;
wire   [25:0] r_V_38_fu_1813_p3;
wire   [25:0] add_ln1347_38_fu_1820_p2;
wire   [25:0] r_V_39_fu_1836_p3;
wire   [25:0] add_ln1347_39_fu_1843_p2;
wire   [25:0] r_V_40_fu_1859_p3;
wire   [25:0] add_ln1347_40_fu_1866_p2;
wire   [25:0] r_V_41_fu_1882_p3;
wire   [25:0] add_ln1347_41_fu_1889_p2;
wire   [25:0] r_V_42_fu_1905_p3;
wire   [25:0] add_ln1347_42_fu_1912_p2;
wire   [25:0] r_V_43_fu_1928_p3;
wire   [25:0] add_ln1347_43_fu_1935_p2;
wire   [25:0] r_V_44_fu_1951_p3;
wire   [25:0] add_ln1347_44_fu_1958_p2;
wire   [25:0] r_V_45_fu_1974_p3;
wire   [25:0] add_ln1347_45_fu_1981_p2;
wire   [25:0] r_V_46_fu_1997_p3;
wire   [25:0] add_ln1347_46_fu_2004_p2;
wire   [25:0] r_V_47_fu_2020_p3;
wire   [25:0] add_ln1347_47_fu_2027_p2;
wire   [25:0] r_V_48_fu_2043_p3;
wire   [25:0] add_ln1347_48_fu_2050_p2;
wire   [25:0] r_V_49_fu_2066_p3;
wire   [25:0] add_ln1347_49_fu_2073_p2;
wire   [25:0] r_V_50_fu_2089_p3;
wire   [25:0] add_ln1347_50_fu_2096_p2;
wire   [25:0] r_V_51_fu_2112_p3;
wire   [25:0] add_ln1347_51_fu_2119_p2;
wire   [25:0] r_V_52_fu_2135_p3;
wire   [25:0] add_ln1347_52_fu_2142_p2;
wire   [25:0] r_V_53_fu_2158_p3;
wire   [25:0] add_ln1347_53_fu_2165_p2;
wire   [25:0] r_V_54_fu_2181_p3;
wire   [25:0] add_ln1347_54_fu_2188_p2;
wire   [25:0] r_V_55_fu_2204_p3;
wire   [25:0] add_ln1347_55_fu_2211_p2;
wire   [25:0] r_V_56_fu_2227_p3;
wire   [25:0] add_ln1347_56_fu_2234_p2;
wire   [25:0] r_V_57_fu_2250_p3;
wire   [25:0] add_ln1347_57_fu_2257_p2;
wire   [25:0] r_V_58_fu_2273_p3;
wire   [25:0] add_ln1347_58_fu_2280_p2;
wire   [25:0] r_V_59_fu_2296_p3;
wire   [25:0] add_ln1347_59_fu_2303_p2;
wire   [25:0] r_V_60_fu_2319_p3;
wire   [25:0] add_ln1347_60_fu_2326_p2;
wire   [25:0] r_V_61_fu_2342_p3;
wire   [25:0] add_ln1347_61_fu_2349_p2;
wire   [25:0] r_V_62_fu_2365_p3;
wire   [25:0] add_ln1347_62_fu_2372_p2;
wire   [25:0] r_V_63_fu_2388_p3;
wire   [25:0] add_ln1347_63_fu_2395_p2;
wire   [15:0] trunc_ln818_62_fu_2401_p4;
wire   [15:0] trunc_ln818_61_fu_2378_p4;
wire   [15:0] trunc_ln818_60_fu_2355_p4;
wire   [15:0] trunc_ln818_59_fu_2332_p4;
wire   [15:0] trunc_ln818_58_fu_2309_p4;
wire   [15:0] trunc_ln818_57_fu_2286_p4;
wire   [15:0] trunc_ln818_56_fu_2263_p4;
wire   [15:0] trunc_ln818_55_fu_2240_p4;
wire   [15:0] trunc_ln818_54_fu_2217_p4;
wire   [15:0] trunc_ln818_53_fu_2194_p4;
wire   [15:0] trunc_ln818_52_fu_2171_p4;
wire   [15:0] trunc_ln818_51_fu_2148_p4;
wire   [15:0] trunc_ln818_50_fu_2125_p4;
wire   [15:0] trunc_ln818_49_fu_2102_p4;
wire   [15:0] trunc_ln818_48_fu_2079_p4;
wire   [15:0] trunc_ln818_47_fu_2056_p4;
wire   [15:0] trunc_ln818_46_fu_2033_p4;
wire   [15:0] trunc_ln818_45_fu_2010_p4;
wire   [15:0] trunc_ln818_44_fu_1987_p4;
wire   [15:0] trunc_ln818_43_fu_1964_p4;
wire   [15:0] trunc_ln818_42_fu_1941_p4;
wire   [15:0] trunc_ln818_41_fu_1918_p4;
wire   [15:0] trunc_ln818_40_fu_1895_p4;
wire   [15:0] trunc_ln818_39_fu_1872_p4;
wire   [15:0] trunc_ln818_38_fu_1849_p4;
wire   [15:0] trunc_ln818_37_fu_1826_p4;
wire   [15:0] trunc_ln818_36_fu_1803_p4;
wire   [15:0] trunc_ln818_35_fu_1780_p4;
wire   [15:0] trunc_ln818_34_fu_1757_p4;
wire   [15:0] trunc_ln818_33_fu_1734_p4;
wire   [15:0] trunc_ln818_32_fu_1711_p4;
wire   [15:0] trunc_ln818_31_fu_1688_p4;
wire   [15:0] trunc_ln818_30_fu_1665_p4;
wire   [15:0] trunc_ln818_29_fu_1642_p4;
wire   [15:0] trunc_ln818_28_fu_1619_p4;
wire   [15:0] trunc_ln818_27_fu_1596_p4;
wire   [15:0] trunc_ln818_26_fu_1573_p4;
wire   [15:0] trunc_ln818_25_fu_1550_p4;
wire   [15:0] trunc_ln818_24_fu_1527_p4;
wire   [15:0] trunc_ln818_23_fu_1504_p4;
wire   [15:0] trunc_ln818_22_fu_1481_p4;
wire   [15:0] trunc_ln818_21_fu_1458_p4;
wire   [15:0] trunc_ln818_20_fu_1435_p4;
wire   [15:0] trunc_ln818_19_fu_1412_p4;
wire   [15:0] trunc_ln818_18_fu_1389_p4;
wire   [15:0] trunc_ln818_17_fu_1366_p4;
wire   [15:0] trunc_ln818_16_fu_1343_p4;
wire   [15:0] trunc_ln818_15_fu_1320_p4;
wire   [15:0] trunc_ln818_14_fu_1297_p4;
wire   [15:0] trunc_ln818_13_fu_1274_p4;
wire   [15:0] trunc_ln818_12_fu_1251_p4;
wire   [15:0] trunc_ln818_11_fu_1228_p4;
wire   [15:0] trunc_ln818_10_fu_1205_p4;
wire   [15:0] trunc_ln818_s_fu_1182_p4;
wire   [15:0] trunc_ln818_9_fu_1159_p4;
wire   [15:0] trunc_ln818_8_fu_1136_p4;
wire   [15:0] trunc_ln818_7_fu_1113_p4;
wire   [15:0] trunc_ln818_6_fu_1090_p4;
wire   [15:0] trunc_ln818_5_fu_1067_p4;
wire   [15:0] trunc_ln818_4_fu_1044_p4;
wire   [15:0] trunc_ln818_3_fu_1021_p4;
wire   [15:0] trunc_ln818_2_fu_998_p4;
wire   [15:0] trunc_ln818_1_fu_975_p4;
wire   [15:0] trunc_ln_fu_952_p4;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((layer21_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_100_reg_2779 <= {{layer19_out_dout[767:752]}};
        tmp_101_reg_2784 <= {{layer19_out_dout[783:768]}};
        tmp_102_reg_2789 <= {{layer19_out_dout[799:784]}};
        tmp_103_reg_2794 <= {{layer19_out_dout[815:800]}};
        tmp_104_reg_2799 <= {{layer19_out_dout[831:816]}};
        tmp_105_reg_2804 <= {{layer19_out_dout[847:832]}};
        tmp_106_reg_2809 <= {{layer19_out_dout[863:848]}};
        tmp_107_reg_2814 <= {{layer19_out_dout[879:864]}};
        tmp_108_reg_2819 <= {{layer19_out_dout[895:880]}};
        tmp_109_reg_2824 <= {{layer19_out_dout[911:896]}};
        tmp_110_reg_2829 <= {{layer19_out_dout[927:912]}};
        tmp_111_reg_2834 <= {{layer19_out_dout[943:928]}};
        tmp_112_reg_2839 <= {{layer19_out_dout[959:944]}};
        tmp_113_reg_2844 <= {{layer19_out_dout[975:960]}};
        tmp_114_reg_2849 <= {{layer19_out_dout[991:976]}};
        tmp_115_reg_2854 <= {{layer19_out_dout[1007:992]}};
        tmp_116_reg_2859 <= {{layer19_out_dout[1023:1008]}};
        tmp_54_reg_2549 <= {{layer19_out_dout[31:16]}};
        tmp_55_reg_2554 <= {{layer19_out_dout[47:32]}};
        tmp_56_reg_2559 <= {{layer19_out_dout[63:48]}};
        tmp_57_reg_2564 <= {{layer19_out_dout[79:64]}};
        tmp_58_reg_2569 <= {{layer19_out_dout[95:80]}};
        tmp_59_reg_2574 <= {{layer19_out_dout[111:96]}};
        tmp_60_reg_2579 <= {{layer19_out_dout[127:112]}};
        tmp_61_reg_2584 <= {{layer19_out_dout[143:128]}};
        tmp_62_reg_2589 <= {{layer19_out_dout[159:144]}};
        tmp_63_reg_2594 <= {{layer19_out_dout[175:160]}};
        tmp_64_reg_2599 <= {{layer19_out_dout[191:176]}};
        tmp_65_reg_2604 <= {{layer19_out_dout[207:192]}};
        tmp_66_reg_2609 <= {{layer19_out_dout[223:208]}};
        tmp_67_reg_2614 <= {{layer19_out_dout[239:224]}};
        tmp_68_reg_2619 <= {{layer19_out_dout[255:240]}};
        tmp_69_reg_2624 <= {{layer19_out_dout[271:256]}};
        tmp_70_reg_2629 <= {{layer19_out_dout[287:272]}};
        tmp_71_reg_2634 <= {{layer19_out_dout[303:288]}};
        tmp_72_reg_2639 <= {{layer19_out_dout[319:304]}};
        tmp_73_reg_2644 <= {{layer19_out_dout[335:320]}};
        tmp_74_reg_2649 <= {{layer19_out_dout[351:336]}};
        tmp_75_reg_2654 <= {{layer19_out_dout[367:352]}};
        tmp_76_reg_2659 <= {{layer19_out_dout[383:368]}};
        tmp_77_reg_2664 <= {{layer19_out_dout[399:384]}};
        tmp_78_reg_2669 <= {{layer19_out_dout[415:400]}};
        tmp_79_reg_2674 <= {{layer19_out_dout[431:416]}};
        tmp_80_reg_2679 <= {{layer19_out_dout[447:432]}};
        tmp_81_reg_2684 <= {{layer19_out_dout[463:448]}};
        tmp_82_reg_2689 <= {{layer19_out_dout[479:464]}};
        tmp_83_reg_2694 <= {{layer19_out_dout[495:480]}};
        tmp_84_reg_2699 <= {{layer19_out_dout[511:496]}};
        tmp_85_reg_2704 <= {{layer19_out_dout[527:512]}};
        tmp_86_reg_2709 <= {{layer19_out_dout[543:528]}};
        tmp_87_reg_2714 <= {{layer19_out_dout[559:544]}};
        tmp_88_reg_2719 <= {{layer19_out_dout[575:560]}};
        tmp_89_reg_2724 <= {{layer19_out_dout[591:576]}};
        tmp_90_reg_2729 <= {{layer19_out_dout[607:592]}};
        tmp_91_reg_2734 <= {{layer19_out_dout[623:608]}};
        tmp_92_reg_2739 <= {{layer19_out_dout[639:624]}};
        tmp_93_reg_2744 <= {{layer19_out_dout[655:640]}};
        tmp_94_reg_2749 <= {{layer19_out_dout[671:656]}};
        tmp_95_reg_2754 <= {{layer19_out_dout[687:672]}};
        tmp_96_reg_2759 <= {{layer19_out_dout[703:688]}};
        tmp_97_reg_2764 <= {{layer19_out_dout[719:704]}};
        tmp_98_reg_2769 <= {{layer19_out_dout[735:720]}};
        tmp_99_reg_2774 <= {{layer19_out_dout[751:736]}};
        trunc_ln1273_reg_2544 <= trunc_ln1273_fu_305_p1;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (layer19_out_empty_n == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((layer21_out_full_n == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if (((layer21_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((layer21_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer19_out_blk_n = layer19_out_empty_n;
    end else begin
        layer19_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer19_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer19_out_read = 1'b1;
    end else begin
        layer19_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        layer21_out_blk_n = layer21_out_full_n;
    end else begin
        layer21_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((layer21_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        layer21_out_write = 1'b1;
    end else begin
        layer21_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (layer19_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((layer21_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1347_10_fu_1176_p2 = (r_V_10_fu_1169_p3 + 26'd1048576);

assign add_ln1347_11_fu_1199_p2 = (r_V_11_fu_1192_p3 + 26'd1048576);

assign add_ln1347_12_fu_1222_p2 = (r_V_12_fu_1215_p3 + 26'd1048576);

assign add_ln1347_13_fu_1245_p2 = (r_V_13_fu_1238_p3 + 26'd1048576);

assign add_ln1347_14_fu_1268_p2 = (r_V_14_fu_1261_p3 + 26'd1048576);

assign add_ln1347_15_fu_1291_p2 = (r_V_15_fu_1284_p3 + 26'd1048576);

assign add_ln1347_16_fu_1314_p2 = (r_V_16_fu_1307_p3 + 26'd1048576);

assign add_ln1347_17_fu_1337_p2 = (r_V_17_fu_1330_p3 + 26'd1048576);

assign add_ln1347_18_fu_1360_p2 = (r_V_18_fu_1353_p3 + 26'd1048576);

assign add_ln1347_19_fu_1383_p2 = (r_V_19_fu_1376_p3 + 26'd1048576);

assign add_ln1347_1_fu_969_p2 = (r_V_1_fu_962_p3 + 26'd1048576);

assign add_ln1347_20_fu_1406_p2 = (r_V_20_fu_1399_p3 + 26'd1048576);

assign add_ln1347_21_fu_1429_p2 = (r_V_21_fu_1422_p3 + 26'd1048576);

assign add_ln1347_22_fu_1452_p2 = (r_V_22_fu_1445_p3 + 26'd1048576);

assign add_ln1347_23_fu_1475_p2 = (r_V_23_fu_1468_p3 + 26'd1048576);

assign add_ln1347_24_fu_1498_p2 = (r_V_24_fu_1491_p3 + 26'd1048576);

assign add_ln1347_25_fu_1521_p2 = (r_V_25_fu_1514_p3 + 26'd1048576);

assign add_ln1347_26_fu_1544_p2 = (r_V_26_fu_1537_p3 + 26'd1048576);

assign add_ln1347_27_fu_1567_p2 = (r_V_27_fu_1560_p3 + 26'd1048576);

assign add_ln1347_28_fu_1590_p2 = (r_V_28_fu_1583_p3 + 26'd1048576);

assign add_ln1347_29_fu_1613_p2 = (r_V_29_fu_1606_p3 + 26'd1048576);

assign add_ln1347_2_fu_992_p2 = (r_V_2_fu_985_p3 + 26'd1048576);

assign add_ln1347_30_fu_1636_p2 = (r_V_30_fu_1629_p3 + 26'd1048576);

assign add_ln1347_31_fu_1659_p2 = (r_V_31_fu_1652_p3 + 26'd1048576);

assign add_ln1347_32_fu_1682_p2 = (r_V_32_fu_1675_p3 + 26'd1048576);

assign add_ln1347_33_fu_1705_p2 = (r_V_33_fu_1698_p3 + 26'd1048576);

assign add_ln1347_34_fu_1728_p2 = (r_V_34_fu_1721_p3 + 26'd1048576);

assign add_ln1347_35_fu_1751_p2 = (r_V_35_fu_1744_p3 + 26'd1048576);

assign add_ln1347_36_fu_1774_p2 = (r_V_36_fu_1767_p3 + 26'd1048576);

assign add_ln1347_37_fu_1797_p2 = (r_V_37_fu_1790_p3 + 26'd1048576);

assign add_ln1347_38_fu_1820_p2 = (r_V_38_fu_1813_p3 + 26'd1048576);

assign add_ln1347_39_fu_1843_p2 = (r_V_39_fu_1836_p3 + 26'd1048576);

assign add_ln1347_3_fu_1015_p2 = (r_V_3_fu_1008_p3 + 26'd1048576);

assign add_ln1347_40_fu_1866_p2 = (r_V_40_fu_1859_p3 + 26'd1048576);

assign add_ln1347_41_fu_1889_p2 = (r_V_41_fu_1882_p3 + 26'd1048576);

assign add_ln1347_42_fu_1912_p2 = (r_V_42_fu_1905_p3 + 26'd1048576);

assign add_ln1347_43_fu_1935_p2 = (r_V_43_fu_1928_p3 + 26'd1048576);

assign add_ln1347_44_fu_1958_p2 = (r_V_44_fu_1951_p3 + 26'd1048576);

assign add_ln1347_45_fu_1981_p2 = (r_V_45_fu_1974_p3 + 26'd1048576);

assign add_ln1347_46_fu_2004_p2 = (r_V_46_fu_1997_p3 + 26'd1048576);

assign add_ln1347_47_fu_2027_p2 = (r_V_47_fu_2020_p3 + 26'd1048576);

assign add_ln1347_48_fu_2050_p2 = (r_V_48_fu_2043_p3 + 26'd1048576);

assign add_ln1347_49_fu_2073_p2 = (r_V_49_fu_2066_p3 + 26'd1048576);

assign add_ln1347_4_fu_1038_p2 = (r_V_4_fu_1031_p3 + 26'd1048576);

assign add_ln1347_50_fu_2096_p2 = (r_V_50_fu_2089_p3 + 26'd1048576);

assign add_ln1347_51_fu_2119_p2 = (r_V_51_fu_2112_p3 + 26'd1048576);

assign add_ln1347_52_fu_2142_p2 = (r_V_52_fu_2135_p3 + 26'd1048576);

assign add_ln1347_53_fu_2165_p2 = (r_V_53_fu_2158_p3 + 26'd1048576);

assign add_ln1347_54_fu_2188_p2 = (r_V_54_fu_2181_p3 + 26'd1048576);

assign add_ln1347_55_fu_2211_p2 = (r_V_55_fu_2204_p3 + 26'd1048576);

assign add_ln1347_56_fu_2234_p2 = (r_V_56_fu_2227_p3 + 26'd1048576);

assign add_ln1347_57_fu_2257_p2 = (r_V_57_fu_2250_p3 + 26'd1048576);

assign add_ln1347_58_fu_2280_p2 = (r_V_58_fu_2273_p3 + 26'd1048576);

assign add_ln1347_59_fu_2303_p2 = (r_V_59_fu_2296_p3 + 26'd1048576);

assign add_ln1347_5_fu_1061_p2 = (r_V_5_fu_1054_p3 + 26'd1048576);

assign add_ln1347_60_fu_2326_p2 = (r_V_60_fu_2319_p3 + 26'd1048576);

assign add_ln1347_61_fu_2349_p2 = (r_V_61_fu_2342_p3 + 26'd1048576);

assign add_ln1347_62_fu_2372_p2 = (r_V_62_fu_2365_p3 + 26'd1048576);

assign add_ln1347_63_fu_2395_p2 = (r_V_63_fu_2388_p3 + 26'd1048576);

assign add_ln1347_6_fu_1084_p2 = (r_V_6_fu_1077_p3 + 26'd1048576);

assign add_ln1347_7_fu_1107_p2 = (r_V_7_fu_1100_p3 + 26'd1048576);

assign add_ln1347_8_fu_1130_p2 = (r_V_8_fu_1123_p3 + 26'd1048576);

assign add_ln1347_9_fu_1153_p2 = (r_V_9_fu_1146_p3 + 26'd1048576);

assign add_ln1347_fu_946_p2 = (r_V_fu_939_p3 + 26'd1048576);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (layer19_out_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign layer21_out_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{trunc_ln818_62_fu_2401_p4}, {trunc_ln818_61_fu_2378_p4}}, {trunc_ln818_60_fu_2355_p4}}, {trunc_ln818_59_fu_2332_p4}}, {trunc_ln818_58_fu_2309_p4}}, {trunc_ln818_57_fu_2286_p4}}, {trunc_ln818_56_fu_2263_p4}}, {trunc_ln818_55_fu_2240_p4}}, {trunc_ln818_54_fu_2217_p4}}, {trunc_ln818_53_fu_2194_p4}}, {trunc_ln818_52_fu_2171_p4}}, {trunc_ln818_51_fu_2148_p4}}, {trunc_ln818_50_fu_2125_p4}}, {trunc_ln818_49_fu_2102_p4}}, {trunc_ln818_48_fu_2079_p4}}, {trunc_ln818_47_fu_2056_p4}}, {trunc_ln818_46_fu_2033_p4}}, {trunc_ln818_45_fu_2010_p4}}, {trunc_ln818_44_fu_1987_p4}}, {trunc_ln818_43_fu_1964_p4}}, {trunc_ln818_42_fu_1941_p4}}, {trunc_ln818_41_fu_1918_p4}}, {trunc_ln818_40_fu_1895_p4}}, {trunc_ln818_39_fu_1872_p4}}, {trunc_ln818_38_fu_1849_p4}}, {trunc_ln818_37_fu_1826_p4}}, {trunc_ln818_36_fu_1803_p4}}, {trunc_ln818_35_fu_1780_p4}}, {trunc_ln818_34_fu_1757_p4}}, {trunc_ln818_33_fu_1734_p4}}, {trunc_ln818_32_fu_1711_p4}}, {trunc_ln818_31_fu_1688_p4}}, {trunc_ln818_30_fu_1665_p4}}, {trunc_ln818_29_fu_1642_p4}}, {trunc_ln818_28_fu_1619_p4}}, {trunc_ln818_27_fu_1596_p4}}, {trunc_ln818_26_fu_1573_p4}}, {trunc_ln818_25_fu_1550_p4}}, {trunc_ln818_24_fu_1527_p4}}, {trunc_ln818_23_fu_1504_p4}}, {trunc_ln818_22_fu_1481_p4}}, {trunc_ln818_21_fu_1458_p4}}, {trunc_ln818_20_fu_1435_p4}}, {trunc_ln818_19_fu_1412_p4}}, {trunc_ln818_18_fu_1389_p4}}, {trunc_ln818_17_fu_1366_p4}}, {trunc_ln818_16_fu_1343_p4}}, {trunc_ln818_15_fu_1320_p4}}, {trunc_ln818_14_fu_1297_p4}}, {trunc_ln818_13_fu_1274_p4}}, {trunc_ln818_12_fu_1251_p4}}, {trunc_ln818_11_fu_1228_p4}}, {trunc_ln818_10_fu_1205_p4}}, {trunc_ln818_s_fu_1182_p4}}, {trunc_ln818_9_fu_1159_p4}}, {trunc_ln818_8_fu_1136_p4}}, {trunc_ln818_7_fu_1113_p4}}, {trunc_ln818_6_fu_1090_p4}}, {trunc_ln818_5_fu_1067_p4}}, {trunc_ln818_4_fu_1044_p4}}, {trunc_ln818_3_fu_1021_p4}}, {trunc_ln818_2_fu_998_p4}}, {trunc_ln818_1_fu_975_p4}}, {trunc_ln_fu_952_p4}};

assign r_V_10_fu_1169_p3 = {{tmp_63_reg_2594}, {10'd0}};

assign r_V_11_fu_1192_p3 = {{tmp_64_reg_2599}, {10'd0}};

assign r_V_12_fu_1215_p3 = {{tmp_65_reg_2604}, {10'd0}};

assign r_V_13_fu_1238_p3 = {{tmp_66_reg_2609}, {10'd0}};

assign r_V_14_fu_1261_p3 = {{tmp_67_reg_2614}, {10'd0}};

assign r_V_15_fu_1284_p3 = {{tmp_68_reg_2619}, {10'd0}};

assign r_V_16_fu_1307_p3 = {{tmp_69_reg_2624}, {10'd0}};

assign r_V_17_fu_1330_p3 = {{tmp_70_reg_2629}, {10'd0}};

assign r_V_18_fu_1353_p3 = {{tmp_71_reg_2634}, {10'd0}};

assign r_V_19_fu_1376_p3 = {{tmp_72_reg_2639}, {10'd0}};

assign r_V_1_fu_962_p3 = {{tmp_54_reg_2549}, {10'd0}};

assign r_V_20_fu_1399_p3 = {{tmp_73_reg_2644}, {10'd0}};

assign r_V_21_fu_1422_p3 = {{tmp_74_reg_2649}, {10'd0}};

assign r_V_22_fu_1445_p3 = {{tmp_75_reg_2654}, {10'd0}};

assign r_V_23_fu_1468_p3 = {{tmp_76_reg_2659}, {10'd0}};

assign r_V_24_fu_1491_p3 = {{tmp_77_reg_2664}, {10'd0}};

assign r_V_25_fu_1514_p3 = {{tmp_78_reg_2669}, {10'd0}};

assign r_V_26_fu_1537_p3 = {{tmp_79_reg_2674}, {10'd0}};

assign r_V_27_fu_1560_p3 = {{tmp_80_reg_2679}, {10'd0}};

assign r_V_28_fu_1583_p3 = {{tmp_81_reg_2684}, {10'd0}};

assign r_V_29_fu_1606_p3 = {{tmp_82_reg_2689}, {10'd0}};

assign r_V_2_fu_985_p3 = {{tmp_55_reg_2554}, {10'd0}};

assign r_V_30_fu_1629_p3 = {{tmp_83_reg_2694}, {10'd0}};

assign r_V_31_fu_1652_p3 = {{tmp_84_reg_2699}, {10'd0}};

assign r_V_32_fu_1675_p3 = {{tmp_85_reg_2704}, {10'd0}};

assign r_V_33_fu_1698_p3 = {{tmp_86_reg_2709}, {10'd0}};

assign r_V_34_fu_1721_p3 = {{tmp_87_reg_2714}, {10'd0}};

assign r_V_35_fu_1744_p3 = {{tmp_88_reg_2719}, {10'd0}};

assign r_V_36_fu_1767_p3 = {{tmp_89_reg_2724}, {10'd0}};

assign r_V_37_fu_1790_p3 = {{tmp_90_reg_2729}, {10'd0}};

assign r_V_38_fu_1813_p3 = {{tmp_91_reg_2734}, {10'd0}};

assign r_V_39_fu_1836_p3 = {{tmp_92_reg_2739}, {10'd0}};

assign r_V_3_fu_1008_p3 = {{tmp_56_reg_2559}, {10'd0}};

assign r_V_40_fu_1859_p3 = {{tmp_93_reg_2744}, {10'd0}};

assign r_V_41_fu_1882_p3 = {{tmp_94_reg_2749}, {10'd0}};

assign r_V_42_fu_1905_p3 = {{tmp_95_reg_2754}, {10'd0}};

assign r_V_43_fu_1928_p3 = {{tmp_96_reg_2759}, {10'd0}};

assign r_V_44_fu_1951_p3 = {{tmp_97_reg_2764}, {10'd0}};

assign r_V_45_fu_1974_p3 = {{tmp_98_reg_2769}, {10'd0}};

assign r_V_46_fu_1997_p3 = {{tmp_99_reg_2774}, {10'd0}};

assign r_V_47_fu_2020_p3 = {{tmp_100_reg_2779}, {10'd0}};

assign r_V_48_fu_2043_p3 = {{tmp_101_reg_2784}, {10'd0}};

assign r_V_49_fu_2066_p3 = {{tmp_102_reg_2789}, {10'd0}};

assign r_V_4_fu_1031_p3 = {{tmp_57_reg_2564}, {10'd0}};

assign r_V_50_fu_2089_p3 = {{tmp_103_reg_2794}, {10'd0}};

assign r_V_51_fu_2112_p3 = {{tmp_104_reg_2799}, {10'd0}};

assign r_V_52_fu_2135_p3 = {{tmp_105_reg_2804}, {10'd0}};

assign r_V_53_fu_2158_p3 = {{tmp_106_reg_2809}, {10'd0}};

assign r_V_54_fu_2181_p3 = {{tmp_107_reg_2814}, {10'd0}};

assign r_V_55_fu_2204_p3 = {{tmp_108_reg_2819}, {10'd0}};

assign r_V_56_fu_2227_p3 = {{tmp_109_reg_2824}, {10'd0}};

assign r_V_57_fu_2250_p3 = {{tmp_110_reg_2829}, {10'd0}};

assign r_V_58_fu_2273_p3 = {{tmp_111_reg_2834}, {10'd0}};

assign r_V_59_fu_2296_p3 = {{tmp_112_reg_2839}, {10'd0}};

assign r_V_5_fu_1054_p3 = {{tmp_58_reg_2569}, {10'd0}};

assign r_V_60_fu_2319_p3 = {{tmp_113_reg_2844}, {10'd0}};

assign r_V_61_fu_2342_p3 = {{tmp_114_reg_2849}, {10'd0}};

assign r_V_62_fu_2365_p3 = {{tmp_115_reg_2854}, {10'd0}};

assign r_V_63_fu_2388_p3 = {{tmp_116_reg_2859}, {10'd0}};

assign r_V_6_fu_1077_p3 = {{tmp_59_reg_2574}, {10'd0}};

assign r_V_7_fu_1100_p3 = {{tmp_60_reg_2579}, {10'd0}};

assign r_V_8_fu_1123_p3 = {{tmp_61_reg_2584}, {10'd0}};

assign r_V_9_fu_1146_p3 = {{tmp_62_reg_2589}, {10'd0}};

assign r_V_fu_939_p3 = {{trunc_ln1273_reg_2544}, {10'd0}};

assign start_out = real_start;

assign trunc_ln1273_fu_305_p1 = layer19_out_dout[15:0];

assign trunc_ln818_10_fu_1205_p4 = {{add_ln1347_11_fu_1199_p2[25:10]}};

assign trunc_ln818_11_fu_1228_p4 = {{add_ln1347_12_fu_1222_p2[25:10]}};

assign trunc_ln818_12_fu_1251_p4 = {{add_ln1347_13_fu_1245_p2[25:10]}};

assign trunc_ln818_13_fu_1274_p4 = {{add_ln1347_14_fu_1268_p2[25:10]}};

assign trunc_ln818_14_fu_1297_p4 = {{add_ln1347_15_fu_1291_p2[25:10]}};

assign trunc_ln818_15_fu_1320_p4 = {{add_ln1347_16_fu_1314_p2[25:10]}};

assign trunc_ln818_16_fu_1343_p4 = {{add_ln1347_17_fu_1337_p2[25:10]}};

assign trunc_ln818_17_fu_1366_p4 = {{add_ln1347_18_fu_1360_p2[25:10]}};

assign trunc_ln818_18_fu_1389_p4 = {{add_ln1347_19_fu_1383_p2[25:10]}};

assign trunc_ln818_19_fu_1412_p4 = {{add_ln1347_20_fu_1406_p2[25:10]}};

assign trunc_ln818_1_fu_975_p4 = {{add_ln1347_1_fu_969_p2[25:10]}};

assign trunc_ln818_20_fu_1435_p4 = {{add_ln1347_21_fu_1429_p2[25:10]}};

assign trunc_ln818_21_fu_1458_p4 = {{add_ln1347_22_fu_1452_p2[25:10]}};

assign trunc_ln818_22_fu_1481_p4 = {{add_ln1347_23_fu_1475_p2[25:10]}};

assign trunc_ln818_23_fu_1504_p4 = {{add_ln1347_24_fu_1498_p2[25:10]}};

assign trunc_ln818_24_fu_1527_p4 = {{add_ln1347_25_fu_1521_p2[25:10]}};

assign trunc_ln818_25_fu_1550_p4 = {{add_ln1347_26_fu_1544_p2[25:10]}};

assign trunc_ln818_26_fu_1573_p4 = {{add_ln1347_27_fu_1567_p2[25:10]}};

assign trunc_ln818_27_fu_1596_p4 = {{add_ln1347_28_fu_1590_p2[25:10]}};

assign trunc_ln818_28_fu_1619_p4 = {{add_ln1347_29_fu_1613_p2[25:10]}};

assign trunc_ln818_29_fu_1642_p4 = {{add_ln1347_30_fu_1636_p2[25:10]}};

assign trunc_ln818_2_fu_998_p4 = {{add_ln1347_2_fu_992_p2[25:10]}};

assign trunc_ln818_30_fu_1665_p4 = {{add_ln1347_31_fu_1659_p2[25:10]}};

assign trunc_ln818_31_fu_1688_p4 = {{add_ln1347_32_fu_1682_p2[25:10]}};

assign trunc_ln818_32_fu_1711_p4 = {{add_ln1347_33_fu_1705_p2[25:10]}};

assign trunc_ln818_33_fu_1734_p4 = {{add_ln1347_34_fu_1728_p2[25:10]}};

assign trunc_ln818_34_fu_1757_p4 = {{add_ln1347_35_fu_1751_p2[25:10]}};

assign trunc_ln818_35_fu_1780_p4 = {{add_ln1347_36_fu_1774_p2[25:10]}};

assign trunc_ln818_36_fu_1803_p4 = {{add_ln1347_37_fu_1797_p2[25:10]}};

assign trunc_ln818_37_fu_1826_p4 = {{add_ln1347_38_fu_1820_p2[25:10]}};

assign trunc_ln818_38_fu_1849_p4 = {{add_ln1347_39_fu_1843_p2[25:10]}};

assign trunc_ln818_39_fu_1872_p4 = {{add_ln1347_40_fu_1866_p2[25:10]}};

assign trunc_ln818_3_fu_1021_p4 = {{add_ln1347_3_fu_1015_p2[25:10]}};

assign trunc_ln818_40_fu_1895_p4 = {{add_ln1347_41_fu_1889_p2[25:10]}};

assign trunc_ln818_41_fu_1918_p4 = {{add_ln1347_42_fu_1912_p2[25:10]}};

assign trunc_ln818_42_fu_1941_p4 = {{add_ln1347_43_fu_1935_p2[25:10]}};

assign trunc_ln818_43_fu_1964_p4 = {{add_ln1347_44_fu_1958_p2[25:10]}};

assign trunc_ln818_44_fu_1987_p4 = {{add_ln1347_45_fu_1981_p2[25:10]}};

assign trunc_ln818_45_fu_2010_p4 = {{add_ln1347_46_fu_2004_p2[25:10]}};

assign trunc_ln818_46_fu_2033_p4 = {{add_ln1347_47_fu_2027_p2[25:10]}};

assign trunc_ln818_47_fu_2056_p4 = {{add_ln1347_48_fu_2050_p2[25:10]}};

assign trunc_ln818_48_fu_2079_p4 = {{add_ln1347_49_fu_2073_p2[25:10]}};

assign trunc_ln818_49_fu_2102_p4 = {{add_ln1347_50_fu_2096_p2[25:10]}};

assign trunc_ln818_4_fu_1044_p4 = {{add_ln1347_4_fu_1038_p2[25:10]}};

assign trunc_ln818_50_fu_2125_p4 = {{add_ln1347_51_fu_2119_p2[25:10]}};

assign trunc_ln818_51_fu_2148_p4 = {{add_ln1347_52_fu_2142_p2[25:10]}};

assign trunc_ln818_52_fu_2171_p4 = {{add_ln1347_53_fu_2165_p2[25:10]}};

assign trunc_ln818_53_fu_2194_p4 = {{add_ln1347_54_fu_2188_p2[25:10]}};

assign trunc_ln818_54_fu_2217_p4 = {{add_ln1347_55_fu_2211_p2[25:10]}};

assign trunc_ln818_55_fu_2240_p4 = {{add_ln1347_56_fu_2234_p2[25:10]}};

assign trunc_ln818_56_fu_2263_p4 = {{add_ln1347_57_fu_2257_p2[25:10]}};

assign trunc_ln818_57_fu_2286_p4 = {{add_ln1347_58_fu_2280_p2[25:10]}};

assign trunc_ln818_58_fu_2309_p4 = {{add_ln1347_59_fu_2303_p2[25:10]}};

assign trunc_ln818_59_fu_2332_p4 = {{add_ln1347_60_fu_2326_p2[25:10]}};

assign trunc_ln818_5_fu_1067_p4 = {{add_ln1347_5_fu_1061_p2[25:10]}};

assign trunc_ln818_60_fu_2355_p4 = {{add_ln1347_61_fu_2349_p2[25:10]}};

assign trunc_ln818_61_fu_2378_p4 = {{add_ln1347_62_fu_2372_p2[25:10]}};

assign trunc_ln818_62_fu_2401_p4 = {{add_ln1347_63_fu_2395_p2[25:10]}};

assign trunc_ln818_6_fu_1090_p4 = {{add_ln1347_6_fu_1084_p2[25:10]}};

assign trunc_ln818_7_fu_1113_p4 = {{add_ln1347_7_fu_1107_p2[25:10]}};

assign trunc_ln818_8_fu_1136_p4 = {{add_ln1347_8_fu_1130_p2[25:10]}};

assign trunc_ln818_9_fu_1159_p4 = {{add_ln1347_9_fu_1153_p2[25:10]}};

assign trunc_ln818_s_fu_1182_p4 = {{add_ln1347_10_fu_1176_p2[25:10]}};

assign trunc_ln_fu_952_p4 = {{add_ln1347_fu_946_p2[25:10]}};

endmodule //alveo_hls4ml_normalize_array_ap_fixed_64u_array_ap_fixed_16_6_5_3_0_64u_config21_s
