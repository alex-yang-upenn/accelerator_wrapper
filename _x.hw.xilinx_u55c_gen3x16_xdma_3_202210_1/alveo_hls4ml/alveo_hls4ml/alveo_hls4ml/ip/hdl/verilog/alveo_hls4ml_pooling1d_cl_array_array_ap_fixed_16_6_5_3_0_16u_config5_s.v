// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module alveo_hls4ml_pooling1d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config5_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer4_out_dout,
        layer4_out_num_data_valid,
        layer4_out_fifo_cap,
        layer4_out_empty_n,
        layer4_out_read,
        layer5_out_din,
        layer5_out_num_data_valid,
        layer5_out_fifo_cap,
        layer5_out_full_n,
        layer5_out_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state5 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [95:0] layer4_out_dout;
input  [3:0] layer4_out_num_data_valid;
input  [3:0] layer4_out_fifo_cap;
input   layer4_out_empty_n;
output   layer4_out_read;
output  [255:0] layer5_out_din;
input  [2:0] layer5_out_num_data_valid;
input  [2:0] layer5_out_fifo_cap;
input   layer5_out_full_n;
output   layer5_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer4_out_read;
reg layer5_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_55;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_54;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_53;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_52;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_51;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_50;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_49;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_48;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_47;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_46;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_45;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_44;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_43;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_42;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_41;
reg   [5:0] p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_40;
reg   [31:0] sX_2;
reg   [31:0] pX_2;
reg    layer4_out_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln185_reg_1743;
reg    layer5_out_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] and_ln145_reg_1852;
wire   [0:0] icmp_ln185_fu_440_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln145_3_fu_456_p2;
reg   [0:0] icmp_ln145_3_reg_1747;
wire   [0:0] icmp_ln165_fu_468_p2;
reg   [0:0] icmp_ln165_reg_1752;
wire   [5:0] trunc_ln187_fu_491_p1;
reg   [5:0] trunc_ln187_reg_1756;
reg   [5:0] trunc_ln187_s_reg_1762;
reg   [5:0] trunc_ln187_37_reg_1768;
reg   [5:0] trunc_ln187_38_reg_1774;
reg   [5:0] trunc_ln187_39_reg_1780;
reg   [5:0] trunc_ln187_40_reg_1786;
reg   [5:0] trunc_ln187_41_reg_1792;
reg   [5:0] trunc_ln187_42_reg_1798;
reg   [5:0] trunc_ln187_43_reg_1804;
reg   [5:0] trunc_ln187_44_reg_1810;
reg   [5:0] trunc_ln187_45_reg_1816;
reg   [5:0] trunc_ln187_46_reg_1822;
reg   [5:0] trunc_ln187_47_reg_1828;
reg   [5:0] trunc_ln187_48_reg_1834;
reg   [5:0] trunc_ln187_49_reg_1840;
reg   [5:0] trunc_ln187_50_reg_1846;
wire   [0:0] and_ln145_fu_655_p2;
reg    ap_enable_reg_pp0_iter0;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg   [31:0] ap_phi_mux_storemerge_phi_fu_233_p4;
wire   [31:0] add_ln172_fu_668_p2;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_reg_229;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_reg_229;
wire    ap_CS_fsm_state5;
wire   [31:0] add_ln165_fu_462_p2;
reg   [3:0] i_iw_fu_148;
wire   [3:0] i_iw_6_fu_446_p2;
reg   [5:0] p_0_0_0_0_0151_fu_152;
reg   [5:0] p_0_1_0_0_0154_fu_156;
reg   [5:0] p_0_2_0_0_0157_fu_160;
reg   [5:0] p_0_3_0_0_0160_fu_164;
reg   [5:0] p_0_4_0_0_0163_fu_168;
reg   [5:0] p_0_5_0_0_0166_fu_172;
reg   [5:0] p_0_6_0_0_0169_fu_176;
reg   [5:0] p_0_7_0_0_0172_fu_180;
reg   [5:0] p_0_8_0_0_0175_fu_184;
reg   [5:0] p_0_9_0_0_0178_fu_188;
reg   [5:0] p_0_10_0_0_0181_fu_192;
reg   [5:0] p_0_11_0_0_0184_fu_196;
reg   [5:0] p_0_12_0_0_0187_fu_200;
reg   [5:0] p_0_13_0_0_0190_fu_204;
reg   [5:0] p_0_14_0_0_0193_fu_208;
reg   [5:0] p_0_15_0_0_0196_fu_212;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln145_fu_649_p2;
wire   [31:0] select_ln172_fu_660_p3;
wire   [8:0] pool_window_V_fu_681_p3;
wire   [8:0] pool_window_V_79_fu_689_p3;
wire   [0:0] icmp_ln1651_fu_696_p2;
wire   [0:0] xor_ln1651_fu_702_p2;
wire   [8:0] select_ln65_fu_708_p3;
wire   [9:0] res_pack_data_fu_716_p3;
wire   [8:0] pool_window_V_80_fu_728_p3;
wire   [8:0] pool_window_V_81_fu_736_p3;
wire   [0:0] icmp_ln1651_39_fu_743_p2;
wire   [0:0] xor_ln1651_39_fu_749_p2;
wire   [8:0] select_ln65_39_fu_755_p3;
wire   [9:0] res_pack_data_7_fu_763_p3;
wire   [8:0] pool_window_V_82_fu_775_p3;
wire   [8:0] pool_window_V_83_fu_783_p3;
wire   [0:0] icmp_ln1651_40_fu_790_p2;
wire   [0:0] xor_ln1651_40_fu_796_p2;
wire   [8:0] select_ln65_40_fu_802_p3;
wire   [9:0] res_pack_data_8_fu_810_p3;
wire   [8:0] pool_window_V_84_fu_822_p3;
wire   [8:0] pool_window_V_85_fu_830_p3;
wire   [0:0] icmp_ln1651_41_fu_837_p2;
wire   [0:0] xor_ln1651_41_fu_843_p2;
wire   [8:0] select_ln65_41_fu_849_p3;
wire   [9:0] res_pack_data_9_fu_857_p3;
wire   [8:0] pool_window_V_86_fu_869_p3;
wire   [8:0] pool_window_V_87_fu_877_p3;
wire   [0:0] icmp_ln1651_42_fu_884_p2;
wire   [0:0] xor_ln1651_42_fu_890_p2;
wire   [8:0] select_ln65_42_fu_896_p3;
wire   [9:0] shl_ln_fu_904_p3;
wire   [8:0] pool_window_V_88_fu_916_p3;
wire   [8:0] pool_window_V_89_fu_924_p3;
wire   [0:0] icmp_ln1651_43_fu_931_p2;
wire   [0:0] xor_ln1651_43_fu_937_p2;
wire   [8:0] select_ln65_43_fu_943_p3;
wire   [9:0] shl_ln841_s_fu_951_p3;
wire   [8:0] pool_window_V_90_fu_963_p3;
wire   [8:0] pool_window_V_91_fu_971_p3;
wire   [0:0] icmp_ln1651_44_fu_978_p2;
wire   [0:0] xor_ln1651_44_fu_984_p2;
wire   [8:0] select_ln65_44_fu_990_p3;
wire   [9:0] shl_ln841_27_fu_998_p3;
wire   [8:0] pool_window_V_92_fu_1010_p3;
wire   [8:0] pool_window_V_93_fu_1018_p3;
wire   [0:0] icmp_ln1651_45_fu_1025_p2;
wire   [0:0] xor_ln1651_45_fu_1031_p2;
wire   [8:0] select_ln65_45_fu_1037_p3;
wire   [9:0] shl_ln841_28_fu_1045_p3;
wire   [8:0] pool_window_V_94_fu_1057_p3;
wire   [8:0] pool_window_V_95_fu_1065_p3;
wire   [0:0] icmp_ln1651_46_fu_1072_p2;
wire   [0:0] xor_ln1651_46_fu_1078_p2;
wire   [8:0] select_ln65_46_fu_1084_p3;
wire   [9:0] shl_ln841_29_fu_1092_p3;
wire   [8:0] pool_window_V_96_fu_1104_p3;
wire   [8:0] pool_window_V_97_fu_1112_p3;
wire   [0:0] icmp_ln1651_47_fu_1119_p2;
wire   [0:0] xor_ln1651_47_fu_1125_p2;
wire   [8:0] select_ln65_47_fu_1131_p3;
wire   [9:0] shl_ln841_30_fu_1139_p3;
wire   [8:0] pool_window_V_98_fu_1151_p3;
wire   [8:0] pool_window_V_99_fu_1159_p3;
wire   [0:0] icmp_ln1651_48_fu_1166_p2;
wire   [0:0] xor_ln1651_48_fu_1172_p2;
wire   [8:0] select_ln65_48_fu_1178_p3;
wire   [9:0] shl_ln841_31_fu_1186_p3;
wire   [8:0] pool_window_V_100_fu_1198_p3;
wire   [8:0] pool_window_V_101_fu_1206_p3;
wire   [0:0] icmp_ln1651_49_fu_1213_p2;
wire   [0:0] xor_ln1651_49_fu_1219_p2;
wire   [8:0] select_ln65_49_fu_1225_p3;
wire   [9:0] shl_ln841_32_fu_1233_p3;
wire   [8:0] pool_window_V_102_fu_1245_p3;
wire   [8:0] pool_window_V_103_fu_1253_p3;
wire   [0:0] icmp_ln1651_50_fu_1260_p2;
wire   [0:0] xor_ln1651_50_fu_1266_p2;
wire   [8:0] select_ln65_50_fu_1272_p3;
wire   [9:0] shl_ln841_33_fu_1280_p3;
wire   [8:0] pool_window_V_104_fu_1292_p3;
wire   [8:0] pool_window_V_105_fu_1300_p3;
wire   [0:0] icmp_ln1651_51_fu_1307_p2;
wire   [0:0] xor_ln1651_51_fu_1313_p2;
wire   [8:0] select_ln65_51_fu_1319_p3;
wire   [9:0] shl_ln841_34_fu_1327_p3;
wire   [8:0] pool_window_V_106_fu_1339_p3;
wire   [8:0] pool_window_V_107_fu_1347_p3;
wire   [0:0] icmp_ln1651_52_fu_1354_p2;
wire   [0:0] xor_ln1651_52_fu_1360_p2;
wire   [8:0] select_ln65_52_fu_1366_p3;
wire   [9:0] shl_ln841_35_fu_1374_p3;
wire   [8:0] pool_window_V_108_fu_1386_p3;
wire   [8:0] pool_window_V_109_fu_1394_p3;
wire   [0:0] icmp_ln1651_53_fu_1401_p2;
wire   [0:0] xor_ln1651_53_fu_1407_p2;
wire   [8:0] select_ln65_53_fu_1413_p3;
wire   [15:0] zext_ln837_38_fu_1382_p1;
wire   [15:0] zext_ln837_37_fu_1335_p1;
wire   [15:0] zext_ln837_36_fu_1288_p1;
wire   [15:0] zext_ln837_35_fu_1241_p1;
wire   [15:0] zext_ln837_34_fu_1194_p1;
wire   [15:0] zext_ln837_33_fu_1147_p1;
wire   [15:0] zext_ln837_32_fu_1100_p1;
wire   [15:0] zext_ln837_31_fu_1053_p1;
wire   [15:0] zext_ln837_30_fu_1006_p1;
wire   [15:0] zext_ln837_29_fu_959_p1;
wire   [15:0] zext_ln837_fu_912_p1;
wire   [15:0] zext_ln137_9_fu_865_p1;
wire   [15:0] zext_ln137_8_fu_818_p1;
wire   [15:0] zext_ln137_7_fu_771_p1;
wire   [15:0] zext_ln137_fu_724_p1;
wire   [249:0] or_ln161_s_fu_1421_p18;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_187;
reg    ap_condition_257;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_55 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_54 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_53 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_52 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_51 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_50 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_49 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_48 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_47 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_46 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_45 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_44 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_43 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_42 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_41 = 6'd0;
#0 p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_40 = 6'd0;
#0 sX_2 = 32'd0;
#0 pX_2 = 32'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_187)) begin
        if (((icmp_ln185_fu_440_p2 == 1'd0) & (icmp_ln165_fu_468_p2 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_229 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_229 <= ap_phi_reg_pp0_iter0_storemerge_reg_229;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_iw_fu_148 <= 4'd0;
    end else if (((icmp_ln185_fu_440_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_iw_fu_148 <= i_iw_6_fu_446_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_257)) begin
        if ((icmp_ln165_fu_468_p2 == 1'd1)) begin
            pX_2 <= 32'd0;
        end else if ((icmp_ln165_fu_468_p2 == 1'd0)) begin
            pX_2 <= add_ln165_fu_462_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_0_0_0_0151_fu_152 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_55;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_0_0_0_0151_fu_152 <= trunc_ln187_reg_1756;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_10_0_0_0181_fu_192 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_45;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_10_0_0_0181_fu_192 <= trunc_ln187_47_reg_1828;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_11_0_0_0184_fu_196 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_44;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_11_0_0_0184_fu_196 <= trunc_ln187_48_reg_1834;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_12_0_0_0187_fu_200 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_43;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_12_0_0_0187_fu_200 <= trunc_ln187_49_reg_1840;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_13_0_0_0190_fu_204 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_42;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_13_0_0_0190_fu_204 <= trunc_ln187_50_reg_1846;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_14_0_0_0193_fu_208 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_41;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_14_0_0_0193_fu_208 <= trunc_ln187_s_reg_1762;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_15_0_0_0196_fu_212 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_40;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_15_0_0_0196_fu_212 <= trunc_ln187_37_reg_1768;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_1_0_0_0154_fu_156 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_54;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_1_0_0_0154_fu_156 <= trunc_ln187_38_reg_1774;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_2_0_0_0157_fu_160 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_53;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_2_0_0_0157_fu_160 <= trunc_ln187_39_reg_1780;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_3_0_0_0160_fu_164 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_52;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_3_0_0_0160_fu_164 <= trunc_ln187_40_reg_1786;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_4_0_0_0163_fu_168 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_51;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_4_0_0_0163_fu_168 <= trunc_ln187_41_reg_1792;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_5_0_0_0166_fu_172 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_50;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_5_0_0_0166_fu_172 <= trunc_ln187_42_reg_1798;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_6_0_0_0169_fu_176 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_49;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_6_0_0_0169_fu_176 <= trunc_ln187_43_reg_1804;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_7_0_0_0172_fu_180 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_48;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_7_0_0_0172_fu_180 <= trunc_ln187_44_reg_1810;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_8_0_0_0175_fu_184 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_47;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_8_0_0_0175_fu_184 <= trunc_ln187_45_reg_1816;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_9_0_0_0178_fu_188 <= p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_46;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0_9_0_0_0178_fu_188 <= trunc_ln187_46_reg_1822;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln185_reg_1743 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln145_reg_1852 <= and_ln145_fu_655_p2;
        trunc_ln187_37_reg_1768 <= {{layer4_out_dout[95:90]}};
        trunc_ln187_38_reg_1774 <= {{layer4_out_dout[11:6]}};
        trunc_ln187_39_reg_1780 <= {{layer4_out_dout[17:12]}};
        trunc_ln187_40_reg_1786 <= {{layer4_out_dout[23:18]}};
        trunc_ln187_41_reg_1792 <= {{layer4_out_dout[29:24]}};
        trunc_ln187_42_reg_1798 <= {{layer4_out_dout[35:30]}};
        trunc_ln187_43_reg_1804 <= {{layer4_out_dout[41:36]}};
        trunc_ln187_44_reg_1810 <= {{layer4_out_dout[47:42]}};
        trunc_ln187_45_reg_1816 <= {{layer4_out_dout[53:48]}};
        trunc_ln187_46_reg_1822 <= {{layer4_out_dout[59:54]}};
        trunc_ln187_47_reg_1828 <= {{layer4_out_dout[65:60]}};
        trunc_ln187_48_reg_1834 <= {{layer4_out_dout[71:66]}};
        trunc_ln187_49_reg_1840 <= {{layer4_out_dout[77:72]}};
        trunc_ln187_50_reg_1846 <= {{layer4_out_dout[83:78]}};
        trunc_ln187_reg_1756 <= trunc_ln187_fu_491_p1;
        trunc_ln187_s_reg_1762 <= {{layer4_out_dout[89:84]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln185_fu_440_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln145_3_reg_1747 <= icmp_ln145_3_fu_456_p2;
        icmp_ln165_reg_1752 <= icmp_ln165_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln185_reg_1743 <= icmp_ln185_fu_440_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_40 <= p_0_15_0_0_0196_fu_212;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_41 <= p_0_14_0_0_0193_fu_208;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_42 <= p_0_13_0_0_0190_fu_204;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_43 <= p_0_12_0_0_0187_fu_200;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_44 <= p_0_11_0_0_0184_fu_196;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_45 <= p_0_10_0_0_0181_fu_192;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_46 <= p_0_9_0_0_0178_fu_188;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_47 <= p_0_8_0_0_0175_fu_184;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_48 <= p_0_7_0_0_0172_fu_180;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_49 <= p_0_6_0_0_0169_fu_176;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_50 <= p_0_5_0_0_0166_fu_172;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_51 <= p_0_4_0_0_0163_fu_168;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_52 <= p_0_3_0_0_0160_fu_164;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_53 <= p_0_2_0_0_0157_fu_160;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_54 <= p_0_1_0_0_0154_fu_156;
        p_ZZN4nnet22compute_pool_buffer_1dINS_5arrayI9ap_ufixedILi6ELi0EL9ap_q_mode4EL9ap_55 <= p_0_0_0_0_0151_fu_152;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sX_2 <= ap_phi_mux_storemerge_phi_fu_233_p4;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((icmp_ln185_fu_440_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln185_reg_1743 == 1'd0) & (icmp_ln165_reg_1752 == 1'd0))) begin
        ap_phi_mux_storemerge_phi_fu_233_p4 = add_ln172_fu_668_p2;
    end else begin
        ap_phi_mux_storemerge_phi_fu_233_p4 = ap_phi_reg_pp0_iter1_storemerge_reg_229;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln185_reg_1743 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer4_out_blk_n = layer4_out_empty_n;
    end else begin
        layer4_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln185_reg_1743 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer4_out_read = 1'b1;
    end else begin
        layer4_out_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln145_reg_1852) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        layer5_out_blk_n = layer5_out_full_n;
    end else begin
        layer5_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln145_reg_1852) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer5_out_write = 1'b1;
    end else begin
        layer5_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln185_fu_440_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((icmp_ln185_fu_440_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln165_fu_462_p2 = (pX_2 + 32'd1);

assign add_ln172_fu_668_p2 = (sX_2 + select_ln172_fu_660_p3);

assign and_ln145_fu_655_p2 = (icmp_ln145_fu_649_p2 & icmp_ln145_3_reg_1747);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'd1 == and_ln145_reg_1852) & (ap_enable_reg_pp0_iter2 == 1'b1) & (layer5_out_full_n == 1'b0)) | ((icmp_ln185_reg_1743 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (layer4_out_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'd1 == and_ln145_reg_1852) & (ap_enable_reg_pp0_iter2 == 1'b1) & (layer5_out_full_n == 1'b0)) | ((icmp_ln185_reg_1743 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (layer4_out_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'd1 == and_ln145_reg_1852) & (ap_enable_reg_pp0_iter2 == 1'b1) & (layer5_out_full_n == 1'b0)) | ((icmp_ln185_reg_1743 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (layer4_out_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln185_reg_1743 == 1'd0) & (layer4_out_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((1'd1 == and_ln145_reg_1852) & (layer5_out_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_187 = ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_257 = ((icmp_ln185_fu_440_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_storemerge_reg_229 = 'bx;

assign ap_ready = internal_ap_ready;

assign i_iw_6_fu_446_p2 = (i_iw_fu_148 + 4'd1);

assign icmp_ln145_3_fu_456_p2 = (($signed(pX_2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln145_fu_649_p2 = ((sX_2 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln1651_39_fu_743_p2 = ((pool_window_V_80_fu_728_p3 < pool_window_V_81_fu_736_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_40_fu_790_p2 = ((pool_window_V_82_fu_775_p3 < pool_window_V_83_fu_783_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_41_fu_837_p2 = ((pool_window_V_84_fu_822_p3 < pool_window_V_85_fu_830_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_42_fu_884_p2 = ((pool_window_V_86_fu_869_p3 < pool_window_V_87_fu_877_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_43_fu_931_p2 = ((pool_window_V_88_fu_916_p3 < pool_window_V_89_fu_924_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_44_fu_978_p2 = ((pool_window_V_90_fu_963_p3 < pool_window_V_91_fu_971_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_45_fu_1025_p2 = ((pool_window_V_92_fu_1010_p3 < pool_window_V_93_fu_1018_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_46_fu_1072_p2 = ((pool_window_V_94_fu_1057_p3 < pool_window_V_95_fu_1065_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_47_fu_1119_p2 = ((pool_window_V_96_fu_1104_p3 < pool_window_V_97_fu_1112_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_48_fu_1166_p2 = ((pool_window_V_98_fu_1151_p3 < pool_window_V_99_fu_1159_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_49_fu_1213_p2 = ((pool_window_V_100_fu_1198_p3 < pool_window_V_101_fu_1206_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_50_fu_1260_p2 = ((pool_window_V_102_fu_1245_p3 < pool_window_V_103_fu_1253_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_51_fu_1307_p2 = ((pool_window_V_104_fu_1292_p3 < pool_window_V_105_fu_1300_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_52_fu_1354_p2 = ((pool_window_V_106_fu_1339_p3 < pool_window_V_107_fu_1347_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_53_fu_1401_p2 = ((pool_window_V_108_fu_1386_p3 < pool_window_V_109_fu_1394_p3) ? 1'b1 : 1'b0);

assign icmp_ln1651_fu_696_p2 = ((pool_window_V_fu_681_p3 < pool_window_V_79_fu_689_p3) ? 1'b1 : 1'b0);

assign icmp_ln165_fu_468_p2 = ((add_ln165_fu_462_p2 == 32'd8) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_440_p2 = ((i_iw_fu_148 == 4'd8) ? 1'b1 : 1'b0);

assign layer5_out_din = or_ln161_s_fu_1421_p18;

assign or_ln161_s_fu_1421_p18 = {{{{{{{{{{{{{{{{{select_ln65_53_fu_1413_p3}, {1'd0}}, {zext_ln837_38_fu_1382_p1}}, {zext_ln837_37_fu_1335_p1}}, {zext_ln837_36_fu_1288_p1}}, {zext_ln837_35_fu_1241_p1}}, {zext_ln837_34_fu_1194_p1}}, {zext_ln837_33_fu_1147_p1}}, {zext_ln837_32_fu_1100_p1}}, {zext_ln837_31_fu_1053_p1}}, {zext_ln837_30_fu_1006_p1}}, {zext_ln837_29_fu_959_p1}}, {zext_ln837_fu_912_p1}}, {zext_ln137_9_fu_865_p1}}, {zext_ln137_8_fu_818_p1}}, {zext_ln137_7_fu_771_p1}}, {zext_ln137_fu_724_p1}};

assign pool_window_V_100_fu_1198_p3 = {{p_0_11_0_0_0184_fu_196}, {3'd0}};

assign pool_window_V_101_fu_1206_p3 = {{trunc_ln187_48_reg_1834}, {3'd0}};

assign pool_window_V_102_fu_1245_p3 = {{p_0_12_0_0_0187_fu_200}, {3'd0}};

assign pool_window_V_103_fu_1253_p3 = {{trunc_ln187_49_reg_1840}, {3'd0}};

assign pool_window_V_104_fu_1292_p3 = {{p_0_13_0_0_0190_fu_204}, {3'd0}};

assign pool_window_V_105_fu_1300_p3 = {{trunc_ln187_50_reg_1846}, {3'd0}};

assign pool_window_V_106_fu_1339_p3 = {{p_0_14_0_0_0193_fu_208}, {3'd0}};

assign pool_window_V_107_fu_1347_p3 = {{trunc_ln187_s_reg_1762}, {3'd0}};

assign pool_window_V_108_fu_1386_p3 = {{p_0_15_0_0_0196_fu_212}, {3'd0}};

assign pool_window_V_109_fu_1394_p3 = {{trunc_ln187_37_reg_1768}, {3'd0}};

assign pool_window_V_79_fu_689_p3 = {{trunc_ln187_reg_1756}, {3'd0}};

assign pool_window_V_80_fu_728_p3 = {{p_0_1_0_0_0154_fu_156}, {3'd0}};

assign pool_window_V_81_fu_736_p3 = {{trunc_ln187_38_reg_1774}, {3'd0}};

assign pool_window_V_82_fu_775_p3 = {{p_0_2_0_0_0157_fu_160}, {3'd0}};

assign pool_window_V_83_fu_783_p3 = {{trunc_ln187_39_reg_1780}, {3'd0}};

assign pool_window_V_84_fu_822_p3 = {{p_0_3_0_0_0160_fu_164}, {3'd0}};

assign pool_window_V_85_fu_830_p3 = {{trunc_ln187_40_reg_1786}, {3'd0}};

assign pool_window_V_86_fu_869_p3 = {{p_0_4_0_0_0163_fu_168}, {3'd0}};

assign pool_window_V_87_fu_877_p3 = {{trunc_ln187_41_reg_1792}, {3'd0}};

assign pool_window_V_88_fu_916_p3 = {{p_0_5_0_0_0166_fu_172}, {3'd0}};

assign pool_window_V_89_fu_924_p3 = {{trunc_ln187_42_reg_1798}, {3'd0}};

assign pool_window_V_90_fu_963_p3 = {{p_0_6_0_0_0169_fu_176}, {3'd0}};

assign pool_window_V_91_fu_971_p3 = {{trunc_ln187_43_reg_1804}, {3'd0}};

assign pool_window_V_92_fu_1010_p3 = {{p_0_7_0_0_0172_fu_180}, {3'd0}};

assign pool_window_V_93_fu_1018_p3 = {{trunc_ln187_44_reg_1810}, {3'd0}};

assign pool_window_V_94_fu_1057_p3 = {{p_0_8_0_0_0175_fu_184}, {3'd0}};

assign pool_window_V_95_fu_1065_p3 = {{trunc_ln187_45_reg_1816}, {3'd0}};

assign pool_window_V_96_fu_1104_p3 = {{p_0_9_0_0_0178_fu_188}, {3'd0}};

assign pool_window_V_97_fu_1112_p3 = {{trunc_ln187_46_reg_1822}, {3'd0}};

assign pool_window_V_98_fu_1151_p3 = {{p_0_10_0_0_0181_fu_192}, {3'd0}};

assign pool_window_V_99_fu_1159_p3 = {{trunc_ln187_47_reg_1828}, {3'd0}};

assign pool_window_V_fu_681_p3 = {{p_0_0_0_0_0151_fu_152}, {3'd0}};

assign res_pack_data_7_fu_763_p3 = {{select_ln65_39_fu_755_p3}, {1'd0}};

assign res_pack_data_8_fu_810_p3 = {{select_ln65_40_fu_802_p3}, {1'd0}};

assign res_pack_data_9_fu_857_p3 = {{select_ln65_41_fu_849_p3}, {1'd0}};

assign res_pack_data_fu_716_p3 = {{select_ln65_fu_708_p3}, {1'd0}};

assign select_ln172_fu_660_p3 = ((icmp_ln145_fu_649_p2[0:0] == 1'b1) ? 32'd4294967295 : 32'd1);

assign select_ln65_39_fu_755_p3 = ((xor_ln1651_39_fu_749_p2[0:0] == 1'b1) ? pool_window_V_80_fu_728_p3 : pool_window_V_81_fu_736_p3);

assign select_ln65_40_fu_802_p3 = ((xor_ln1651_40_fu_796_p2[0:0] == 1'b1) ? pool_window_V_82_fu_775_p3 : pool_window_V_83_fu_783_p3);

assign select_ln65_41_fu_849_p3 = ((xor_ln1651_41_fu_843_p2[0:0] == 1'b1) ? pool_window_V_84_fu_822_p3 : pool_window_V_85_fu_830_p3);

assign select_ln65_42_fu_896_p3 = ((xor_ln1651_42_fu_890_p2[0:0] == 1'b1) ? pool_window_V_86_fu_869_p3 : pool_window_V_87_fu_877_p3);

assign select_ln65_43_fu_943_p3 = ((xor_ln1651_43_fu_937_p2[0:0] == 1'b1) ? pool_window_V_88_fu_916_p3 : pool_window_V_89_fu_924_p3);

assign select_ln65_44_fu_990_p3 = ((xor_ln1651_44_fu_984_p2[0:0] == 1'b1) ? pool_window_V_90_fu_963_p3 : pool_window_V_91_fu_971_p3);

assign select_ln65_45_fu_1037_p3 = ((xor_ln1651_45_fu_1031_p2[0:0] == 1'b1) ? pool_window_V_92_fu_1010_p3 : pool_window_V_93_fu_1018_p3);

assign select_ln65_46_fu_1084_p3 = ((xor_ln1651_46_fu_1078_p2[0:0] == 1'b1) ? pool_window_V_94_fu_1057_p3 : pool_window_V_95_fu_1065_p3);

assign select_ln65_47_fu_1131_p3 = ((xor_ln1651_47_fu_1125_p2[0:0] == 1'b1) ? pool_window_V_96_fu_1104_p3 : pool_window_V_97_fu_1112_p3);

assign select_ln65_48_fu_1178_p3 = ((xor_ln1651_48_fu_1172_p2[0:0] == 1'b1) ? pool_window_V_98_fu_1151_p3 : pool_window_V_99_fu_1159_p3);

assign select_ln65_49_fu_1225_p3 = ((xor_ln1651_49_fu_1219_p2[0:0] == 1'b1) ? pool_window_V_100_fu_1198_p3 : pool_window_V_101_fu_1206_p3);

assign select_ln65_50_fu_1272_p3 = ((xor_ln1651_50_fu_1266_p2[0:0] == 1'b1) ? pool_window_V_102_fu_1245_p3 : pool_window_V_103_fu_1253_p3);

assign select_ln65_51_fu_1319_p3 = ((xor_ln1651_51_fu_1313_p2[0:0] == 1'b1) ? pool_window_V_104_fu_1292_p3 : pool_window_V_105_fu_1300_p3);

assign select_ln65_52_fu_1366_p3 = ((xor_ln1651_52_fu_1360_p2[0:0] == 1'b1) ? pool_window_V_106_fu_1339_p3 : pool_window_V_107_fu_1347_p3);

assign select_ln65_53_fu_1413_p3 = ((xor_ln1651_53_fu_1407_p2[0:0] == 1'b1) ? pool_window_V_108_fu_1386_p3 : pool_window_V_109_fu_1394_p3);

assign select_ln65_fu_708_p3 = ((xor_ln1651_fu_702_p2[0:0] == 1'b1) ? pool_window_V_fu_681_p3 : pool_window_V_79_fu_689_p3);

assign shl_ln841_27_fu_998_p3 = {{select_ln65_44_fu_990_p3}, {1'd0}};

assign shl_ln841_28_fu_1045_p3 = {{select_ln65_45_fu_1037_p3}, {1'd0}};

assign shl_ln841_29_fu_1092_p3 = {{select_ln65_46_fu_1084_p3}, {1'd0}};

assign shl_ln841_30_fu_1139_p3 = {{select_ln65_47_fu_1131_p3}, {1'd0}};

assign shl_ln841_31_fu_1186_p3 = {{select_ln65_48_fu_1178_p3}, {1'd0}};

assign shl_ln841_32_fu_1233_p3 = {{select_ln65_49_fu_1225_p3}, {1'd0}};

assign shl_ln841_33_fu_1280_p3 = {{select_ln65_50_fu_1272_p3}, {1'd0}};

assign shl_ln841_34_fu_1327_p3 = {{select_ln65_51_fu_1319_p3}, {1'd0}};

assign shl_ln841_35_fu_1374_p3 = {{select_ln65_52_fu_1366_p3}, {1'd0}};

assign shl_ln841_s_fu_951_p3 = {{select_ln65_43_fu_943_p3}, {1'd0}};

assign shl_ln_fu_904_p3 = {{select_ln65_42_fu_896_p3}, {1'd0}};

assign start_out = real_start;

assign trunc_ln187_fu_491_p1 = layer4_out_dout[5:0];

assign xor_ln1651_39_fu_749_p2 = (icmp_ln1651_39_fu_743_p2 ^ 1'd1);

assign xor_ln1651_40_fu_796_p2 = (icmp_ln1651_40_fu_790_p2 ^ 1'd1);

assign xor_ln1651_41_fu_843_p2 = (icmp_ln1651_41_fu_837_p2 ^ 1'd1);

assign xor_ln1651_42_fu_890_p2 = (icmp_ln1651_42_fu_884_p2 ^ 1'd1);

assign xor_ln1651_43_fu_937_p2 = (icmp_ln1651_43_fu_931_p2 ^ 1'd1);

assign xor_ln1651_44_fu_984_p2 = (icmp_ln1651_44_fu_978_p2 ^ 1'd1);

assign xor_ln1651_45_fu_1031_p2 = (icmp_ln1651_45_fu_1025_p2 ^ 1'd1);

assign xor_ln1651_46_fu_1078_p2 = (icmp_ln1651_46_fu_1072_p2 ^ 1'd1);

assign xor_ln1651_47_fu_1125_p2 = (icmp_ln1651_47_fu_1119_p2 ^ 1'd1);

assign xor_ln1651_48_fu_1172_p2 = (icmp_ln1651_48_fu_1166_p2 ^ 1'd1);

assign xor_ln1651_49_fu_1219_p2 = (icmp_ln1651_49_fu_1213_p2 ^ 1'd1);

assign xor_ln1651_50_fu_1266_p2 = (icmp_ln1651_50_fu_1260_p2 ^ 1'd1);

assign xor_ln1651_51_fu_1313_p2 = (icmp_ln1651_51_fu_1307_p2 ^ 1'd1);

assign xor_ln1651_52_fu_1360_p2 = (icmp_ln1651_52_fu_1354_p2 ^ 1'd1);

assign xor_ln1651_53_fu_1407_p2 = (icmp_ln1651_53_fu_1401_p2 ^ 1'd1);

assign xor_ln1651_fu_702_p2 = (icmp_ln1651_fu_696_p2 ^ 1'd1);

assign zext_ln137_7_fu_771_p1 = res_pack_data_7_fu_763_p3;

assign zext_ln137_8_fu_818_p1 = res_pack_data_8_fu_810_p3;

assign zext_ln137_9_fu_865_p1 = res_pack_data_9_fu_857_p3;

assign zext_ln137_fu_724_p1 = res_pack_data_fu_716_p3;

assign zext_ln837_29_fu_959_p1 = shl_ln841_s_fu_951_p3;

assign zext_ln837_30_fu_1006_p1 = shl_ln841_27_fu_998_p3;

assign zext_ln837_31_fu_1053_p1 = shl_ln841_28_fu_1045_p3;

assign zext_ln837_32_fu_1100_p1 = shl_ln841_29_fu_1092_p3;

assign zext_ln837_33_fu_1147_p1 = shl_ln841_30_fu_1139_p3;

assign zext_ln837_34_fu_1194_p1 = shl_ln841_31_fu_1186_p3;

assign zext_ln837_35_fu_1241_p1 = shl_ln841_32_fu_1233_p3;

assign zext_ln837_36_fu_1288_p1 = shl_ln841_33_fu_1280_p3;

assign zext_ln837_37_fu_1335_p1 = shl_ln841_34_fu_1327_p3;

assign zext_ln837_38_fu_1382_p1 = shl_ln841_35_fu_1374_p3;

assign zext_ln837_fu_912_p1 = shl_ln_fu_904_p3;

endmodule //alveo_hls4ml_pooling1d_cl_array_array_ap_fixed_16_6_5_3_0_16u_config5_s
