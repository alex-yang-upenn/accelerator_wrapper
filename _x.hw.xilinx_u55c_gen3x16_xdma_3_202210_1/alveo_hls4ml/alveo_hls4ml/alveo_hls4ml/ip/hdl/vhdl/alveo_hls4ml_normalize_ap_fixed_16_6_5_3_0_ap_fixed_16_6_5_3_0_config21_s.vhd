-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity alveo_hls4ml_normalize_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config21_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (14 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (14 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (14 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (14 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (14 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (14 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (14 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (14 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (14 downto 0);
    p_read9 : IN STD_LOGIC_VECTOR (14 downto 0);
    p_read10 : IN STD_LOGIC_VECTOR (14 downto 0);
    p_read11 : IN STD_LOGIC_VECTOR (14 downto 0);
    p_read12 : IN STD_LOGIC_VECTOR (14 downto 0);
    p_read13 : IN STD_LOGIC_VECTOR (14 downto 0);
    p_read14 : IN STD_LOGIC_VECTOR (14 downto 0);
    p_read15 : IN STD_LOGIC_VECTOR (14 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of alveo_hls4ml_normalize_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config21_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv26_100000 : STD_LOGIC_VECTOR (25 downto 0) := "00000100000000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal r_V_fu_158_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1270_fu_166_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1347_fu_170_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_1_fu_186_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1270_1_fu_194_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1347_1_fu_198_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_2_fu_214_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1270_2_fu_222_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1347_2_fu_226_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_3_fu_242_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1270_3_fu_250_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1347_3_fu_254_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_4_fu_270_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1270_4_fu_278_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1347_4_fu_282_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_5_fu_298_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1270_5_fu_306_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1347_5_fu_310_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_6_fu_326_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1270_6_fu_334_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1347_6_fu_338_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_7_fu_354_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1270_7_fu_362_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1347_7_fu_366_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_8_fu_382_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1270_8_fu_390_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1347_8_fu_394_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_9_fu_410_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1270_9_fu_418_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1347_9_fu_422_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_10_fu_438_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1270_10_fu_446_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1347_10_fu_450_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_11_fu_466_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1270_11_fu_474_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1347_11_fu_478_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_12_fu_494_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1270_12_fu_502_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1347_12_fu_506_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_13_fu_522_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1270_13_fu_530_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1347_13_fu_534_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_14_fu_550_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1270_14_fu_558_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1347_14_fu_562_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_15_fu_578_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1270_15_fu_586_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1347_15_fu_590_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_4_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_5_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_6_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_7_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_8_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_9_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_10_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_11_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_12_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_13_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_14_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_15_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv16_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_0_preg <= add_ln1347_fu_170_p2(25 downto 10);
                end if; 
            end if;
        end if;
    end process;


    ap_return_10_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_10_preg <= ap_const_lv16_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_10_preg <= add_ln1347_10_fu_450_p2(25 downto 10);
                end if; 
            end if;
        end if;
    end process;


    ap_return_11_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_11_preg <= ap_const_lv16_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_11_preg <= add_ln1347_11_fu_478_p2(25 downto 10);
                end if; 
            end if;
        end if;
    end process;


    ap_return_12_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_12_preg <= ap_const_lv16_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_12_preg <= add_ln1347_12_fu_506_p2(25 downto 10);
                end if; 
            end if;
        end if;
    end process;


    ap_return_13_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_13_preg <= ap_const_lv16_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_13_preg <= add_ln1347_13_fu_534_p2(25 downto 10);
                end if; 
            end if;
        end if;
    end process;


    ap_return_14_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_14_preg <= ap_const_lv16_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_14_preg <= add_ln1347_14_fu_562_p2(25 downto 10);
                end if; 
            end if;
        end if;
    end process;


    ap_return_15_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_15_preg <= ap_const_lv16_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_15_preg <= add_ln1347_15_fu_590_p2(25 downto 10);
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv16_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_1_preg <= add_ln1347_1_fu_198_p2(25 downto 10);
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv16_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_2_preg <= add_ln1347_2_fu_226_p2(25 downto 10);
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg <= ap_const_lv16_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_3_preg <= add_ln1347_3_fu_254_p2(25 downto 10);
                end if; 
            end if;
        end if;
    end process;


    ap_return_4_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_4_preg <= ap_const_lv16_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_4_preg <= add_ln1347_4_fu_282_p2(25 downto 10);
                end if; 
            end if;
        end if;
    end process;


    ap_return_5_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_5_preg <= ap_const_lv16_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_5_preg <= add_ln1347_5_fu_310_p2(25 downto 10);
                end if; 
            end if;
        end if;
    end process;


    ap_return_6_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_6_preg <= ap_const_lv16_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_6_preg <= add_ln1347_6_fu_338_p2(25 downto 10);
                end if; 
            end if;
        end if;
    end process;


    ap_return_7_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_7_preg <= ap_const_lv16_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_7_preg <= add_ln1347_7_fu_366_p2(25 downto 10);
                end if; 
            end if;
        end if;
    end process;


    ap_return_8_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_8_preg <= ap_const_lv16_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_8_preg <= add_ln1347_8_fu_394_p2(25 downto 10);
                end if; 
            end if;
        end if;
    end process;


    ap_return_9_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_9_preg <= ap_const_lv16_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_9_preg <= add_ln1347_9_fu_422_p2(25 downto 10);
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1347_10_fu_450_p2 <= std_logic_vector(signed(sext_ln1270_10_fu_446_p1) + signed(ap_const_lv26_100000));
    add_ln1347_11_fu_478_p2 <= std_logic_vector(signed(sext_ln1270_11_fu_474_p1) + signed(ap_const_lv26_100000));
    add_ln1347_12_fu_506_p2 <= std_logic_vector(signed(sext_ln1270_12_fu_502_p1) + signed(ap_const_lv26_100000));
    add_ln1347_13_fu_534_p2 <= std_logic_vector(signed(sext_ln1270_13_fu_530_p1) + signed(ap_const_lv26_100000));
    add_ln1347_14_fu_562_p2 <= std_logic_vector(signed(sext_ln1270_14_fu_558_p1) + signed(ap_const_lv26_100000));
    add_ln1347_15_fu_590_p2 <= std_logic_vector(signed(sext_ln1270_15_fu_586_p1) + signed(ap_const_lv26_100000));
    add_ln1347_1_fu_198_p2 <= std_logic_vector(signed(sext_ln1270_1_fu_194_p1) + signed(ap_const_lv26_100000));
    add_ln1347_2_fu_226_p2 <= std_logic_vector(signed(sext_ln1270_2_fu_222_p1) + signed(ap_const_lv26_100000));
    add_ln1347_3_fu_254_p2 <= std_logic_vector(signed(sext_ln1270_3_fu_250_p1) + signed(ap_const_lv26_100000));
    add_ln1347_4_fu_282_p2 <= std_logic_vector(signed(sext_ln1270_4_fu_278_p1) + signed(ap_const_lv26_100000));
    add_ln1347_5_fu_310_p2 <= std_logic_vector(signed(sext_ln1270_5_fu_306_p1) + signed(ap_const_lv26_100000));
    add_ln1347_6_fu_338_p2 <= std_logic_vector(signed(sext_ln1270_6_fu_334_p1) + signed(ap_const_lv26_100000));
    add_ln1347_7_fu_366_p2 <= std_logic_vector(signed(sext_ln1270_7_fu_362_p1) + signed(ap_const_lv26_100000));
    add_ln1347_8_fu_394_p2 <= std_logic_vector(signed(sext_ln1270_8_fu_390_p1) + signed(ap_const_lv26_100000));
    add_ln1347_9_fu_422_p2 <= std_logic_vector(signed(sext_ln1270_9_fu_418_p1) + signed(ap_const_lv26_100000));
    add_ln1347_fu_170_p2 <= std_logic_vector(signed(sext_ln1270_fu_166_p1) + signed(ap_const_lv26_100000));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, add_ln1347_fu_170_p2, ap_return_0_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_0 <= add_ln1347_fu_170_p2(25 downto 10);
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, add_ln1347_1_fu_198_p2, ap_return_1_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_1 <= add_ln1347_1_fu_198_p2(25 downto 10);
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_10_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, add_ln1347_10_fu_450_p2, ap_return_10_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_10 <= add_ln1347_10_fu_450_p2(25 downto 10);
        else 
            ap_return_10 <= ap_return_10_preg;
        end if; 
    end process;


    ap_return_11_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, add_ln1347_11_fu_478_p2, ap_return_11_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_11 <= add_ln1347_11_fu_478_p2(25 downto 10);
        else 
            ap_return_11 <= ap_return_11_preg;
        end if; 
    end process;


    ap_return_12_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, add_ln1347_12_fu_506_p2, ap_return_12_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_12 <= add_ln1347_12_fu_506_p2(25 downto 10);
        else 
            ap_return_12 <= ap_return_12_preg;
        end if; 
    end process;


    ap_return_13_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, add_ln1347_13_fu_534_p2, ap_return_13_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_13 <= add_ln1347_13_fu_534_p2(25 downto 10);
        else 
            ap_return_13 <= ap_return_13_preg;
        end if; 
    end process;


    ap_return_14_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, add_ln1347_14_fu_562_p2, ap_return_14_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_14 <= add_ln1347_14_fu_562_p2(25 downto 10);
        else 
            ap_return_14 <= ap_return_14_preg;
        end if; 
    end process;


    ap_return_15_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, add_ln1347_15_fu_590_p2, ap_return_15_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_15 <= add_ln1347_15_fu_590_p2(25 downto 10);
        else 
            ap_return_15 <= ap_return_15_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, add_ln1347_2_fu_226_p2, ap_return_2_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_2 <= add_ln1347_2_fu_226_p2(25 downto 10);
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, add_ln1347_3_fu_254_p2, ap_return_3_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_3 <= add_ln1347_3_fu_254_p2(25 downto 10);
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;


    ap_return_4_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, add_ln1347_4_fu_282_p2, ap_return_4_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_4 <= add_ln1347_4_fu_282_p2(25 downto 10);
        else 
            ap_return_4 <= ap_return_4_preg;
        end if; 
    end process;


    ap_return_5_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, add_ln1347_5_fu_310_p2, ap_return_5_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_5 <= add_ln1347_5_fu_310_p2(25 downto 10);
        else 
            ap_return_5 <= ap_return_5_preg;
        end if; 
    end process;


    ap_return_6_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, add_ln1347_6_fu_338_p2, ap_return_6_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_6 <= add_ln1347_6_fu_338_p2(25 downto 10);
        else 
            ap_return_6 <= ap_return_6_preg;
        end if; 
    end process;


    ap_return_7_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, add_ln1347_7_fu_366_p2, ap_return_7_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_7 <= add_ln1347_7_fu_366_p2(25 downto 10);
        else 
            ap_return_7 <= ap_return_7_preg;
        end if; 
    end process;


    ap_return_8_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, add_ln1347_8_fu_394_p2, ap_return_8_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_8 <= add_ln1347_8_fu_394_p2(25 downto 10);
        else 
            ap_return_8 <= ap_return_8_preg;
        end if; 
    end process;


    ap_return_9_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, add_ln1347_9_fu_422_p2, ap_return_9_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_9 <= add_ln1347_9_fu_422_p2(25 downto 10);
        else 
            ap_return_9 <= ap_return_9_preg;
        end if; 
    end process;

    r_V_10_fu_438_p3 <= (p_read10 & ap_const_lv10_0);
    r_V_11_fu_466_p3 <= (p_read11 & ap_const_lv10_0);
    r_V_12_fu_494_p3 <= (p_read12 & ap_const_lv10_0);
    r_V_13_fu_522_p3 <= (p_read13 & ap_const_lv10_0);
    r_V_14_fu_550_p3 <= (p_read14 & ap_const_lv10_0);
    r_V_15_fu_578_p3 <= (p_read15 & ap_const_lv10_0);
    r_V_1_fu_186_p3 <= (p_read1 & ap_const_lv10_0);
    r_V_2_fu_214_p3 <= (p_read2 & ap_const_lv10_0);
    r_V_3_fu_242_p3 <= (p_read3 & ap_const_lv10_0);
    r_V_4_fu_270_p3 <= (p_read4 & ap_const_lv10_0);
    r_V_5_fu_298_p3 <= (p_read5 & ap_const_lv10_0);
    r_V_6_fu_326_p3 <= (p_read6 & ap_const_lv10_0);
    r_V_7_fu_354_p3 <= (p_read7 & ap_const_lv10_0);
    r_V_8_fu_382_p3 <= (p_read8 & ap_const_lv10_0);
    r_V_9_fu_410_p3 <= (p_read9 & ap_const_lv10_0);
    r_V_fu_158_p3 <= (p_read & ap_const_lv10_0);
        sext_ln1270_10_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_10_fu_438_p3),26));

        sext_ln1270_11_fu_474_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_11_fu_466_p3),26));

        sext_ln1270_12_fu_502_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_12_fu_494_p3),26));

        sext_ln1270_13_fu_530_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_13_fu_522_p3),26));

        sext_ln1270_14_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_14_fu_550_p3),26));

        sext_ln1270_15_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_15_fu_578_p3),26));

        sext_ln1270_1_fu_194_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_1_fu_186_p3),26));

        sext_ln1270_2_fu_222_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_2_fu_214_p3),26));

        sext_ln1270_3_fu_250_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_3_fu_242_p3),26));

        sext_ln1270_4_fu_278_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_4_fu_270_p3),26));

        sext_ln1270_5_fu_306_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_5_fu_298_p3),26));

        sext_ln1270_6_fu_334_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_6_fu_326_p3),26));

        sext_ln1270_7_fu_362_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_7_fu_354_p3),26));

        sext_ln1270_8_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_8_fu_382_p3),26));

        sext_ln1270_9_fu_418_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_9_fu_410_p3),26));

        sext_ln1270_fu_166_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_fu_158_p3),26));

end behav;
