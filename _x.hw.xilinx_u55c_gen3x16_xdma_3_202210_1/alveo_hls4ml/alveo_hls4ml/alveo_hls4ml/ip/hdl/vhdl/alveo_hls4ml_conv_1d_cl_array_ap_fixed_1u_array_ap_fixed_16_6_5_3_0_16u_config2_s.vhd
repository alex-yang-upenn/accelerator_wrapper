-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity alveo_hls4ml_conv_1d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_16u_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    layer25_out_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    layer25_out_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    layer25_out_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    layer25_out_empty_n : IN STD_LOGIC;
    layer25_out_read : OUT STD_LOGIC;
    layer2_out_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    layer2_out_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    layer2_out_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    layer2_out_full_n : IN STD_LOGIC;
    layer2_out_write : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC );
end;


architecture behav of alveo_hls4ml_conv_1d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_16u_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv21_1FFFF3 : STD_LOGIC_VECTOR (20 downto 0) := "111111111111111110011";
    constant ap_const_lv21_13 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010011";
    constant ap_const_lv21_B : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001011";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv16_FC00 : STD_LOGIC_VECTOR (15 downto 0) := "1111110000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal internal_ap_ready : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln21_reg_3017 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal and_ln360_reg_3082 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln360_reg_3082_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln21_fu_1841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal sX_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal layer25_out_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal layer2_out_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln21_reg_3017_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln360_1_fu_1857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln360_1_reg_3021 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln384_fu_1869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln384_reg_3026 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_V_7_reg_3030 : STD_LOGIC_VECTOR (15 downto 0);
    signal a_V_1_reg_3039 : STD_LOGIC_VECTOR (15 downto 0);
    signal a_V_2_reg_3046 : STD_LOGIC_VECTOR (15 downto 0);
    signal a_V_3_reg_3051 : STD_LOGIC_VECTOR (15 downto 0);
    signal a_V_4_reg_3058 : STD_LOGIC_VECTOR (15 downto 0);
    signal a_V_5_reg_3066 : STD_LOGIC_VECTOR (15 downto 0);
    signal a_V_6_reg_3074 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln360_fu_1962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln818_109_reg_3086 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_111_reg_3091 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_115_reg_3096 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln818_119_reg_3101 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln818_121_reg_3106 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln818_126_reg_3111 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_129_fu_2230_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_129_reg_3116 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_142_fu_2236_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_142_reg_3121 : STD_LOGIC_VECTOR (15 downto 0);
    signal res_out_V_fu_2861_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal res_out_V_reg_3126 : STD_LOGIC_VECTOR (15 downto 0);
    signal res_out_V_4_fu_2906_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal res_out_V_4_reg_3143 : STD_LOGIC_VECTOR (15 downto 0);
    signal res_out_V_2_fu_2934_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal res_out_V_2_reg_3148 : STD_LOGIC_VECTOR (15 downto 0);
    signal res_out_V_3_fu_2983_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal res_out_V_3_reg_3153 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_storemerge_phi_fu_153_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln391_fu_2248_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_reg_149 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge_reg_149 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln384_fu_1863_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_iw_fu_132 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_iw_8_fu_1847_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_iw_7 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal r_V_178_fu_178_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1273_7_fu_2023_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_178_fu_178_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln1270_fu_242_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_176_fu_253_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_176_fu_253_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln360_fu_1956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln1273_65_fu_1967_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1273_65_fu_1967_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_171_fu_1975_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1273_67_fu_1991_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1273_67_fu_1991_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1273_6_fu_1999_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_173_fu_2003_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln818_106_fu_2009_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1273_7_fu_2023_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_176_fu_253_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1273_69_fu_2039_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1273_69_fu_2039_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln1273_70_fu_2051_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1273_70_fu_2051_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1273_9_fu_2059_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1273_8_fu_2047_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_177_fu_2063_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln818_110_fu_2069_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_178_fu_178_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1273_10_fu_2093_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1273_73_fu_2097_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1273_73_fu_2097_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1273_13_fu_2105_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1273_10_fu_2093_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_182_fu_2109_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1273_14_fu_2125_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1273_77_fu_2129_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1273_77_fu_2129_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1273_18_fu_2137_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1273_14_fu_2125_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_186_fu_2141_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln1273_79_fu_2157_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1273_19_fu_2165_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_188_fu_2169_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln1273_82_fu_2190_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1273_82_fu_2190_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_190_fu_2198_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1270_fu_242_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln818_124_fu_2204_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_128_fu_2224_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_104_fu_1981_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln818_1_fu_2019_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln818_2_fu_2079_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln391_fu_2242_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1273_fu_2272_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_2276_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_2276_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_fu_2284_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1273_s_fu_2300_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1273_s_fu_2300_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln1273_63_fu_2312_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1273_63_fu_2312_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1273_1_fu_2308_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1273_2_fu_2320_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_169_fu_2324_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln818_s_fu_2330_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1273_64_fu_2344_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1273_64_fu_2344_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1273_fu_2272_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1273_3_fu_2352_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_170_fu_2356_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1273_66_fu_2375_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1273_5_fu_2382_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1273_4_fu_2372_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_172_fu_2386_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_174_fu_2402_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1273_68_fu_2418_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_175_fu_2425_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1273_71_fu_2444_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_179_fu_2451_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1273_72_fu_2467_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1273_11_fu_2441_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1273_12_fu_2474_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_180_fu_2478_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_181_fu_2494_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1273_74_fu_2516_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_183_fu_2523_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1273_75_fu_2539_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal shl_ln1273_76_fu_2550_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1273_16_fu_2546_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1273_17_fu_2557_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_184_fu_2561_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1273_15_fu_2513_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_185_fu_2577_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1273_78_fu_2596_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_187_fu_2603_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1273_80_fu_2622_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal shl_ln1273_81_fu_2633_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1273_21_fu_2629_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1273_22_fu_2640_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_189_fu_2644_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln818_123_fu_2660_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1273_83_fu_2676_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal shl_ln1273_84_fu_2687_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1273_24_fu_2683_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1273_25_fu_2694_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_191_fu_2698_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1273_85_fu_2714_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1273_26_fu_2721_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1273_23_fu_2673_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_192_fu_2725_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln818_127_fu_2731_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1273_86_fu_2745_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_193_fu_2752_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln818_129_fu_2768_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1273_87_fu_2781_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal shl_ln1273_88_fu_2792_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1273_28_fu_2788_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1273_29_fu_2799_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_194_fu_2803_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln818_131_fu_2819_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln818_120_fu_2609_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_116_fu_2529_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_112_fu_2457_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln_fu_2290_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_125_fu_2838_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_fu_2832_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_128_fu_2758_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_108_fu_2431_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_127_fu_2850_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_130_fu_2856_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_126_fu_2844_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_105_fu_2392_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_113_fu_2484_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_117_fu_2567_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_133_fu_2872_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_132_fu_2867_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_125_fu_2704_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln818_fu_2340_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1273_27_fu_2777_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1273_20_fu_2619_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln813_136_fu_2890_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln813_34_fu_2896_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_135_fu_2884_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_137_fu_2900_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_134_fu_2878_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_118_fu_2583_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_122_fu_2650_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_139_fu_2912_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_114_fu_2500_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_130_fu_2809_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_141_fu_2924_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_143_fu_2929_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_140_fu_2918_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_103_fu_2362_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_107_fu_2408_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln818_3_fu_2741_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_146_fu_2946_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_145_fu_2940_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln813_fu_2828_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln70_fu_2510_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln813_148_fu_2957_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln70_1_fu_2593_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln70_2_fu_2669_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln813_149_fu_2967_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln813_36_fu_2973_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln813_35_fu_2963_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_150_fu_2977_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln813_147_fu_2951_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_196 : BOOLEAN;
    signal ap_condition_235 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component alveo_hls4ml_mul_16s_5s_21_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component alveo_hls4ml_mul_16s_6ns_21_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component alveo_hls4ml_mul_16s_5ns_21_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component alveo_hls4ml_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    mul_16s_5s_21_1_1_U12 : component alveo_hls4ml_mul_16s_5s_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 5,
        dout_WIDTH => 21)
    port map (
        din0 => r_V_178_fu_178_p0,
        din1 => r_V_178_fu_178_p1,
        dout => r_V_178_fu_178_p2);

    mul_16s_6ns_21_1_1_U13 : component alveo_hls4ml_mul_16s_6ns_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 6,
        dout_WIDTH => 21)
    port map (
        din0 => void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data,
        din1 => mul_ln1270_fu_242_p1,
        dout => mul_ln1270_fu_242_p2);

    mul_16s_5ns_21_1_1_U14 : component alveo_hls4ml_mul_16s_5ns_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 5,
        dout_WIDTH => 21)
    port map (
        din0 => r_V_176_fu_253_p0,
        din1 => r_V_176_fu_253_p1,
        dout => r_V_176_fu_253_p2);

    flow_control_loop_pipe_U : component alveo_hls4ml_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => real_start,
        ap_ready => internal_ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_storemerge_reg_149_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_196)) then
                if (((icmp_ln21_fu_1841_p2 = ap_const_lv1_0) and (icmp_ln384_fu_1869_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_storemerge_reg_149 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_storemerge_reg_149 <= ap_phi_reg_pp0_iter0_storemerge_reg_149;
                end if;
            end if; 
        end if;
    end process;

    i_iw_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_196)) then
                if ((icmp_ln21_fu_1841_p2 = ap_const_lv1_0)) then 
                    i_iw_fu_132 <= i_iw_8_fu_1847_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_iw_fu_132 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;

    pX_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_235)) then
                if ((icmp_ln384_fu_1869_p2 = ap_const_lv1_1)) then 
                    pX_3 <= ap_const_lv32_0;
                elsif ((icmp_ln384_fu_1869_p2 = ap_const_lv1_0)) then 
                    pX_3 <= add_ln384_fu_1863_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln21_reg_3017 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                a_V_1_reg_3039 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_5;
                a_V_2_reg_3046 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_4;
                a_V_3_reg_3051 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_3;
                a_V_4_reg_3058 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_2;
                a_V_5_reg_3066 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_1;
                a_V_6_reg_3074 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data;
                a_V_7_reg_3030 <= layer25_out_dout;
                and_ln360_reg_3082 <= and_ln360_fu_1962_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln360_fu_1962_p2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln813_129_reg_3116 <= add_ln813_129_fu_2230_p2;
                add_ln813_142_reg_3121 <= add_ln813_142_fu_2236_p2;
                trunc_ln818_109_reg_3086 <= r_V_176_fu_253_p2(20 downto 5);
                trunc_ln818_111_reg_3091 <= r_V_178_fu_178_p2(20 downto 5);
                trunc_ln818_115_reg_3096 <= r_V_182_fu_2109_p2(18 downto 5);
                trunc_ln818_119_reg_3101 <= r_V_186_fu_2141_p2(18 downto 5);
                trunc_ln818_121_reg_3106 <= r_V_188_fu_2169_p2(17 downto 5);
                trunc_ln818_126_reg_3111 <= mul_ln1270_fu_242_p2(20 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                and_ln360_reg_3082_pp0_iter2_reg <= and_ln360_reg_3082;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln21_reg_3017 <= icmp_ln21_fu_1841_p2;
                icmp_ln21_reg_3017_pp0_iter1_reg <= icmp_ln21_reg_3017;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_fu_1841_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln360_1_reg_3021 <= icmp_ln360_1_fu_1857_p2;
                icmp_ln384_reg_3026 <= icmp_ln384_fu_1869_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln360_reg_3082))) then
                res_out_V_2_reg_3148 <= res_out_V_2_fu_2934_p2;
                res_out_V_3_reg_3153 <= res_out_V_3_fu_2983_p2;
                res_out_V_4_reg_3143 <= res_out_V_4_fu_2906_p2;
                res_out_V_reg_3126 <= res_out_V_fu_2861_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                sX_3 <= ap_phi_mux_storemerge_phi_fu_153_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln21_reg_3017 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data <= layer25_out_dout;
                void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_1 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data;
                void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_2 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_1;
                void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_3 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_2;
                void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_4 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_3;
                void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_5 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln21_reg_3017_pp0_iter1_reg = ap_const_lv1_0))) then
                void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_6 <= a_V_1_reg_3039;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln384_fu_1863_p2 <= std_logic_vector(unsigned(pX_3) + unsigned(ap_const_lv32_1));
    add_ln391_fu_2242_p2 <= std_logic_vector(unsigned(sX_3) + unsigned(ap_const_lv32_1));
    add_ln813_125_fu_2838_p2 <= std_logic_vector(unsigned(trunc_ln818_112_fu_2457_p4) + unsigned(trunc_ln_fu_2290_p4));
    add_ln813_126_fu_2844_p2 <= std_logic_vector(unsigned(add_ln813_125_fu_2838_p2) + unsigned(add_ln813_fu_2832_p2));
    add_ln813_127_fu_2850_p2 <= std_logic_vector(unsigned(trunc_ln818_128_fu_2758_p4) + unsigned(trunc_ln818_108_fu_2431_p4));
    add_ln813_128_fu_2224_p2 <= std_logic_vector(unsigned(trunc_ln818_124_fu_2204_p4) + unsigned(ap_const_lv16_FC00));
    add_ln813_129_fu_2230_p2 <= std_logic_vector(unsigned(add_ln813_128_fu_2224_p2) + unsigned(trunc_ln818_104_fu_1981_p4));
    add_ln813_130_fu_2856_p2 <= std_logic_vector(unsigned(add_ln813_129_reg_3116) + unsigned(add_ln813_127_fu_2850_p2));
    add_ln813_132_fu_2867_p2 <= std_logic_vector(unsigned(trunc_ln818_105_fu_2392_p4) + unsigned(trunc_ln818_109_reg_3086));
    add_ln813_133_fu_2872_p2 <= std_logic_vector(unsigned(trunc_ln818_113_fu_2484_p4) + unsigned(trunc_ln818_117_fu_2567_p4));
    add_ln813_134_fu_2878_p2 <= std_logic_vector(unsigned(add_ln813_133_fu_2872_p2) + unsigned(add_ln813_132_fu_2867_p2));
    add_ln813_135_fu_2884_p2 <= std_logic_vector(unsigned(trunc_ln818_125_fu_2704_p4) + unsigned(sext_ln818_fu_2340_p1));
    add_ln813_136_fu_2890_p2 <= std_logic_vector(signed(sext_ln1273_27_fu_2777_p1) + signed(sext_ln1273_20_fu_2619_p1));
    add_ln813_137_fu_2900_p2 <= std_logic_vector(signed(sext_ln813_34_fu_2896_p1) + signed(add_ln813_135_fu_2884_p2));
    add_ln813_139_fu_2912_p2 <= std_logic_vector(unsigned(trunc_ln818_118_fu_2583_p4) + unsigned(trunc_ln818_122_fu_2650_p4));
    add_ln813_140_fu_2918_p2 <= std_logic_vector(unsigned(add_ln813_139_fu_2912_p2) + unsigned(trunc_ln818_114_fu_2500_p4));
    add_ln813_141_fu_2924_p2 <= std_logic_vector(unsigned(trunc_ln818_126_reg_3111) + unsigned(trunc_ln818_130_fu_2809_p4));
    add_ln813_142_fu_2236_p2 <= std_logic_vector(signed(sext_ln818_1_fu_2019_p1) + signed(sext_ln818_2_fu_2079_p1));
    add_ln813_143_fu_2929_p2 <= std_logic_vector(unsigned(add_ln813_142_reg_3121) + unsigned(add_ln813_141_fu_2924_p2));
    add_ln813_145_fu_2940_p2 <= std_logic_vector(unsigned(trunc_ln818_103_fu_2362_p4) + unsigned(trunc_ln818_107_fu_2408_p4));
    add_ln813_146_fu_2946_p2 <= std_logic_vector(unsigned(trunc_ln818_111_reg_3091) + unsigned(sext_ln818_3_fu_2741_p1));
    add_ln813_147_fu_2951_p2 <= std_logic_vector(unsigned(add_ln813_146_fu_2946_p2) + unsigned(add_ln813_145_fu_2940_p2));
    add_ln813_148_fu_2957_p2 <= std_logic_vector(signed(sext_ln813_fu_2828_p1) + signed(sext_ln70_fu_2510_p1));
    add_ln813_149_fu_2967_p2 <= std_logic_vector(signed(sext_ln70_1_fu_2593_p1) + signed(sext_ln70_2_fu_2669_p1));
    add_ln813_150_fu_2977_p2 <= std_logic_vector(signed(sext_ln813_36_fu_2973_p1) + signed(sext_ln813_35_fu_2963_p1));
    add_ln813_fu_2832_p2 <= std_logic_vector(unsigned(trunc_ln818_120_fu_2609_p4) + unsigned(trunc_ln818_116_fu_2529_p4));
    and_ln360_fu_1962_p2 <= (icmp_ln360_fu_1956_p2 and icmp_ln360_1_reg_3021);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_done_reg, layer25_out_empty_n, icmp_ln21_reg_3017, layer2_out_full_n, and_ln360_reg_3082_pp0_iter2_reg, ap_start_int)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_const_lv1_1 = and_ln360_reg_3082_pp0_iter2_reg) and (layer2_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((icmp_ln21_reg_3017 = ap_const_lv1_0) and (layer25_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_done_reg, layer25_out_empty_n, icmp_ln21_reg_3017, layer2_out_full_n, and_ln360_reg_3082_pp0_iter2_reg, ap_start_int)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_const_lv1_1 = and_ln360_reg_3082_pp0_iter2_reg) and (layer2_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((icmp_ln21_reg_3017 = ap_const_lv1_0) and (layer25_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_done_reg, layer25_out_empty_n, icmp_ln21_reg_3017, layer2_out_full_n, and_ln360_reg_3082_pp0_iter2_reg, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_const_lv1_1 = and_ln360_reg_3082_pp0_iter2_reg) and (layer2_out_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((icmp_ln21_reg_3017 = ap_const_lv1_0) and (layer25_out_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(layer25_out_empty_n, icmp_ln21_reg_3017)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((icmp_ln21_reg_3017 = ap_const_lv1_0) and (layer25_out_empty_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter3_assign_proc : process(layer2_out_full_n, and_ln360_reg_3082_pp0_iter2_reg)
    begin
                ap_block_state4_pp0_stage0_iter3 <= ((ap_const_lv1_1 = and_ln360_reg_3082_pp0_iter2_reg) and (layer2_out_full_n = ap_const_logic_0));
    end process;


    ap_condition_196_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
                ap_condition_196 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_235_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln21_fu_1841_p2, ap_block_pp0_stage0_11001, ap_start_int)
    begin
                ap_condition_235 <= ((icmp_ln21_fu_1841_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln21_fu_1841_p2, ap_start_int)
    begin
        if (((icmp_ln21_fu_1841_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_done_reg, ap_block_pp0_stage0_subdone, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_storemerge_phi_fu_153_p4_assign_proc : process(icmp_ln21_reg_3017, icmp_ln384_reg_3026, select_ln391_fu_2248_p3, ap_phi_reg_pp0_iter1_storemerge_reg_149)
    begin
        if (((icmp_ln21_reg_3017 = ap_const_lv1_0) and (icmp_ln384_reg_3026 = ap_const_lv1_0))) then 
            ap_phi_mux_storemerge_phi_fu_153_p4 <= select_ln391_fu_2248_p3;
        else 
            ap_phi_mux_storemerge_phi_fu_153_p4 <= ap_phi_reg_pp0_iter1_storemerge_reg_149;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_reg_149 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_iw_7_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_iw_fu_132, ap_loop_init, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start_int = ap_const_logic_1) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_iw_7 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_i_iw_7 <= i_iw_fu_132;
        end if; 
    end process;

    i_iw_8_fu_1847_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_iw_7) + unsigned(ap_const_lv4_1));
    icmp_ln21_fu_1841_p2 <= "1" when (ap_sig_allocacmp_i_iw_7 = ap_const_lv4_F) else "0";
    icmp_ln360_1_fu_1857_p2 <= "1" when (signed(pX_3) > signed(ap_const_lv32_6)) else "0";
    icmp_ln360_fu_1956_p2 <= "1" when (sX_3 = ap_const_lv32_7) else "0";
    icmp_ln384_fu_1869_p2 <= "1" when (add_ln384_fu_1863_p2 = ap_const_lv32_F) else "0";

    layer25_out_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, layer25_out_empty_n, icmp_ln21_reg_3017, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln21_reg_3017 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer25_out_blk_n <= layer25_out_empty_n;
        else 
            layer25_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer25_out_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln21_reg_3017, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln21_reg_3017 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer25_out_read <= ap_const_logic_1;
        else 
            layer25_out_read <= ap_const_logic_0;
        end if; 
    end process;


    layer2_out_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, layer2_out_full_n, and_ln360_reg_3082_pp0_iter2_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_lv1_1 = and_ln360_reg_3082_pp0_iter2_reg) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            layer2_out_blk_n <= layer2_out_full_n;
        else 
            layer2_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    layer2_out_din <= (((((((((((((((res_out_V_3_reg_3153 & res_out_V_reg_3126) & res_out_V_reg_3126) & res_out_V_reg_3126) & res_out_V_2_reg_3148) & res_out_V_reg_3126) & res_out_V_reg_3126) & res_out_V_reg_3126) & res_out_V_reg_3126) & res_out_V_reg_3126) & res_out_V_reg_3126) & res_out_V_reg_3126) & res_out_V_reg_3126) & res_out_V_reg_3126) & res_out_V_4_reg_3143) & res_out_V_reg_3126);

    layer2_out_write_assign_proc : process(ap_enable_reg_pp0_iter3, and_ln360_reg_3082_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln360_reg_3082_pp0_iter2_reg) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            layer2_out_write <= ap_const_logic_1;
        else 
            layer2_out_write <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln1270_fu_242_p1 <= ap_const_lv21_13(6 - 1 downto 0);
    r_V_169_fu_2324_p2 <= std_logic_vector(signed(sext_ln1273_1_fu_2308_p1) - signed(sext_ln1273_2_fu_2320_p1));
    r_V_170_fu_2356_p2 <= std_logic_vector(signed(sext_ln1273_fu_2272_p1) - signed(sext_ln1273_3_fu_2352_p1));
    r_V_171_fu_1975_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(shl_ln1273_65_fu_1967_p3));
    r_V_172_fu_2386_p2 <= std_logic_vector(signed(sext_ln1273_5_fu_2382_p1) - signed(sext_ln1273_4_fu_2372_p1));
    r_V_173_fu_2003_p2 <= std_logic_vector(unsigned(ap_const_lv20_0) - unsigned(sext_ln1273_6_fu_1999_p1));
    r_V_174_fu_2402_p2 <= std_logic_vector(signed(sext_ln1273_5_fu_2382_p1) + signed(sext_ln1273_4_fu_2372_p1));
    r_V_175_fu_2425_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(shl_ln1273_68_fu_2418_p3));
    r_V_176_fu_253_p0 <= sext_ln1273_7_fu_2023_p1(16 - 1 downto 0);
    r_V_176_fu_253_p1 <= ap_const_lv21_B(5 - 1 downto 0);
    r_V_177_fu_2063_p2 <= std_logic_vector(signed(sext_ln1273_9_fu_2059_p1) - signed(sext_ln1273_8_fu_2047_p1));
    r_V_178_fu_178_p0 <= sext_ln1273_7_fu_2023_p1(16 - 1 downto 0);
    r_V_178_fu_178_p1 <= ap_const_lv21_1FFFF3(5 - 1 downto 0);
    r_V_179_fu_2451_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(shl_ln1273_71_fu_2444_p3));
    r_V_180_fu_2478_p2 <= std_logic_vector(signed(sext_ln1273_11_fu_2441_p1) - signed(sext_ln1273_12_fu_2474_p1));
    r_V_181_fu_2494_p2 <= std_logic_vector(signed(sext_ln1273_12_fu_2474_p1) + signed(sext_ln1273_11_fu_2441_p1));
    r_V_182_fu_2109_p2 <= std_logic_vector(signed(sext_ln1273_13_fu_2105_p1) + signed(sext_ln1273_10_fu_2093_p1));
    r_V_183_fu_2523_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(shl_ln1273_74_fu_2516_p3));
    r_V_184_fu_2561_p2 <= std_logic_vector(signed(sext_ln1273_16_fu_2546_p1) - signed(sext_ln1273_17_fu_2557_p1));
    r_V_185_fu_2577_p2 <= std_logic_vector(signed(sext_ln1273_16_fu_2546_p1) + signed(sext_ln1273_15_fu_2513_p1));
    r_V_186_fu_2141_p2 <= std_logic_vector(signed(sext_ln1273_18_fu_2137_p1) - signed(sext_ln1273_14_fu_2125_p1));
    r_V_187_fu_2603_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(shl_ln1273_78_fu_2596_p3));
    r_V_188_fu_2169_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(sext_ln1273_19_fu_2165_p1));
    r_V_189_fu_2644_p2 <= std_logic_vector(signed(sext_ln1273_21_fu_2629_p1) - signed(sext_ln1273_22_fu_2640_p1));
    r_V_190_fu_2198_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(shl_ln1273_82_fu_2190_p3));
    r_V_191_fu_2698_p2 <= std_logic_vector(signed(sext_ln1273_24_fu_2683_p1) - signed(sext_ln1273_25_fu_2694_p1));
    r_V_192_fu_2725_p2 <= std_logic_vector(signed(sext_ln1273_26_fu_2721_p1) + signed(sext_ln1273_23_fu_2673_p1));
    r_V_193_fu_2752_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(shl_ln1273_86_fu_2745_p3));
    r_V_194_fu_2803_p2 <= std_logic_vector(signed(sext_ln1273_28_fu_2788_p1) - signed(sext_ln1273_29_fu_2799_p1));
    r_V_fu_2284_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(shl_ln_fu_2276_p3));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    res_out_V_2_fu_2934_p2 <= std_logic_vector(unsigned(add_ln813_143_fu_2929_p2) + unsigned(add_ln813_140_fu_2918_p2));
    res_out_V_3_fu_2983_p2 <= std_logic_vector(unsigned(add_ln813_150_fu_2977_p2) + unsigned(add_ln813_147_fu_2951_p2));
    res_out_V_4_fu_2906_p2 <= std_logic_vector(unsigned(add_ln813_137_fu_2900_p2) + unsigned(add_ln813_134_fu_2878_p2));
    res_out_V_fu_2861_p2 <= std_logic_vector(unsigned(add_ln813_130_fu_2856_p2) + unsigned(add_ln813_126_fu_2844_p2));
    select_ln391_fu_2248_p3 <= 
        ap_const_lv32_7 when (icmp_ln360_fu_1956_p2(0) = '1') else 
        add_ln391_fu_2242_p2;
    sext_ln1273_10_fu_2093_p0 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_3;
        sext_ln1273_10_fu_2093_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1273_10_fu_2093_p0),19));

        sext_ln1273_11_fu_2441_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a_V_3_reg_3051),21));

        sext_ln1273_12_fu_2474_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_72_fu_2467_p3),21));

        sext_ln1273_13_fu_2105_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_73_fu_2097_p3),19));

    sext_ln1273_14_fu_2125_p0 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_2;
        sext_ln1273_14_fu_2125_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1273_14_fu_2125_p0),19));

        sext_ln1273_15_fu_2513_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a_V_4_reg_3058),21));

        sext_ln1273_16_fu_2546_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_75_fu_2539_p3),21));

        sext_ln1273_17_fu_2557_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_76_fu_2550_p3),21));

        sext_ln1273_18_fu_2137_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_77_fu_2129_p3),19));

        sext_ln1273_19_fu_2165_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_79_fu_2157_p3),18));

        sext_ln1273_1_fu_2308_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_s_fu_2300_p3),20));

        sext_ln1273_20_fu_2619_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_121_reg_3106),14));

        sext_ln1273_21_fu_2629_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_80_fu_2622_p3),21));

        sext_ln1273_22_fu_2640_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_81_fu_2633_p3),21));

        sext_ln1273_23_fu_2673_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a_V_6_reg_3074),20));

        sext_ln1273_24_fu_2683_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_83_fu_2676_p3),21));

        sext_ln1273_25_fu_2694_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_84_fu_2687_p3),21));

        sext_ln1273_26_fu_2721_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_85_fu_2714_p3),20));

        sext_ln1273_27_fu_2777_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_129_fu_2768_p4),14));

        sext_ln1273_28_fu_2788_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_87_fu_2781_p3),21));

        sext_ln1273_29_fu_2799_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_88_fu_2792_p3),21));

        sext_ln1273_2_fu_2320_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_63_fu_2312_p3),20));

        sext_ln1273_3_fu_2352_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_64_fu_2344_p3),21));

        sext_ln1273_4_fu_2372_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a_V_1_reg_3039),21));

        sext_ln1273_5_fu_2382_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_66_fu_2375_p3),21));

        sext_ln1273_6_fu_1999_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_67_fu_1991_p3),20));

    sext_ln1273_7_fu_2023_p0 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_4;
        sext_ln1273_7_fu_2023_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1273_7_fu_2023_p0),21));

        sext_ln1273_8_fu_2047_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_69_fu_2039_p3),20));

        sext_ln1273_9_fu_2059_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_70_fu_2051_p3),20));

    sext_ln1273_fu_2272_p0 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_6;
        sext_ln1273_fu_2272_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1273_fu_2272_p0),21));

        sext_ln70_1_fu_2593_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_119_reg_3101),15));

        sext_ln70_2_fu_2669_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_123_fu_2660_p4),15));

        sext_ln70_fu_2510_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_115_reg_3096),15));

        sext_ln813_34_fu_2896_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln813_136_fu_2890_p2),16));

        sext_ln813_35_fu_2963_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln813_148_fu_2957_p2),16));

        sext_ln813_36_fu_2973_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln813_149_fu_2967_p2),16));

        sext_ln813_fu_2828_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_131_fu_2819_p4),15));

        sext_ln818_1_fu_2019_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_106_fu_2009_p4),16));

        sext_ln818_2_fu_2079_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_110_fu_2069_p4),16));

        sext_ln818_3_fu_2741_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_127_fu_2731_p4),16));

        sext_ln818_fu_2340_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_s_fu_2330_p4),16));

    shl_ln1273_63_fu_2312_p1 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_6;
    shl_ln1273_63_fu_2312_p3 <= (shl_ln1273_63_fu_2312_p1 & ap_const_lv1_0);
    shl_ln1273_64_fu_2344_p1 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_6;
    shl_ln1273_64_fu_2344_p3 <= (shl_ln1273_64_fu_2344_p1 & ap_const_lv4_0);
    shl_ln1273_65_fu_1967_p1 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_5;
    shl_ln1273_65_fu_1967_p3 <= (shl_ln1273_65_fu_1967_p1 & ap_const_lv5_0);
    shl_ln1273_66_fu_2375_p3 <= (a_V_1_reg_3039 & ap_const_lv4_0);
    shl_ln1273_67_fu_1991_p1 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_5;
    shl_ln1273_67_fu_1991_p3 <= (shl_ln1273_67_fu_1991_p1 & ap_const_lv3_0);
    shl_ln1273_68_fu_2418_p3 <= (a_V_2_reg_3046 & ap_const_lv5_0);
    shl_ln1273_69_fu_2039_p1 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_4;
    shl_ln1273_69_fu_2039_p3 <= (shl_ln1273_69_fu_2039_p1 & ap_const_lv3_0);
    shl_ln1273_70_fu_2051_p1 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_4;
    shl_ln1273_70_fu_2051_p3 <= (shl_ln1273_70_fu_2051_p1 & ap_const_lv1_0);
    shl_ln1273_71_fu_2444_p3 <= (a_V_3_reg_3051 & ap_const_lv5_0);
    shl_ln1273_72_fu_2467_p3 <= (a_V_3_reg_3051 & ap_const_lv4_0);
    shl_ln1273_73_fu_2097_p1 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_3;
    shl_ln1273_73_fu_2097_p3 <= (shl_ln1273_73_fu_2097_p1 & ap_const_lv2_0);
    shl_ln1273_74_fu_2516_p3 <= (a_V_4_reg_3058 & ap_const_lv5_0);
    shl_ln1273_75_fu_2539_p3 <= (a_V_4_reg_3058 & ap_const_lv4_0);
    shl_ln1273_76_fu_2550_p3 <= (a_V_4_reg_3058 & ap_const_lv1_0);
    shl_ln1273_77_fu_2129_p1 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_2;
    shl_ln1273_77_fu_2129_p3 <= (shl_ln1273_77_fu_2129_p1 & ap_const_lv2_0);
    shl_ln1273_78_fu_2596_p3 <= (a_V_5_reg_3066 & ap_const_lv5_0);
    shl_ln1273_79_fu_2157_p3 <= (void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_1 & ap_const_lv1_0);
    shl_ln1273_80_fu_2622_p3 <= (a_V_5_reg_3066 & ap_const_lv4_0);
    shl_ln1273_81_fu_2633_p3 <= (a_V_5_reg_3066 & ap_const_lv2_0);
    shl_ln1273_82_fu_2190_p1 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data;
    shl_ln1273_82_fu_2190_p3 <= (shl_ln1273_82_fu_2190_p1 & ap_const_lv5_0);
    shl_ln1273_83_fu_2676_p3 <= (a_V_6_reg_3074 & ap_const_lv4_0);
    shl_ln1273_84_fu_2687_p3 <= (a_V_6_reg_3074 & ap_const_lv1_0);
    shl_ln1273_85_fu_2714_p3 <= (a_V_6_reg_3074 & ap_const_lv3_0);
    shl_ln1273_86_fu_2745_p3 <= (a_V_7_reg_3030 & ap_const_lv5_0);
    shl_ln1273_87_fu_2781_p3 <= (a_V_7_reg_3030 & ap_const_lv4_0);
    shl_ln1273_88_fu_2792_p3 <= (a_V_7_reg_3030 & ap_const_lv1_0);
    shl_ln1273_s_fu_2300_p1 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_6;
    shl_ln1273_s_fu_2300_p3 <= (shl_ln1273_s_fu_2300_p1 & ap_const_lv3_0);
    shl_ln_fu_2276_p1 <= void_compute_output_buffer_1d_array_const_stream_weight_t_bias_t_kernel_data_6;
    shl_ln_fu_2276_p3 <= (shl_ln_fu_2276_p1 & ap_const_lv5_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln818_103_fu_2362_p4 <= r_V_170_fu_2356_p2(20 downto 5);
    trunc_ln818_104_fu_1981_p4 <= r_V_171_fu_1975_p2(20 downto 5);
    trunc_ln818_105_fu_2392_p4 <= r_V_172_fu_2386_p2(20 downto 5);
    trunc_ln818_106_fu_2009_p4 <= r_V_173_fu_2003_p2(19 downto 5);
    trunc_ln818_107_fu_2408_p4 <= r_V_174_fu_2402_p2(20 downto 5);
    trunc_ln818_108_fu_2431_p4 <= r_V_175_fu_2425_p2(20 downto 5);
    trunc_ln818_110_fu_2069_p4 <= r_V_177_fu_2063_p2(19 downto 5);
    trunc_ln818_112_fu_2457_p4 <= r_V_179_fu_2451_p2(20 downto 5);
    trunc_ln818_113_fu_2484_p4 <= r_V_180_fu_2478_p2(20 downto 5);
    trunc_ln818_114_fu_2500_p4 <= r_V_181_fu_2494_p2(20 downto 5);
    trunc_ln818_116_fu_2529_p4 <= r_V_183_fu_2523_p2(20 downto 5);
    trunc_ln818_117_fu_2567_p4 <= r_V_184_fu_2561_p2(20 downto 5);
    trunc_ln818_118_fu_2583_p4 <= r_V_185_fu_2577_p2(20 downto 5);
    trunc_ln818_120_fu_2609_p4 <= r_V_187_fu_2603_p2(20 downto 5);
    trunc_ln818_122_fu_2650_p4 <= r_V_189_fu_2644_p2(20 downto 5);
    trunc_ln818_123_fu_2660_p4 <= a_V_5_reg_3066(15 downto 3);
    trunc_ln818_124_fu_2204_p4 <= r_V_190_fu_2198_p2(20 downto 5);
    trunc_ln818_125_fu_2704_p4 <= r_V_191_fu_2698_p2(20 downto 5);
    trunc_ln818_127_fu_2731_p4 <= r_V_192_fu_2725_p2(19 downto 5);
    trunc_ln818_128_fu_2758_p4 <= r_V_193_fu_2752_p2(20 downto 5);
    trunc_ln818_129_fu_2768_p4 <= a_V_7_reg_3030(15 downto 3);
    trunc_ln818_130_fu_2809_p4 <= r_V_194_fu_2803_p2(20 downto 5);
    trunc_ln818_131_fu_2819_p4 <= a_V_7_reg_3030(15 downto 2);
    trunc_ln818_s_fu_2330_p4 <= r_V_169_fu_2324_p2(19 downto 5);
    trunc_ln_fu_2290_p4 <= r_V_fu_2284_p2(20 downto 5);
end behav;
